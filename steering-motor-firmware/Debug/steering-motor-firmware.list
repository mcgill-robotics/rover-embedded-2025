
steering-motor-firmware.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00008904  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003a0  08008ad8  08008ad8  00009ad8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08008e78  08008e78  0000a1dc  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08008e78  08008e78  00009e78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08008e80  08008e80  0000a1dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08008e80  08008e80  00009e80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08008e84  08008e84  00009e84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001dc  20000000  08008e88  0000a000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000033c  200001dc  08009064  0000a1dc  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000518  08009064  0000a518  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000a1dc  2**0
                  CONTENTS, READONLY
 12 .debug_info   00010f46  00000000  00000000  0000a20c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000029b2  00000000  00000000  0001b152  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000fd8  00000000  00000000  0001db08  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000c45  00000000  00000000  0001eae0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000247d7  00000000  00000000  0001f725  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00013e26  00000000  00000000  00043efc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000d7586  00000000  00000000  00057d22  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0012f2a8  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000051d4  00000000  00000000  0012f2ec  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000009a  00000000  00000000  001344c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200001dc 	.word	0x200001dc
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08008abc 	.word	0x08008abc

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200001e0 	.word	0x200001e0
 800020c:	08008abc 	.word	0x08008abc

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <strlen>:
 80002b0:	4603      	mov	r3, r0
 80002b2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002b6:	2a00      	cmp	r2, #0
 80002b8:	d1fb      	bne.n	80002b2 <strlen+0x2>
 80002ba:	1a18      	subs	r0, r3, r0
 80002bc:	3801      	subs	r0, #1
 80002be:	4770      	bx	lr

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	@ 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_uldivmod>:
 8000c88:	b953      	cbnz	r3, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8a:	b94a      	cbnz	r2, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8c:	2900      	cmp	r1, #0
 8000c8e:	bf08      	it	eq
 8000c90:	2800      	cmpeq	r0, #0
 8000c92:	bf1c      	itt	ne
 8000c94:	f04f 31ff 	movne.w	r1, #4294967295
 8000c98:	f04f 30ff 	movne.w	r0, #4294967295
 8000c9c:	f000 b988 	b.w	8000fb0 <__aeabi_idiv0>
 8000ca0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ca4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ca8:	f000 f806 	bl	8000cb8 <__udivmoddi4>
 8000cac:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cb0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cb4:	b004      	add	sp, #16
 8000cb6:	4770      	bx	lr

08000cb8 <__udivmoddi4>:
 8000cb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cbc:	9d08      	ldr	r5, [sp, #32]
 8000cbe:	468e      	mov	lr, r1
 8000cc0:	4604      	mov	r4, r0
 8000cc2:	4688      	mov	r8, r1
 8000cc4:	2b00      	cmp	r3, #0
 8000cc6:	d14a      	bne.n	8000d5e <__udivmoddi4+0xa6>
 8000cc8:	428a      	cmp	r2, r1
 8000cca:	4617      	mov	r7, r2
 8000ccc:	d962      	bls.n	8000d94 <__udivmoddi4+0xdc>
 8000cce:	fab2 f682 	clz	r6, r2
 8000cd2:	b14e      	cbz	r6, 8000ce8 <__udivmoddi4+0x30>
 8000cd4:	f1c6 0320 	rsb	r3, r6, #32
 8000cd8:	fa01 f806 	lsl.w	r8, r1, r6
 8000cdc:	fa20 f303 	lsr.w	r3, r0, r3
 8000ce0:	40b7      	lsls	r7, r6
 8000ce2:	ea43 0808 	orr.w	r8, r3, r8
 8000ce6:	40b4      	lsls	r4, r6
 8000ce8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000cec:	fa1f fc87 	uxth.w	ip, r7
 8000cf0:	fbb8 f1fe 	udiv	r1, r8, lr
 8000cf4:	0c23      	lsrs	r3, r4, #16
 8000cf6:	fb0e 8811 	mls	r8, lr, r1, r8
 8000cfa:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000cfe:	fb01 f20c 	mul.w	r2, r1, ip
 8000d02:	429a      	cmp	r2, r3
 8000d04:	d909      	bls.n	8000d1a <__udivmoddi4+0x62>
 8000d06:	18fb      	adds	r3, r7, r3
 8000d08:	f101 30ff 	add.w	r0, r1, #4294967295
 8000d0c:	f080 80ea 	bcs.w	8000ee4 <__udivmoddi4+0x22c>
 8000d10:	429a      	cmp	r2, r3
 8000d12:	f240 80e7 	bls.w	8000ee4 <__udivmoddi4+0x22c>
 8000d16:	3902      	subs	r1, #2
 8000d18:	443b      	add	r3, r7
 8000d1a:	1a9a      	subs	r2, r3, r2
 8000d1c:	b2a3      	uxth	r3, r4
 8000d1e:	fbb2 f0fe 	udiv	r0, r2, lr
 8000d22:	fb0e 2210 	mls	r2, lr, r0, r2
 8000d26:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000d2a:	fb00 fc0c 	mul.w	ip, r0, ip
 8000d2e:	459c      	cmp	ip, r3
 8000d30:	d909      	bls.n	8000d46 <__udivmoddi4+0x8e>
 8000d32:	18fb      	adds	r3, r7, r3
 8000d34:	f100 32ff 	add.w	r2, r0, #4294967295
 8000d38:	f080 80d6 	bcs.w	8000ee8 <__udivmoddi4+0x230>
 8000d3c:	459c      	cmp	ip, r3
 8000d3e:	f240 80d3 	bls.w	8000ee8 <__udivmoddi4+0x230>
 8000d42:	443b      	add	r3, r7
 8000d44:	3802      	subs	r0, #2
 8000d46:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000d4a:	eba3 030c 	sub.w	r3, r3, ip
 8000d4e:	2100      	movs	r1, #0
 8000d50:	b11d      	cbz	r5, 8000d5a <__udivmoddi4+0xa2>
 8000d52:	40f3      	lsrs	r3, r6
 8000d54:	2200      	movs	r2, #0
 8000d56:	e9c5 3200 	strd	r3, r2, [r5]
 8000d5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d5e:	428b      	cmp	r3, r1
 8000d60:	d905      	bls.n	8000d6e <__udivmoddi4+0xb6>
 8000d62:	b10d      	cbz	r5, 8000d68 <__udivmoddi4+0xb0>
 8000d64:	e9c5 0100 	strd	r0, r1, [r5]
 8000d68:	2100      	movs	r1, #0
 8000d6a:	4608      	mov	r0, r1
 8000d6c:	e7f5      	b.n	8000d5a <__udivmoddi4+0xa2>
 8000d6e:	fab3 f183 	clz	r1, r3
 8000d72:	2900      	cmp	r1, #0
 8000d74:	d146      	bne.n	8000e04 <__udivmoddi4+0x14c>
 8000d76:	4573      	cmp	r3, lr
 8000d78:	d302      	bcc.n	8000d80 <__udivmoddi4+0xc8>
 8000d7a:	4282      	cmp	r2, r0
 8000d7c:	f200 8105 	bhi.w	8000f8a <__udivmoddi4+0x2d2>
 8000d80:	1a84      	subs	r4, r0, r2
 8000d82:	eb6e 0203 	sbc.w	r2, lr, r3
 8000d86:	2001      	movs	r0, #1
 8000d88:	4690      	mov	r8, r2
 8000d8a:	2d00      	cmp	r5, #0
 8000d8c:	d0e5      	beq.n	8000d5a <__udivmoddi4+0xa2>
 8000d8e:	e9c5 4800 	strd	r4, r8, [r5]
 8000d92:	e7e2      	b.n	8000d5a <__udivmoddi4+0xa2>
 8000d94:	2a00      	cmp	r2, #0
 8000d96:	f000 8090 	beq.w	8000eba <__udivmoddi4+0x202>
 8000d9a:	fab2 f682 	clz	r6, r2
 8000d9e:	2e00      	cmp	r6, #0
 8000da0:	f040 80a4 	bne.w	8000eec <__udivmoddi4+0x234>
 8000da4:	1a8a      	subs	r2, r1, r2
 8000da6:	0c03      	lsrs	r3, r0, #16
 8000da8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000dac:	b280      	uxth	r0, r0
 8000dae:	b2bc      	uxth	r4, r7
 8000db0:	2101      	movs	r1, #1
 8000db2:	fbb2 fcfe 	udiv	ip, r2, lr
 8000db6:	fb0e 221c 	mls	r2, lr, ip, r2
 8000dba:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000dbe:	fb04 f20c 	mul.w	r2, r4, ip
 8000dc2:	429a      	cmp	r2, r3
 8000dc4:	d907      	bls.n	8000dd6 <__udivmoddi4+0x11e>
 8000dc6:	18fb      	adds	r3, r7, r3
 8000dc8:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000dcc:	d202      	bcs.n	8000dd4 <__udivmoddi4+0x11c>
 8000dce:	429a      	cmp	r2, r3
 8000dd0:	f200 80e0 	bhi.w	8000f94 <__udivmoddi4+0x2dc>
 8000dd4:	46c4      	mov	ip, r8
 8000dd6:	1a9b      	subs	r3, r3, r2
 8000dd8:	fbb3 f2fe 	udiv	r2, r3, lr
 8000ddc:	fb0e 3312 	mls	r3, lr, r2, r3
 8000de0:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 8000de4:	fb02 f404 	mul.w	r4, r2, r4
 8000de8:	429c      	cmp	r4, r3
 8000dea:	d907      	bls.n	8000dfc <__udivmoddi4+0x144>
 8000dec:	18fb      	adds	r3, r7, r3
 8000dee:	f102 30ff 	add.w	r0, r2, #4294967295
 8000df2:	d202      	bcs.n	8000dfa <__udivmoddi4+0x142>
 8000df4:	429c      	cmp	r4, r3
 8000df6:	f200 80ca 	bhi.w	8000f8e <__udivmoddi4+0x2d6>
 8000dfa:	4602      	mov	r2, r0
 8000dfc:	1b1b      	subs	r3, r3, r4
 8000dfe:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 8000e02:	e7a5      	b.n	8000d50 <__udivmoddi4+0x98>
 8000e04:	f1c1 0620 	rsb	r6, r1, #32
 8000e08:	408b      	lsls	r3, r1
 8000e0a:	fa22 f706 	lsr.w	r7, r2, r6
 8000e0e:	431f      	orrs	r7, r3
 8000e10:	fa0e f401 	lsl.w	r4, lr, r1
 8000e14:	fa20 f306 	lsr.w	r3, r0, r6
 8000e18:	fa2e fe06 	lsr.w	lr, lr, r6
 8000e1c:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000e20:	4323      	orrs	r3, r4
 8000e22:	fa00 f801 	lsl.w	r8, r0, r1
 8000e26:	fa1f fc87 	uxth.w	ip, r7
 8000e2a:	fbbe f0f9 	udiv	r0, lr, r9
 8000e2e:	0c1c      	lsrs	r4, r3, #16
 8000e30:	fb09 ee10 	mls	lr, r9, r0, lr
 8000e34:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000e38:	fb00 fe0c 	mul.w	lr, r0, ip
 8000e3c:	45a6      	cmp	lr, r4
 8000e3e:	fa02 f201 	lsl.w	r2, r2, r1
 8000e42:	d909      	bls.n	8000e58 <__udivmoddi4+0x1a0>
 8000e44:	193c      	adds	r4, r7, r4
 8000e46:	f100 3aff 	add.w	sl, r0, #4294967295
 8000e4a:	f080 809c 	bcs.w	8000f86 <__udivmoddi4+0x2ce>
 8000e4e:	45a6      	cmp	lr, r4
 8000e50:	f240 8099 	bls.w	8000f86 <__udivmoddi4+0x2ce>
 8000e54:	3802      	subs	r0, #2
 8000e56:	443c      	add	r4, r7
 8000e58:	eba4 040e 	sub.w	r4, r4, lr
 8000e5c:	fa1f fe83 	uxth.w	lr, r3
 8000e60:	fbb4 f3f9 	udiv	r3, r4, r9
 8000e64:	fb09 4413 	mls	r4, r9, r3, r4
 8000e68:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000e6c:	fb03 fc0c 	mul.w	ip, r3, ip
 8000e70:	45a4      	cmp	ip, r4
 8000e72:	d908      	bls.n	8000e86 <__udivmoddi4+0x1ce>
 8000e74:	193c      	adds	r4, r7, r4
 8000e76:	f103 3eff 	add.w	lr, r3, #4294967295
 8000e7a:	f080 8082 	bcs.w	8000f82 <__udivmoddi4+0x2ca>
 8000e7e:	45a4      	cmp	ip, r4
 8000e80:	d97f      	bls.n	8000f82 <__udivmoddi4+0x2ca>
 8000e82:	3b02      	subs	r3, #2
 8000e84:	443c      	add	r4, r7
 8000e86:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000e8a:	eba4 040c 	sub.w	r4, r4, ip
 8000e8e:	fba0 ec02 	umull	lr, ip, r0, r2
 8000e92:	4564      	cmp	r4, ip
 8000e94:	4673      	mov	r3, lr
 8000e96:	46e1      	mov	r9, ip
 8000e98:	d362      	bcc.n	8000f60 <__udivmoddi4+0x2a8>
 8000e9a:	d05f      	beq.n	8000f5c <__udivmoddi4+0x2a4>
 8000e9c:	b15d      	cbz	r5, 8000eb6 <__udivmoddi4+0x1fe>
 8000e9e:	ebb8 0203 	subs.w	r2, r8, r3
 8000ea2:	eb64 0409 	sbc.w	r4, r4, r9
 8000ea6:	fa04 f606 	lsl.w	r6, r4, r6
 8000eaa:	fa22 f301 	lsr.w	r3, r2, r1
 8000eae:	431e      	orrs	r6, r3
 8000eb0:	40cc      	lsrs	r4, r1
 8000eb2:	e9c5 6400 	strd	r6, r4, [r5]
 8000eb6:	2100      	movs	r1, #0
 8000eb8:	e74f      	b.n	8000d5a <__udivmoddi4+0xa2>
 8000eba:	fbb1 fcf2 	udiv	ip, r1, r2
 8000ebe:	0c01      	lsrs	r1, r0, #16
 8000ec0:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 8000ec4:	b280      	uxth	r0, r0
 8000ec6:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000eca:	463b      	mov	r3, r7
 8000ecc:	4638      	mov	r0, r7
 8000ece:	463c      	mov	r4, r7
 8000ed0:	46b8      	mov	r8, r7
 8000ed2:	46be      	mov	lr, r7
 8000ed4:	2620      	movs	r6, #32
 8000ed6:	fbb1 f1f7 	udiv	r1, r1, r7
 8000eda:	eba2 0208 	sub.w	r2, r2, r8
 8000ede:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 8000ee2:	e766      	b.n	8000db2 <__udivmoddi4+0xfa>
 8000ee4:	4601      	mov	r1, r0
 8000ee6:	e718      	b.n	8000d1a <__udivmoddi4+0x62>
 8000ee8:	4610      	mov	r0, r2
 8000eea:	e72c      	b.n	8000d46 <__udivmoddi4+0x8e>
 8000eec:	f1c6 0220 	rsb	r2, r6, #32
 8000ef0:	fa2e f302 	lsr.w	r3, lr, r2
 8000ef4:	40b7      	lsls	r7, r6
 8000ef6:	40b1      	lsls	r1, r6
 8000ef8:	fa20 f202 	lsr.w	r2, r0, r2
 8000efc:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000f00:	430a      	orrs	r2, r1
 8000f02:	fbb3 f8fe 	udiv	r8, r3, lr
 8000f06:	b2bc      	uxth	r4, r7
 8000f08:	fb0e 3318 	mls	r3, lr, r8, r3
 8000f0c:	0c11      	lsrs	r1, r2, #16
 8000f0e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000f12:	fb08 f904 	mul.w	r9, r8, r4
 8000f16:	40b0      	lsls	r0, r6
 8000f18:	4589      	cmp	r9, r1
 8000f1a:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000f1e:	b280      	uxth	r0, r0
 8000f20:	d93e      	bls.n	8000fa0 <__udivmoddi4+0x2e8>
 8000f22:	1879      	adds	r1, r7, r1
 8000f24:	f108 3cff 	add.w	ip, r8, #4294967295
 8000f28:	d201      	bcs.n	8000f2e <__udivmoddi4+0x276>
 8000f2a:	4589      	cmp	r9, r1
 8000f2c:	d81f      	bhi.n	8000f6e <__udivmoddi4+0x2b6>
 8000f2e:	eba1 0109 	sub.w	r1, r1, r9
 8000f32:	fbb1 f9fe 	udiv	r9, r1, lr
 8000f36:	fb09 f804 	mul.w	r8, r9, r4
 8000f3a:	fb0e 1119 	mls	r1, lr, r9, r1
 8000f3e:	b292      	uxth	r2, r2
 8000f40:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000f44:	4542      	cmp	r2, r8
 8000f46:	d229      	bcs.n	8000f9c <__udivmoddi4+0x2e4>
 8000f48:	18ba      	adds	r2, r7, r2
 8000f4a:	f109 31ff 	add.w	r1, r9, #4294967295
 8000f4e:	d2c4      	bcs.n	8000eda <__udivmoddi4+0x222>
 8000f50:	4542      	cmp	r2, r8
 8000f52:	d2c2      	bcs.n	8000eda <__udivmoddi4+0x222>
 8000f54:	f1a9 0102 	sub.w	r1, r9, #2
 8000f58:	443a      	add	r2, r7
 8000f5a:	e7be      	b.n	8000eda <__udivmoddi4+0x222>
 8000f5c:	45f0      	cmp	r8, lr
 8000f5e:	d29d      	bcs.n	8000e9c <__udivmoddi4+0x1e4>
 8000f60:	ebbe 0302 	subs.w	r3, lr, r2
 8000f64:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000f68:	3801      	subs	r0, #1
 8000f6a:	46e1      	mov	r9, ip
 8000f6c:	e796      	b.n	8000e9c <__udivmoddi4+0x1e4>
 8000f6e:	eba7 0909 	sub.w	r9, r7, r9
 8000f72:	4449      	add	r1, r9
 8000f74:	f1a8 0c02 	sub.w	ip, r8, #2
 8000f78:	fbb1 f9fe 	udiv	r9, r1, lr
 8000f7c:	fb09 f804 	mul.w	r8, r9, r4
 8000f80:	e7db      	b.n	8000f3a <__udivmoddi4+0x282>
 8000f82:	4673      	mov	r3, lr
 8000f84:	e77f      	b.n	8000e86 <__udivmoddi4+0x1ce>
 8000f86:	4650      	mov	r0, sl
 8000f88:	e766      	b.n	8000e58 <__udivmoddi4+0x1a0>
 8000f8a:	4608      	mov	r0, r1
 8000f8c:	e6fd      	b.n	8000d8a <__udivmoddi4+0xd2>
 8000f8e:	443b      	add	r3, r7
 8000f90:	3a02      	subs	r2, #2
 8000f92:	e733      	b.n	8000dfc <__udivmoddi4+0x144>
 8000f94:	f1ac 0c02 	sub.w	ip, ip, #2
 8000f98:	443b      	add	r3, r7
 8000f9a:	e71c      	b.n	8000dd6 <__udivmoddi4+0x11e>
 8000f9c:	4649      	mov	r1, r9
 8000f9e:	e79c      	b.n	8000eda <__udivmoddi4+0x222>
 8000fa0:	eba1 0109 	sub.w	r1, r1, r9
 8000fa4:	46c4      	mov	ip, r8
 8000fa6:	fbb1 f9fe 	udiv	r9, r1, lr
 8000faa:	fb09 f804 	mul.w	r8, r9, r4
 8000fae:	e7c4      	b.n	8000f3a <__udivmoddi4+0x282>

08000fb0 <__aeabi_idiv0>:
 8000fb0:	4770      	bx	lr
 8000fb2:	bf00      	nop

08000fb4 <get_CAN_transmitter>:

static StartWatchdog s_startWd = { .firstTick = 0, .attempts = 0 };


//The next functions here are to retrieve the correct pattern of bits from the received CAN message
uint8_t get_CAN_transmitter (uint16_t CAN_ID) {
 8000fb4:	b480      	push	{r7}
 8000fb6:	b083      	sub	sp, #12
 8000fb8:	af00      	add	r7, sp, #0
 8000fba:	4603      	mov	r3, r0
 8000fbc:	80fb      	strh	r3, [r7, #6]
	return (CAN_ID & SENDER_DEVICE_MASK) >> SENDER_DEVICE_SHIFT;
 8000fbe:	88fb      	ldrh	r3, [r7, #6]
 8000fc0:	0a9b      	lsrs	r3, r3, #10
 8000fc2:	b2db      	uxtb	r3, r3
 8000fc4:	f003 0301 	and.w	r3, r3, #1
 8000fc8:	b2db      	uxtb	r3, r3
}
 8000fca:	4618      	mov	r0, r3
 8000fcc:	370c      	adds	r7, #12
 8000fce:	46bd      	mov	sp, r7
 8000fd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fd4:	4770      	bx	lr

08000fd6 <get_CAN_action>:
uint8_t get_CAN_action (uint16_t CAN_ID) {
 8000fd6:	b480      	push	{r7}
 8000fd8:	b083      	sub	sp, #12
 8000fda:	af00      	add	r7, sp, #0
 8000fdc:	4603      	mov	r3, r0
 8000fde:	80fb      	strh	r3, [r7, #6]
	return (CAN_ID & NACTION_READ_DEVICE_MASK) >> NACTION_READ_ID_DEVICE_SHIFT;
 8000fe0:	88fb      	ldrh	r3, [r7, #6]
 8000fe2:	0a5b      	lsrs	r3, r3, #9
 8000fe4:	b2db      	uxtb	r3, r3
 8000fe6:	f003 0301 	and.w	r3, r3, #1
 8000fea:	b2db      	uxtb	r3, r3
}
 8000fec:	4618      	mov	r0, r3
 8000fee:	370c      	adds	r7, #12
 8000ff0:	46bd      	mov	sp, r7
 8000ff2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ff6:	4770      	bx	lr

08000ff8 <get_CAN_motor_mov_type>:
uint8_t get_CAN_motor_mov_type (uint16_t CAN_ID) {
 8000ff8:	b480      	push	{r7}
 8000ffa:	b083      	sub	sp, #12
 8000ffc:	af00      	add	r7, sp, #0
 8000ffe:	4603      	mov	r3, r0
 8001000:	80fb      	strh	r3, [r7, #6]
	return (CAN_ID & NMULTI_SINGLE_DEVICE_MASK) >> NMULTI_SINGLE_SHIFT;
 8001002:	88fb      	ldrh	r3, [r7, #6]
 8001004:	121b      	asrs	r3, r3, #8
 8001006:	b2db      	uxtb	r3, r3
 8001008:	f003 0301 	and.w	r3, r3, #1
 800100c:	b2db      	uxtb	r3, r3
}
 800100e:	4618      	mov	r0, r3
 8001010:	370c      	adds	r7, #12
 8001012:	46bd      	mov	sp, r7
 8001014:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001018:	4770      	bx	lr

0800101a <get_CAN_motor_type>:
uint8_t get_CAN_motor_type (uint16_t CAN_ID) {
 800101a:	b480      	push	{r7}
 800101c:	b083      	sub	sp, #12
 800101e:	af00      	add	r7, sp, #0
 8001020:	4603      	mov	r3, r0
 8001022:	80fb      	strh	r3, [r7, #6]
	return (CAN_ID & NDRIVE_STEETING_DEVICE_MASK) >> NDRIVE_STEERING_SHIFT;
 8001024:	88fb      	ldrh	r3, [r7, #6]
 8001026:	11db      	asrs	r3, r3, #7
 8001028:	b2db      	uxtb	r3, r3
 800102a:	f003 0301 	and.w	r3, r3, #1
 800102e:	b2db      	uxtb	r3, r3
}
 8001030:	4618      	mov	r0, r3
 8001032:	370c      	adds	r7, #12
 8001034:	46bd      	mov	sp, r7
 8001036:	f85d 7b04 	ldr.w	r7, [sp], #4
 800103a:	4770      	bx	lr

0800103c <get_CAN_SPEC>:
uint8_t get_CAN_SPEC (uint16_t CAN_ID) {
 800103c:	b480      	push	{r7}
 800103e:	b083      	sub	sp, #12
 8001040:	af00      	add	r7, sp, #0
 8001042:	4603      	mov	r3, r0
 8001044:	80fb      	strh	r3, [r7, #6]
	return (CAN_ID & MSG_SPECIFICATION_DEVICE_MASK) >> MSG_SPECIFICATION_SHIFT;
 8001046:	88fb      	ldrh	r3, [r7, #6]
 8001048:	111b      	asrs	r3, r3, #4
 800104a:	b2db      	uxtb	r3, r3
 800104c:	f003 0307 	and.w	r3, r3, #7
 8001050:	b2db      	uxtb	r3, r3
}
 8001052:	4618      	mov	r0, r3
 8001054:	370c      	adds	r7, #12
 8001056:	46bd      	mov	sp, r7
 8001058:	f85d 7b04 	ldr.w	r7, [sp], #4
 800105c:	4770      	bx	lr

0800105e <get_CAN_device_ID>:
int get_CAN_device_ID (uint16_t CAN_ID) {
 800105e:	b480      	push	{r7}
 8001060:	b083      	sub	sp, #12
 8001062:	af00      	add	r7, sp, #0
 8001064:	4603      	mov	r3, r0
 8001066:	80fb      	strh	r3, [r7, #6]
	return (CAN_ID & ID_DEVICE_MASK);
 8001068:	88fb      	ldrh	r3, [r7, #6]
 800106a:	f003 030f 	and.w	r3, r3, #15
}
 800106e:	4618      	mov	r0, r3
 8001070:	370c      	adds	r7, #12
 8001072:	46bd      	mov	sp, r7
 8001074:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001078:	4770      	bx	lr
	...

0800107c <CAN_Parse_MSG>:

/*
 * This function includes the main control flow for CAN commands.
 */
void CAN_Parse_MSG (CAN_RxHeaderTypeDef *rxHeader, uint8_t *rxData){
 800107c:	b580      	push	{r7, lr}
 800107e:	b086      	sub	sp, #24
 8001080:	af00      	add	r7, sp, #0
 8001082:	6078      	str	r0, [r7, #4]
 8001084:	6039      	str	r1, [r7, #0]

	////////////////////////////////////////////////////////////////////////////////////////////////////////
//	uart_debug_print("Parsing the ID...\r\n");
	////////////////////////////////////////////////////////////////////////////////////////////////////////
	float information = SingleExtractFloatFromCAN(rxData);
 8001086:	6838      	ldr	r0, [r7, #0]
 8001088:	f000 f966 	bl	8001358 <SingleExtractFloatFromCAN>
 800108c:	ed87 0a05 	vstr	s0, [r7, #20]

	ParsedCANID CANMessage; //initialize a struct for the received message
	uint16_t msg_ID = rxHeader->StdId & 0x07ff;//rxHeader->Identifier & 0x07ff ; // We only care about the first 11 bits here
 8001090:	687b      	ldr	r3, [r7, #4]
 8001092:	681b      	ldr	r3, [r3, #0]
 8001094:	b29b      	uxth	r3, r3
 8001096:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800109a:	827b      	strh	r3, [r7, #18]

	// First check to see who is transmitting --> ESCS cannot command other ECSs
	CANMessage.messageSender = (Transmitter) get_CAN_transmitter(msg_ID);
 800109c:	8a7b      	ldrh	r3, [r7, #18]
 800109e:	4618      	mov	r0, r3
 80010a0:	f7ff ff88 	bl	8000fb4 <get_CAN_transmitter>
 80010a4:	4603      	mov	r3, r0
 80010a6:	723b      	strb	r3, [r7, #8]
	if (CANMessage.messageSender == SLAVE){
 80010a8:	7a3b      	ldrb	r3, [r7, #8]
 80010aa:	2b01      	cmp	r3, #1
 80010ac:	d042      	beq.n	8001134 <CAN_Parse_MSG+0xb8>
		return;
	}

	//Check to make sure the command is directed toward the ESC
	CANMessage.motorType = (MotorType) get_CAN_motor_type(msg_ID);
 80010ae:	8a7b      	ldrh	r3, [r7, #18]
 80010b0:	4618      	mov	r0, r3
 80010b2:	f7ff ffb2 	bl	800101a <get_CAN_motor_type>
 80010b6:	4603      	mov	r3, r0
 80010b8:	727b      	strb	r3, [r7, #9]
	if (CANMessage.motorType == DRIVE_MOTOR){
 80010ba:	7a7b      	ldrb	r3, [r7, #9]
 80010bc:	2b00      	cmp	r3, #0
 80010be:	d03b      	beq.n	8001138 <CAN_Parse_MSG+0xbc>
		return;
	}

	// Check the type of action to determine which field of the struct needs to be filled in
	CANMessage.commandType = (Action) get_CAN_action(msg_ID);
 80010c0:	8a7b      	ldrh	r3, [r7, #18]
 80010c2:	4618      	mov	r0, r3
 80010c4:	f7ff ff87 	bl	8000fd6 <get_CAN_action>
 80010c8:	4603      	mov	r3, r0
 80010ca:	72fb      	strb	r3, [r7, #11]
	if (CANMessage.commandType == ACTION_RUN){
 80010cc:	7afb      	ldrb	r3, [r7, #11]
 80010ce:	2b00      	cmp	r3, #0
 80010d0:	d106      	bne.n	80010e0 <CAN_Parse_MSG+0x64>

		////////////////////////////////////////////////////////////////////////////////////////////////////////
//		uart_debug_print("Run Command Detected\r\n");
		////////////////////////////////////////////////////////////////////////////////////////////////////////

			CANMessage.runSpec = (RunSpec) get_CAN_SPEC(msg_ID);
 80010d2:	8a7b      	ldrh	r3, [r7, #18]
 80010d4:	4618      	mov	r0, r3
 80010d6:	f7ff ffb1 	bl	800103c <get_CAN_SPEC>
 80010da:	4603      	mov	r3, r0
 80010dc:	737b      	strb	r3, [r7, #13]
 80010de:	e005      	b.n	80010ec <CAN_Parse_MSG+0x70>
	else{
		////////////////////////////////////////////////////////////////////////////////////////////////////////
//		uart_debug_print("Read Command Detected\r\n");
		////////////////////////////////////////////////////////////////////////////////////////////////////////

		CANMessage.readSpec = (ReadSpec) get_CAN_SPEC(msg_ID);
 80010e0:	8a7b      	ldrh	r3, [r7, #18]
 80010e2:	4618      	mov	r0, r3
 80010e4:	f7ff ffaa 	bl	800103c <get_CAN_SPEC>
 80010e8:	4603      	mov	r3, r0
 80010ea:	733b      	strb	r3, [r7, #12]
	}

	// Determine if the command effects a single, or mulitple motors, and call the appropriate helper functions
	CANMessage.motorConfig = (MotorConfig) get_CAN_motor_mov_type(msg_ID);
 80010ec:	8a7b      	ldrh	r3, [r7, #18]
 80010ee:	4618      	mov	r0, r3
 80010f0:	f7ff ff82 	bl	8000ff8 <get_CAN_motor_mov_type>
 80010f4:	4603      	mov	r3, r0
 80010f6:	72bb      	strb	r3, [r7, #10]
	if (CANMessage.motorConfig == SINGLE_MOTOR){
 80010f8:	7abb      	ldrb	r3, [r7, #10]
 80010fa:	2b01      	cmp	r3, #1
 80010fc:	d113      	bne.n	8001126 <CAN_Parse_MSG+0xaa>
		CANMessage.motorID = (MotorID) get_CAN_device_ID(msg_ID);
 80010fe:	8a7b      	ldrh	r3, [r7, #18]
 8001100:	4618      	mov	r0, r3
 8001102:	f7ff ffac 	bl	800105e <get_CAN_device_ID>
 8001106:	4603      	mov	r3, r0
 8001108:	b2db      	uxtb	r3, r3
 800110a:	73bb      	strb	r3, [r7, #14]
		if (CANMessage.motorID == STEERING_ID){
 800110c:	7bbb      	ldrb	r3, [r7, #14]
 800110e:	461a      	mov	r2, r3
 8001110:	4b0c      	ldr	r3, [pc, #48]	@ (8001144 <CAN_Parse_MSG+0xc8>)
 8001112:	681b      	ldr	r3, [r3, #0]
 8001114:	429a      	cmp	r2, r3
 8001116:	d111      	bne.n	800113c <CAN_Parse_MSG+0xc0>
			////////////////////////////////////////////////////////////////////////////////////////////////////////
//			uart_debug_print("Processing Single Command\r\n");
			////////////////////////////////////////////////////////////////////////////////////////////////////////

			Process_Single_Steering_Motor_Command(&CANMessage, rxData);
 8001118:	f107 0308 	add.w	r3, r7, #8
 800111c:	6839      	ldr	r1, [r7, #0]
 800111e:	4618      	mov	r0, r3
 8001120:	f000 f812 	bl	8001148 <Process_Single_Steering_Motor_Command>
 8001124:	e00b      	b.n	800113e <CAN_Parse_MSG+0xc2>
	else{
		////////////////////////////////////////////////////////////////////////////////////////////////////////
//		uart_debug_print("Processing Multiple Commands\r\n");
		////////////////////////////////////////////////////////////////////////////////////////////////////////

		Process_Multiple_Steering_Motor_Command(&CANMessage, rxData);
 8001126:	f107 0308 	add.w	r3, r7, #8
 800112a:	6839      	ldr	r1, [r7, #0]
 800112c:	4618      	mov	r0, r3
 800112e:	f000 f867 	bl	8001200 <Process_Multiple_Steering_Motor_Command>
 8001132:	e004      	b.n	800113e <CAN_Parse_MSG+0xc2>
		return;
 8001134:	bf00      	nop
 8001136:	e002      	b.n	800113e <CAN_Parse_MSG+0xc2>
		return;
 8001138:	bf00      	nop
 800113a:	e000      	b.n	800113e <CAN_Parse_MSG+0xc2>
			return;
 800113c:	bf00      	nop
	}

}
 800113e:	3718      	adds	r7, #24
 8001140:	46bd      	mov	sp, r7
 8001142:	bd80      	pop	{r7, pc}
 8001144:	20000004 	.word	0x20000004

08001148 <Process_Single_Steering_Motor_Command>:


void Process_Single_Steering_Motor_Command (ParsedCANID *CANMessageID, uint8_t *rxData){
 8001148:	b580      	push	{r7, lr}
 800114a:	b086      	sub	sp, #24
 800114c:	af00      	add	r7, sp, #0
 800114e:	6078      	str	r0, [r7, #4]
 8001150:	6039      	str	r1, [r7, #0]

	//single information will always come as a float (signed 4 bytes)
	float information = SingleExtractFloatFromCAN(rxData);
 8001152:	6838      	ldr	r0, [r7, #0]
 8001154:	f000 f900 	bl	8001358 <SingleExtractFloatFromCAN>
 8001158:	ed87 0a05 	vstr	s0, [r7, #20]


	if (CANMessageID->commandType == ACTION_RUN){
 800115c:	687b      	ldr	r3, [r7, #4]
 800115e:	78db      	ldrb	r3, [r3, #3]
 8001160:	2b00      	cmp	r3, #0
 8001162:	d117      	bne.n	8001194 <Process_Single_Steering_Motor_Command+0x4c>
		switch(CANMessageID->runSpec){
 8001164:	687b      	ldr	r3, [r7, #4]
 8001166:	795b      	ldrb	r3, [r3, #5]
 8001168:	2b03      	cmp	r3, #3
 800116a:	d83f      	bhi.n	80011ec <Process_Single_Steering_Motor_Command+0xa4>
 800116c:	a201      	add	r2, pc, #4	@ (adr r2, 8001174 <Process_Single_Steering_Motor_Command+0x2c>)
 800116e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001172:	bf00      	nop
 8001174:	08001185 	.word	0x08001185
 8001178:	080011ed 	.word	0x080011ed
 800117c:	080011ed 	.word	0x080011ed
 8001180:	0800118b 	.word	0x0800118b

		case (RUN_STOP):
				////////////////////////////////////////////////////////////////////////////////////////////////////////
//				uart_debug_print("Motor Stopped \r\n");
				////////////////////////////////////////////////////////////////////////////////////////////////////////
				stop_motor();
 8001184:	f000 fd81 	bl	8001c8a <stop_motor>
				break;
 8001188:	e033      	b.n	80011f2 <Process_Single_Steering_Motor_Command+0xaa>
//				uart_debug_print("In case RUN_SPEED\r\n");
				////////////////////////////////////////////////////////////////////////////////////////////////////////
//				uart_debug_print("Setpoint %d RPM\r\n", (int)information);
//				uart_debug_print("Previous Direction %d\r\n", (int)s_previousDirection);
				////////////////////////////////////////////////////////////////////////////////////////////////////////
				ControlSingleMotor(information);
 800118a:	ed97 0a05 	vldr	s0, [r7, #20]
 800118e:	f000 f85a 	bl	8001246 <ControlSingleMotor>
				break;
 8001192:	e02e      	b.n	80011f2 <Process_Single_Steering_Motor_Command+0xaa>
		//otherwise ignore whatever was received :)
	}

	else{
		// We are now in a read command
		switch(CANMessageID->readSpec){
 8001194:	687b      	ldr	r3, [r7, #4]
 8001196:	791b      	ldrb	r3, [r3, #4]
 8001198:	3b01      	subs	r3, #1
 800119a:	2b06      	cmp	r3, #6
 800119c:	d828      	bhi.n	80011f0 <Process_Single_Steering_Motor_Command+0xa8>
 800119e:	a201      	add	r2, pc, #4	@ (adr r2, 80011a4 <Process_Single_Steering_Motor_Command+0x5c>)
 80011a0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80011a4:	080011c1 	.word	0x080011c1
 80011a8:	080011f1 	.word	0x080011f1
 80011ac:	080011f1 	.word	0x080011f1
 80011b0:	080011f1 	.word	0x080011f1
 80011b4:	080011f1 	.word	0x080011f1
 80011b8:	080011f1 	.word	0x080011f1
 80011bc:	080011dd 	.word	0x080011dd

		case(READ_POSITION):
				float currentPosition = count_to_angle(get_counts());
 80011c0:	f000 f940 	bl	8001444 <get_counts>
 80011c4:	4603      	mov	r3, r0
 80011c6:	4618      	mov	r0, r3
 80011c8:	f000 f948 	bl	800145c <count_to_angle>
 80011cc:	ed87 0a03 	vstr	s0, [r7, #12]
				sendCANResponse(CANMessageID, currentPosition);
 80011d0:	ed97 0a03 	vldr	s0, [r7, #12]
 80011d4:	6878      	ldr	r0, [r7, #4]
 80011d6:	f000 f849 	bl	800126c <sendCANResponse>
				break;
 80011da:	e00a      	b.n	80011f2 <Process_Single_Steering_Motor_Command+0xaa>
				break;
		case(GET_TEMPERATURE):
				// --> need to poll the gpio, check the datasheet later for whichever pin this is
				break;
		case(GET_PING):
				float feedback = 69;// ;)
 80011dc:	4b07      	ldr	r3, [pc, #28]	@ (80011fc <Process_Single_Steering_Motor_Command+0xb4>)
 80011de:	613b      	str	r3, [r7, #16]
				sendCANResponse(CANMessageID, feedback);
 80011e0:	ed97 0a04 	vldr	s0, [r7, #16]
 80011e4:	6878      	ldr	r0, [r7, #4]
 80011e6:	f000 f841 	bl	800126c <sendCANResponse>
				break;
 80011ea:	e002      	b.n	80011f2 <Process_Single_Steering_Motor_Command+0xaa>
			break;
 80011ec:	bf00      	nop
 80011ee:	e000      	b.n	80011f2 <Process_Single_Steering_Motor_Command+0xaa>
		default:
			break;
 80011f0:	bf00      	nop
		}

	}
}
 80011f2:	bf00      	nop
 80011f4:	3718      	adds	r7, #24
 80011f6:	46bd      	mov	sp, r7
 80011f8:	bd80      	pop	{r7, pc}
 80011fa:	bf00      	nop
 80011fc:	428a0000 	.word	0x428a0000

08001200 <Process_Multiple_Steering_Motor_Command>:

void Process_Multiple_Steering_Motor_Command (ParsedCANID *CANMessageID, uint8_t *rxData){
 8001200:	b580      	push	{r7, lr}
 8001202:	b084      	sub	sp, #16
 8001204:	af00      	add	r7, sp, #0
 8001206:	6078      	str	r0, [r7, #4]
 8001208:	6039      	str	r1, [r7, #0]

	////////////////////////////////////////////////////////////////////////////////////////////////////////
//	 uart_debug_print("Running Multiple Motors...\r\n");
	////////////////////////////////////////////////////////////////////////////////////////////////////////

	switch(CANMessageID->runSpec){
 800120a:	687b      	ldr	r3, [r7, #4]
 800120c:	795b      	ldrb	r3, [r3, #5]
 800120e:	2b00      	cmp	r3, #0
 8001210:	d011      	beq.n	8001236 <Process_Multiple_Steering_Motor_Command+0x36>
 8001212:	2b03      	cmp	r3, #3
 8001214:	d112      	bne.n	800123c <Process_Multiple_Steering_Motor_Command+0x3c>

	case (RUN_POSITION):
			int16_t curESCSpeed = extract_multiple_speeds(rxData);
 8001216:	6838      	ldr	r0, [r7, #0]
 8001218:	f000 f8ba 	bl	8001390 <extract_multiple_speeds>
 800121c:	4603      	mov	r3, r0
 800121e:	81fb      	strh	r3, [r7, #14]
//			 uart_debug_print("Running This Motor\r\n");
//			 uart_debug_print("Setpoint %d RPM\r\n", (int)curESCSpeed);
//			 uart_debug_print("Previous Direction %d\r\n", (int)s_previousDirection);
			////////////////////////////////////////////////////////////////////////////////////////////////////////

			ControlSingleMotor(curESCSpeed);
 8001220:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8001224:	ee07 3a90 	vmov	s15, r3
 8001228:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800122c:	eeb0 0a67 	vmov.f32	s0, s15
 8001230:	f000 f809 	bl	8001246 <ControlSingleMotor>
			break;
 8001234:	e003      	b.n	800123e <Process_Multiple_Steering_Motor_Command+0x3e>

	case (RUN_STOP):
			////////////////////////////////////////////////////////////////////////////////////////////////////////
//			 uart_debug_print("Stop this motor\r\n");
			////////////////////////////////////////////////////////////////////////////////////////////////////////
			stop_motor();
 8001236:	f000 fd28 	bl	8001c8a <stop_motor>
			break;
 800123a:	e000      	b.n	800123e <Process_Multiple_Steering_Motor_Command+0x3e>
	default:
		break;
 800123c:	bf00      	nop
	}


}
 800123e:	bf00      	nop
 8001240:	3710      	adds	r7, #16
 8001242:	46bd      	mov	sp, r7
 8001244:	bd80      	pop	{r7, pc}

08001246 <ControlSingleMotor>:


void ControlSingleMotor(float angle){
 8001246:	b580      	push	{r7, lr}
 8001248:	b082      	sub	sp, #8
 800124a:	af00      	add	r7, sp, #0
 800124c:	ed87 0a01 	vstr	s0, [r7, #4]
	setPIDGoalA(angle);
 8001250:	6878      	ldr	r0, [r7, #4]
 8001252:	f7ff f999 	bl	8000588 <__aeabi_f2d>
 8001256:	4602      	mov	r2, r0
 8001258:	460b      	mov	r3, r1
 800125a:	ec43 2b10 	vmov	d0, r2, r3
 800125e:	f000 fde3 	bl	8001e28 <setPIDGoalA>
}
 8001262:	bf00      	nop
 8001264:	3708      	adds	r7, #8
 8001266:	46bd      	mov	sp, r7
 8001268:	bd80      	pop	{r7, pc}
	...

0800126c <sendCANResponse>:


void sendCANResponse(ParsedCANID *CANMessageID, float information){
 800126c:	b580      	push	{r7, lr}
 800126e:	b08c      	sub	sp, #48	@ 0x30
 8001270:	af00      	add	r7, sp, #0
 8001272:	6078      	str	r0, [r7, #4]
 8001274:	ed87 0a00 	vstr	s0, [r7]

	 */

	CAN_TxHeaderTypeDef TxHeader;
	uint32_t TxMailbox;
    uint16_t txID = 0;
 8001278:	2300      	movs	r3, #0
 800127a:	85fb      	strh	r3, [r7, #46]	@ 0x2e
    uint8_t txData[8];


    uint8_t spec = (CANMessageID->commandType == ACTION_READ)
 800127c:	687b      	ldr	r3, [r7, #4]
 800127e:	78db      	ldrb	r3, [r3, #3]
 8001280:	2b01      	cmp	r3, #1
 8001282:	d102      	bne.n	800128a <sendCANResponse+0x1e>
 8001284:	687b      	ldr	r3, [r7, #4]
 8001286:	791b      	ldrb	r3, [r3, #4]
 8001288:	e001      	b.n	800128e <sendCANResponse+0x22>
 800128a:	687b      	ldr	r3, [r7, #4]
 800128c:	795b      	ldrb	r3, [r3, #5]
 800128e:	f887 302d 	strb.w	r3, [r7, #45]	@ 0x2d
                   ? (uint8_t)(CANMessageID->readSpec)
                   : (uint8_t)(CANMessageID->runSpec);


    // Configure the ID of the message according to what was received
    txID |= (1 & 0x01) << SENDER_DEVICE_SHIFT;
 8001292:	8dfb      	ldrh	r3, [r7, #46]	@ 0x2e
 8001294:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001298:	85fb      	strh	r3, [r7, #46]	@ 0x2e
    // This caluevis now always 1 since the esc is sending data.
    txID |= (CANMessageID->motorType & 0x01) << NDRIVE_STEERING_SHIFT;
 800129a:	687b      	ldr	r3, [r7, #4]
 800129c:	785b      	ldrb	r3, [r3, #1]
 800129e:	b21b      	sxth	r3, r3
 80012a0:	01db      	lsls	r3, r3, #7
 80012a2:	b21b      	sxth	r3, r3
 80012a4:	b2db      	uxtb	r3, r3
 80012a6:	b21a      	sxth	r2, r3
 80012a8:	f9b7 302e 	ldrsh.w	r3, [r7, #46]	@ 0x2e
 80012ac:	4313      	orrs	r3, r2
 80012ae:	b21b      	sxth	r3, r3
 80012b0:	85fb      	strh	r3, [r7, #46]	@ 0x2e
    txID |= (CANMessageID->motorConfig & 0x01) << NMULTI_SINGLE_SHIFT;
 80012b2:	687b      	ldr	r3, [r7, #4]
 80012b4:	789b      	ldrb	r3, [r3, #2]
 80012b6:	b21b      	sxth	r3, r3
 80012b8:	021b      	lsls	r3, r3, #8
 80012ba:	b21b      	sxth	r3, r3
 80012bc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80012c0:	b21a      	sxth	r2, r3
 80012c2:	f9b7 302e 	ldrsh.w	r3, [r7, #46]	@ 0x2e
 80012c6:	4313      	orrs	r3, r2
 80012c8:	b21b      	sxth	r3, r3
 80012ca:	85fb      	strh	r3, [r7, #46]	@ 0x2e
    txID |= (CANMessageID->commandType & 0x01) << NACTION_READ_ID_DEVICE_SHIFT;
 80012cc:	687b      	ldr	r3, [r7, #4]
 80012ce:	78db      	ldrb	r3, [r3, #3]
 80012d0:	b21b      	sxth	r3, r3
 80012d2:	025b      	lsls	r3, r3, #9
 80012d4:	b21b      	sxth	r3, r3
 80012d6:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80012da:	b21a      	sxth	r2, r3
 80012dc:	f9b7 302e 	ldrsh.w	r3, [r7, #46]	@ 0x2e
 80012e0:	4313      	orrs	r3, r2
 80012e2:	b21b      	sxth	r3, r3
 80012e4:	85fb      	strh	r3, [r7, #46]	@ 0x2e
    txID |= (CANMessageID->readSpec & 0x07) << MSG_SPECIFICATION_SHIFT;
 80012e6:	687b      	ldr	r3, [r7, #4]
 80012e8:	791b      	ldrb	r3, [r3, #4]
 80012ea:	b21b      	sxth	r3, r3
 80012ec:	011b      	lsls	r3, r3, #4
 80012ee:	b21b      	sxth	r3, r3
 80012f0:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 80012f4:	b21a      	sxth	r2, r3
 80012f6:	f9b7 302e 	ldrsh.w	r3, [r7, #46]	@ 0x2e
 80012fa:	4313      	orrs	r3, r2
 80012fc:	b21b      	sxth	r3, r3
 80012fe:	85fb      	strh	r3, [r7, #46]	@ 0x2e
    txID |= (CANMessageID->motorID & 0x0f);
 8001300:	687b      	ldr	r3, [r7, #4]
 8001302:	799b      	ldrb	r3, [r3, #6]
 8001304:	b21b      	sxth	r3, r3
 8001306:	f003 030f 	and.w	r3, r3, #15
 800130a:	b21a      	sxth	r2, r3
 800130c:	f9b7 302e 	ldrsh.w	r3, [r7, #46]	@ 0x2e
 8001310:	4313      	orrs	r3, r2
 8001312:	b21b      	sxth	r3, r3
 8001314:	85fb      	strh	r3, [r7, #46]	@ 0x2e

    //TONY: I want the txID to be exactly what I specified in main.c
    // Move the information into the data paylaod
    memcpy(txData, &information, sizeof(float)); // data[0] --> data[3] now stores float
 8001316:	683b      	ldr	r3, [r7, #0]
 8001318:	60bb      	str	r3, [r7, #8]
//	 uart_debug_print("CAN Command Sent back!\r\n");
	////////////////////////////////////////////////////////////////////////////////////////////////////////

    //format other message peripherals

	 TxHeader.DLC = 8;
 800131a:	2308      	movs	r3, #8
 800131c:	627b      	str	r3, [r7, #36]	@ 0x24
	 TxHeader.ExtId = 0;
 800131e:	2300      	movs	r3, #0
 8001320:	61bb      	str	r3, [r7, #24]
	 TxHeader.IDE = CAN_ID_STD;
 8001322:	2300      	movs	r3, #0
 8001324:	61fb      	str	r3, [r7, #28]
	 TxHeader.RTR = CAN_RTR_DATA;
 8001326:	2300      	movs	r3, #0
 8001328:	623b      	str	r3, [r7, #32]
	 TxHeader.StdId = txID;
 800132a:	8dfb      	ldrh	r3, [r7, #46]	@ 0x2e
 800132c:	617b      	str	r3, [r7, #20]

	// Send the response

	if (HAL_CAN_AddTxMessage(&hcan2, &TxHeader, txData, &TxMailbox) != HAL_OK) {
 800132e:	f107 0310 	add.w	r3, r7, #16
 8001332:	f107 0208 	add.w	r2, r7, #8
 8001336:	f107 0114 	add.w	r1, r7, #20
 800133a:	4806      	ldr	r0, [pc, #24]	@ (8001354 <sendCANResponse+0xe8>)
 800133c:	f001 fb54 	bl	80029e8 <HAL_CAN_AddTxMessage>
 8001340:	4603      	mov	r3, r0
 8001342:	2b00      	cmp	r3, #0
 8001344:	d001      	beq.n	800134a <sendCANResponse+0xde>
		Error_Handler();
 8001346:	f000 fc9a 	bl	8001c7e <Error_Handler>
	}
}
 800134a:	bf00      	nop
 800134c:	3730      	adds	r7, #48	@ 0x30
 800134e:	46bd      	mov	sp, r7
 8001350:	bd80      	pop	{r7, pc}
 8001352:	bf00      	nop
 8001354:	200001fc 	.word	0x200001fc

08001358 <SingleExtractFloatFromCAN>:

// Extracts a float from a CAN data buffer that is expected to be in little-Endian
float SingleExtractFloatFromCAN(uint8_t *data) {
 8001358:	b480      	push	{r7}
 800135a:	b085      	sub	sp, #20
 800135c:	af00      	add	r7, sp, #0
 800135e:	6078      	str	r0, [r7, #4]
    float value;
    uint8_t reorderedData[4];

    // The data is already big-endian, so we copy directly:
    reorderedData[0] = data[0];
 8001360:	687b      	ldr	r3, [r7, #4]
 8001362:	781b      	ldrb	r3, [r3, #0]
 8001364:	723b      	strb	r3, [r7, #8]
    reorderedData[1] = data[1];
 8001366:	687b      	ldr	r3, [r7, #4]
 8001368:	785b      	ldrb	r3, [r3, #1]
 800136a:	727b      	strb	r3, [r7, #9]
    reorderedData[2] = data[2];
 800136c:	687b      	ldr	r3, [r7, #4]
 800136e:	789b      	ldrb	r3, [r3, #2]
 8001370:	72bb      	strb	r3, [r7, #10]
    reorderedData[3] = data[3];
 8001372:	687b      	ldr	r3, [r7, #4]
 8001374:	78db      	ldrb	r3, [r3, #3]
 8001376:	72fb      	strb	r3, [r7, #11]

    memcpy(&value, reorderedData, sizeof(float));
 8001378:	68bb      	ldr	r3, [r7, #8]
 800137a:	60fb      	str	r3, [r7, #12]
    return value;
 800137c:	68fb      	ldr	r3, [r7, #12]
 800137e:	ee07 3a90 	vmov	s15, r3
}
 8001382:	eeb0 0a67 	vmov.f32	s0, s15
 8001386:	3714      	adds	r7, #20
 8001388:	46bd      	mov	sp, r7
 800138a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800138e:	4770      	bx	lr

08001390 <extract_multiple_speeds>:


int16_t extract_multiple_speeds(const uint8_t *rxData){
 8001390:	b480      	push	{r7}
 8001392:	b085      	sub	sp, #20
 8001394:	af00      	add	r7, sp, #0
 8001396:	6078      	str	r0, [r7, #4]
    uint16_t offset = (STEERING_ID-4) * 2;
 8001398:	4b0e      	ldr	r3, [pc, #56]	@ (80013d4 <extract_multiple_speeds+0x44>)
 800139a:	681b      	ldr	r3, [r3, #0]
 800139c:	3b04      	subs	r3, #4
 800139e:	b29b      	uxth	r3, r3
 80013a0:	005b      	lsls	r3, r3, #1
 80013a2:	81fb      	strh	r3, [r7, #14]
    int16_t value = (int16_t)((rxData[offset + 1] << 8) | rxData[offset]);
 80013a4:	89fb      	ldrh	r3, [r7, #14]
 80013a6:	3301      	adds	r3, #1
 80013a8:	687a      	ldr	r2, [r7, #4]
 80013aa:	4413      	add	r3, r2
 80013ac:	781b      	ldrb	r3, [r3, #0]
 80013ae:	b21b      	sxth	r3, r3
 80013b0:	021b      	lsls	r3, r3, #8
 80013b2:	b21a      	sxth	r2, r3
 80013b4:	89fb      	ldrh	r3, [r7, #14]
 80013b6:	6879      	ldr	r1, [r7, #4]
 80013b8:	440b      	add	r3, r1
 80013ba:	781b      	ldrb	r3, [r3, #0]
 80013bc:	b21b      	sxth	r3, r3
 80013be:	4313      	orrs	r3, r2
 80013c0:	81bb      	strh	r3, [r7, #12]
    return value;
 80013c2:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
}
 80013c6:	4618      	mov	r0, r3
 80013c8:	3714      	adds	r7, #20
 80013ca:	46bd      	mov	sp, r7
 80013cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013d0:	4770      	bx	lr
 80013d2:	bf00      	nop
 80013d4:	20000004 	.word	0x20000004

080013d8 <AssortedTests>:
// In Hope (found in Drugs), there will be the same file structure as here.
// So when testing the boards, just update the defines for TESTX (1-4), and
// you're golden.
// This will make testing easier and more repeatable.

void AssortedTests() {
 80013d8:	b580      	push	{r7, lr}
 80013da:	af00      	add	r7, sp, #0
#endif

#ifdef TEST4
    // The fourth test sets the motor to PI/4, and then the nucleo polls the
    // board for the motor location.
    setPIDGoalA(45);
 80013dc:	ed9f 0b02 	vldr	d0, [pc, #8]	@ 80013e8 <AssortedTests+0x10>
 80013e0:	f000 fd22 	bl	8001e28 <setPIDGoalA>
    HAL_Delay(1000);
    setPIDGoalAngleA(2);
    HAL_Delay(1000);
    // same looping as in the second test.
#endif
}
 80013e4:	bf00      	nop
 80013e6:	bd80      	pop	{r7, pc}
 80013e8:	00000000 	.word	0x00000000
 80013ec:	40468000 	.word	0x40468000

080013f0 <set_counts>:
#include "main.h"
#include "encoder.h"

int counts;

void set_counts(int n){
 80013f0:	b480      	push	{r7}
 80013f2:	b083      	sub	sp, #12
 80013f4:	af00      	add	r7, sp, #0
 80013f6:	6078      	str	r0, [r7, #4]
	counts = ((n%MAX_COUNTS)+MAX_COUNTS)%MAX_COUNTS;
 80013f8:	6879      	ldr	r1, [r7, #4]
 80013fa:	4b10      	ldr	r3, [pc, #64]	@ (800143c <set_counts+0x4c>)
 80013fc:	fb83 2301 	smull	r2, r3, r3, r1
 8001400:	12da      	asrs	r2, r3, #11
 8001402:	17cb      	asrs	r3, r1, #31
 8001404:	1ad2      	subs	r2, r2, r3
 8001406:	4613      	mov	r3, r2
 8001408:	01db      	lsls	r3, r3, #7
 800140a:	4413      	add	r3, r2
 800140c:	021b      	lsls	r3, r3, #8
 800140e:	1aca      	subs	r2, r1, r3
 8001410:	f502 4101 	add.w	r1, r2, #33024	@ 0x8100
 8001414:	4b09      	ldr	r3, [pc, #36]	@ (800143c <set_counts+0x4c>)
 8001416:	fb83 2301 	smull	r2, r3, r3, r1
 800141a:	12da      	asrs	r2, r3, #11
 800141c:	17cb      	asrs	r3, r1, #31
 800141e:	1ad2      	subs	r2, r2, r3
 8001420:	4613      	mov	r3, r2
 8001422:	01db      	lsls	r3, r3, #7
 8001424:	4413      	add	r3, r2
 8001426:	021b      	lsls	r3, r3, #8
 8001428:	1aca      	subs	r2, r1, r3
 800142a:	4b05      	ldr	r3, [pc, #20]	@ (8001440 <set_counts+0x50>)
 800142c:	601a      	str	r2, [r3, #0]
}
 800142e:	bf00      	nop
 8001430:	370c      	adds	r7, #12
 8001432:	46bd      	mov	sp, r7
 8001434:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001438:	4770      	bx	lr
 800143a:	bf00      	nop
 800143c:	0fe03f81 	.word	0x0fe03f81
 8001440:	200001f8 	.word	0x200001f8

08001444 <get_counts>:

int get_counts(){
 8001444:	b480      	push	{r7}
 8001446:	af00      	add	r7, sp, #0
	return counts;
 8001448:	4b03      	ldr	r3, [pc, #12]	@ (8001458 <get_counts+0x14>)
 800144a:	681b      	ldr	r3, [r3, #0]
}
 800144c:	4618      	mov	r0, r3
 800144e:	46bd      	mov	sp, r7
 8001450:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001454:	4770      	bx	lr
 8001456:	bf00      	nop
 8001458:	200001f8 	.word	0x200001f8

0800145c <count_to_angle>:

float count_to_angle(int n){
 800145c:	b480      	push	{r7}
 800145e:	b085      	sub	sp, #20
 8001460:	af00      	add	r7, sp, #0
 8001462:	6078      	str	r0, [r7, #4]
	int new_n = abs(n%MAX_COUNTS);
 8001464:	6879      	ldr	r1, [r7, #4]
 8001466:	4b1b      	ldr	r3, [pc, #108]	@ (80014d4 <count_to_angle+0x78>)
 8001468:	fb83 2301 	smull	r2, r3, r3, r1
 800146c:	12da      	asrs	r2, r3, #11
 800146e:	17cb      	asrs	r3, r1, #31
 8001470:	1ad2      	subs	r2, r2, r3
 8001472:	4613      	mov	r3, r2
 8001474:	01db      	lsls	r3, r3, #7
 8001476:	4413      	add	r3, r2
 8001478:	021b      	lsls	r3, r3, #8
 800147a:	1aca      	subs	r2, r1, r3
 800147c:	ea82 73e2 	eor.w	r3, r2, r2, asr #31
 8001480:	eba3 73e2 	sub.w	r3, r3, r2, asr #31
 8001484:	60fb      	str	r3, [r7, #12]
	float angle=((float)n/(float)MAX_COUNTS)*360;
 8001486:	687b      	ldr	r3, [r7, #4]
 8001488:	ee07 3a90 	vmov	s15, r3
 800148c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001490:	eddf 6a11 	vldr	s13, [pc, #68]	@ 80014d8 <count_to_angle+0x7c>
 8001494:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001498:	ed9f 7a10 	vldr	s14, [pc, #64]	@ 80014dc <count_to_angle+0x80>
 800149c:	ee67 7a87 	vmul.f32	s15, s15, s14
 80014a0:	edc7 7a02 	vstr	s15, [r7, #8]
	if (angle<0){
 80014a4:	edd7 7a02 	vldr	s15, [r7, #8]
 80014a8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80014ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80014b0:	d506      	bpl.n	80014c0 <count_to_angle+0x64>
		return 360+angle;
 80014b2:	edd7 7a02 	vldr	s15, [r7, #8]
 80014b6:	ed9f 7a09 	vldr	s14, [pc, #36]	@ 80014dc <count_to_angle+0x80>
 80014ba:	ee77 7a87 	vadd.f32	s15, s15, s14
 80014be:	e001      	b.n	80014c4 <count_to_angle+0x68>
	}
	return angle;
 80014c0:	edd7 7a02 	vldr	s15, [r7, #8]
}
 80014c4:	eeb0 0a67 	vmov.f32	s0, s15
 80014c8:	3714      	adds	r7, #20
 80014ca:	46bd      	mov	sp, r7
 80014cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014d0:	4770      	bx	lr
 80014d2:	bf00      	nop
 80014d4:	0fe03f81 	.word	0x0fe03f81
 80014d8:	47010000 	.word	0x47010000
 80014dc:	43b40000 	.word	0x43b40000

080014e0 <angle_to_count>:

int angle_to_count(double n){
 80014e0:	b580      	push	{r7, lr}
 80014e2:	b084      	sub	sp, #16
 80014e4:	af00      	add	r7, sp, #0
 80014e6:	ed87 0b00 	vstr	d0, [r7]
	float new_n = fabs(fmod(n,360));
 80014ea:	ed9f 1b13 	vldr	d1, [pc, #76]	@ 8001538 <angle_to_count+0x58>
 80014ee:	ed97 0b00 	vldr	d0, [r7]
 80014f2:	f007 f9ad 	bl	8008850 <fmod>
 80014f6:	ec53 2b10 	vmov	r2, r3, d0
 80014fa:	4610      	mov	r0, r2
 80014fc:	4619      	mov	r1, r3
 80014fe:	f7ff fb73 	bl	8000be8 <__aeabi_d2f>
 8001502:	ee07 0a90 	vmov	s15, r0
 8001506:	eef0 7ae7 	vabs.f32	s15, s15
 800150a:	edc7 7a03 	vstr	s15, [r7, #12]
	int c = MAX_COUNTS;
 800150e:	f44f 4301 	mov.w	r3, #33024	@ 0x8100
 8001512:	60bb      	str	r3, [r7, #8]
	return (int) ((new_n/(360))*MAX_COUNTS);
 8001514:	ed97 7a03 	vldr	s14, [r7, #12]
 8001518:	eddf 6a09 	vldr	s13, [pc, #36]	@ 8001540 <angle_to_count+0x60>
 800151c:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001520:	ed9f 7a08 	vldr	s14, [pc, #32]	@ 8001544 <angle_to_count+0x64>
 8001524:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001528:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800152c:	ee17 3a90 	vmov	r3, s15
}
 8001530:	4618      	mov	r0, r3
 8001532:	3710      	adds	r7, #16
 8001534:	46bd      	mov	sp, r7
 8001536:	bd80      	pop	{r7, pc}
 8001538:	00000000 	.word	0x00000000
 800153c:	40768000 	.word	0x40768000
 8001540:	43b40000 	.word	0x43b40000
 8001544:	47010000 	.word	0x47010000

08001548 <calibrate_encoder>:

void calibrate_encoder(){
 8001548:	b580      	push	{r7, lr}
 800154a:	af00      	add	r7, sp, #0
	set_counts(angle_to_count(LIMIT_SWITCH_RESET_ANGLE));
 800154c:	ed9f 0b04 	vldr	d0, [pc, #16]	@ 8001560 <calibrate_encoder+0x18>
 8001550:	f7ff ffc6 	bl	80014e0 <angle_to_count>
 8001554:	4603      	mov	r3, r0
 8001556:	4618      	mov	r0, r3
 8001558:	f7ff ff4a 	bl	80013f0 <set_counts>
}
 800155c:	bf00      	nop
 800155e:	bd80      	pop	{r7, pc}
 8001560:	00000000 	.word	0x00000000
 8001564:	40668000 	.word	0x40668000

08001568 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001568:	b580      	push	{r7, lr}
 800156a:	b08a      	sub	sp, #40	@ 0x28
 800156c:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800156e:	f000 ffab 	bl	80024c8 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001572:	f000 f865 	bl	8001640 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001576:	f000 fab5 	bl	8001ae4 <MX_GPIO_Init>
  MX_TIM2_Init();
 800157a:	f000 f947 	bl	800180c <MX_TIM2_Init>
  MX_TIM5_Init();
 800157e:	f000 f999 	bl	80018b4 <MX_TIM5_Init>
  MX_TIM8_Init();
 8001582:	f000 f9e5 	bl	8001950 <MX_TIM8_Init>
  MX_TIM1_Init();
 8001586:	f000 f8f1 	bl	800176c <MX_TIM1_Init>
  MX_CAN2_Init();
 800158a:	f000 f8b9 	bl	8001700 <MX_CAN2_Init>
  MX_USART2_UART_Init();
 800158e:	f000 fa7f 	bl	8001a90 <MX_USART2_UART_Init>
  /* USER CODE BEGIN 2 */

  // Setup Encoder
  HAL_TIM_Encoder_Start(&htim2, TIM_CHANNEL_ALL);
 8001592:	213c      	movs	r1, #60	@ 0x3c
 8001594:	4823      	ldr	r0, [pc, #140]	@ (8001624 <main+0xbc>)
 8001596:	f003 f8bd 	bl	8004714 <HAL_TIM_Encoder_Start>
  //Setup Motor PWM
  HAL_TIMEx_PWMN_Start(&htim8, TIM_CHANNEL_1);
 800159a:	2100      	movs	r1, #0
 800159c:	4822      	ldr	r0, [pc, #136]	@ (8001628 <main+0xc0>)
 800159e:	f003 ff09 	bl	80053b4 <HAL_TIMEx_PWMN_Start>

  // Initialize motor state
  set_motor_speed(0);
 80015a2:	2000      	movs	r0, #0
 80015a4:	f000 fb8c 	bl	8001cc0 <set_motor_speed>
  set_motor_direction(1);
 80015a8:	2001      	movs	r0, #1
 80015aa:	f000 fb99 	bl	8001ce0 <set_motor_direction>
  set_counts(0);
 80015ae:	2000      	movs	r0, #0
 80015b0:	f7ff ff1e 	bl	80013f0 <set_counts>
  TIM2->CNT = 0;
 80015b4:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80015b8:	2200      	movs	r2, #0
 80015ba:	625a      	str	r2, [r3, #36]	@ 0x24

  /* CAN initialization below */
  CAN_FilterTypeDef canfilterconfig;

    canfilterconfig.FilterActivation = CAN_FILTER_ENABLE;
 80015bc:	2301      	movs	r3, #1
 80015be:	623b      	str	r3, [r7, #32]
    canfilterconfig.FilterBank = 14;  // anything between 0 to SlaveStartFilterBank for can1. can 2 opposite.
 80015c0:	230e      	movs	r3, #14
 80015c2:	617b      	str	r3, [r7, #20]
    canfilterconfig.FilterFIFOAssignment = CAN_FILTER_FIFO0;
 80015c4:	2300      	movs	r3, #0
 80015c6:	613b      	str	r3, [r7, #16]
    canfilterconfig.FilterIdHigh = 0x0000;
 80015c8:	2300      	movs	r3, #0
 80015ca:	603b      	str	r3, [r7, #0]
    canfilterconfig.FilterIdLow = 0x0000; // comment out if we don't need filter in the end
 80015cc:	2300      	movs	r3, #0
 80015ce:	607b      	str	r3, [r7, #4]
    canfilterconfig.FilterMaskIdHigh = 0x0000;
 80015d0:	2300      	movs	r3, #0
 80015d2:	60bb      	str	r3, [r7, #8]
    canfilterconfig.FilterMaskIdLow = 0x0; // all filters may be 0000. Figure out later.
 80015d4:	2300      	movs	r3, #0
 80015d6:	60fb      	str	r3, [r7, #12]
    canfilterconfig.FilterMode = CAN_FILTERMODE_IDMASK;
 80015d8:	2300      	movs	r3, #0
 80015da:	61bb      	str	r3, [r7, #24]
    canfilterconfig.FilterScale = CAN_FILTERSCALE_32BIT;
 80015dc:	2301      	movs	r3, #1
 80015de:	61fb      	str	r3, [r7, #28]
    canfilterconfig.SlaveStartFilterBank = 14;  // 13 to 27 are assigned to slave CAN (CAN 2) OR 0 to 12 are assgned to CAN1
 80015e0:	230e      	movs	r3, #14
 80015e2:	627b      	str	r3, [r7, #36]	@ 0x24



  HAL_CAN_ConfigFilter(&hcan2, &canfilterconfig);
 80015e4:	463b      	mov	r3, r7
 80015e6:	4619      	mov	r1, r3
 80015e8:	4810      	ldr	r0, [pc, #64]	@ (800162c <main+0xc4>)
 80015ea:	f001 f8db 	bl	80027a4 <HAL_CAN_ConfigFilter>
  HAL_CAN_Start(&hcan2);
 80015ee:	480f      	ldr	r0, [pc, #60]	@ (800162c <main+0xc4>)
 80015f0:	f001 f9b6 	bl	8002960 <HAL_CAN_Start>
  HAL_CAN_ActivateNotification(&hcan2, CAN_IT_RX_FIFO0_MSG_PENDING);
 80015f4:	2102      	movs	r1, #2
 80015f6:	480d      	ldr	r0, [pc, #52]	@ (800162c <main+0xc4>)
 80015f8:	f001 fc10 	bl	8002e1c <HAL_CAN_ActivateNotification>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1){
	  // Process Message if available
	  if (datacheck){
 80015fc:	4b0c      	ldr	r3, [pc, #48]	@ (8001630 <main+0xc8>)
 80015fe:	681b      	ldr	r3, [r3, #0]
 8001600:	2b00      	cmp	r3, #0
 8001602:	d00b      	beq.n	800161c <main+0xb4>
		    CAN_Parse_MSG(&RxHeader, rxData);
 8001604:	490b      	ldr	r1, [pc, #44]	@ (8001634 <main+0xcc>)
 8001606:	480c      	ldr	r0, [pc, #48]	@ (8001638 <main+0xd0>)
 8001608:	f7ff fd38 	bl	800107c <CAN_Parse_MSG>
		    HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 800160c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001610:	480a      	ldr	r0, [pc, #40]	@ (800163c <main+0xd4>)
 8001612:	f002 f918 	bl	8003846 <HAL_GPIO_TogglePin>
		    datacheck = 0;
 8001616:	4b06      	ldr	r3, [pc, #24]	@ (8001630 <main+0xc8>)
 8001618:	2200      	movs	r2, #0
 800161a:	601a      	str	r2, [r3, #0]
	  }


#ifdef TESTING_MODE
	  AssortedTests();
 800161c:	f7ff fedc 	bl	80013d8 <AssortedTests>
	  if (datacheck){
 8001620:	e7ec      	b.n	80015fc <main+0x94>
 8001622:	bf00      	nop
 8001624:	2000026c 	.word	0x2000026c
 8001628:	200002fc 	.word	0x200002fc
 800162c:	200001fc 	.word	0x200001fc
 8001630:	200003b0 	.word	0x200003b0
 8001634:	200003a8 	.word	0x200003a8
 8001638:	2000038c 	.word	0x2000038c
 800163c:	40020800 	.word	0x40020800

08001640 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001640:	b580      	push	{r7, lr}
 8001642:	b094      	sub	sp, #80	@ 0x50
 8001644:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001646:	f107 031c 	add.w	r3, r7, #28
 800164a:	2234      	movs	r2, #52	@ 0x34
 800164c:	2100      	movs	r1, #0
 800164e:	4618      	mov	r0, r3
 8001650:	f005 f9d7 	bl	8006a02 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001654:	f107 0308 	add.w	r3, r7, #8
 8001658:	2200      	movs	r2, #0
 800165a:	601a      	str	r2, [r3, #0]
 800165c:	605a      	str	r2, [r3, #4]
 800165e:	609a      	str	r2, [r3, #8]
 8001660:	60da      	str	r2, [r3, #12]
 8001662:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001664:	2300      	movs	r3, #0
 8001666:	607b      	str	r3, [r7, #4]
 8001668:	4b23      	ldr	r3, [pc, #140]	@ (80016f8 <SystemClock_Config+0xb8>)
 800166a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800166c:	4a22      	ldr	r2, [pc, #136]	@ (80016f8 <SystemClock_Config+0xb8>)
 800166e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001672:	6413      	str	r3, [r2, #64]	@ 0x40
 8001674:	4b20      	ldr	r3, [pc, #128]	@ (80016f8 <SystemClock_Config+0xb8>)
 8001676:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001678:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800167c:	607b      	str	r3, [r7, #4]
 800167e:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 8001680:	2300      	movs	r3, #0
 8001682:	603b      	str	r3, [r7, #0]
 8001684:	4b1d      	ldr	r3, [pc, #116]	@ (80016fc <SystemClock_Config+0xbc>)
 8001686:	681b      	ldr	r3, [r3, #0]
 8001688:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 800168c:	4a1b      	ldr	r2, [pc, #108]	@ (80016fc <SystemClock_Config+0xbc>)
 800168e:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001692:	6013      	str	r3, [r2, #0]
 8001694:	4b19      	ldr	r3, [pc, #100]	@ (80016fc <SystemClock_Config+0xbc>)
 8001696:	681b      	ldr	r3, [r3, #0]
 8001698:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 800169c:	603b      	str	r3, [r7, #0]
 800169e:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80016a0:	2301      	movs	r3, #1
 80016a2:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80016a4:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80016a8:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80016aa:	2300      	movs	r3, #0
 80016ac:	637b      	str	r3, [r7, #52]	@ 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80016ae:	f107 031c 	add.w	r3, r7, #28
 80016b2:	4618      	mov	r0, r3
 80016b4:	f002 fc42 	bl	8003f3c <HAL_RCC_OscConfig>
 80016b8:	4603      	mov	r3, r0
 80016ba:	2b00      	cmp	r3, #0
 80016bc:	d001      	beq.n	80016c2 <SystemClock_Config+0x82>
  {
    Error_Handler();
 80016be:	f000 fade 	bl	8001c7e <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80016c2:	230f      	movs	r3, #15
 80016c4:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSE;
 80016c6:	2301      	movs	r3, #1
 80016c8:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80016ca:	2300      	movs	r3, #0
 80016cc:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80016ce:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80016d2:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80016d4:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80016d8:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80016da:	f107 0308 	add.w	r3, r7, #8
 80016de:	2100      	movs	r1, #0
 80016e0:	4618      	mov	r0, r3
 80016e2:	f002 f8e3 	bl	80038ac <HAL_RCC_ClockConfig>
 80016e6:	4603      	mov	r3, r0
 80016e8:	2b00      	cmp	r3, #0
 80016ea:	d001      	beq.n	80016f0 <SystemClock_Config+0xb0>
  {
    Error_Handler();
 80016ec:	f000 fac7 	bl	8001c7e <Error_Handler>
  }
}
 80016f0:	bf00      	nop
 80016f2:	3750      	adds	r7, #80	@ 0x50
 80016f4:	46bd      	mov	sp, r7
 80016f6:	bd80      	pop	{r7, pc}
 80016f8:	40023800 	.word	0x40023800
 80016fc:	40007000 	.word	0x40007000

08001700 <MX_CAN2_Init>:
  * @brief CAN2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_CAN2_Init(void)
{
 8001700:	b580      	push	{r7, lr}
 8001702:	af00      	add	r7, sp, #0
  /* USER CODE END CAN2_Init 0 */

  /* USER CODE BEGIN CAN2_Init 1 */

  /* USER CODE END CAN2_Init 1 */
  hcan2.Instance = CAN2;
 8001704:	4b17      	ldr	r3, [pc, #92]	@ (8001764 <MX_CAN2_Init+0x64>)
 8001706:	4a18      	ldr	r2, [pc, #96]	@ (8001768 <MX_CAN2_Init+0x68>)
 8001708:	601a      	str	r2, [r3, #0]
  hcan2.Init.Prescaler = 4;
 800170a:	4b16      	ldr	r3, [pc, #88]	@ (8001764 <MX_CAN2_Init+0x64>)
 800170c:	2204      	movs	r2, #4
 800170e:	605a      	str	r2, [r3, #4]
  hcan2.Init.Mode = CAN_MODE_NORMAL;
 8001710:	4b14      	ldr	r3, [pc, #80]	@ (8001764 <MX_CAN2_Init+0x64>)
 8001712:	2200      	movs	r2, #0
 8001714:	609a      	str	r2, [r3, #8]
  hcan2.Init.SyncJumpWidth = CAN_SJW_1TQ;
 8001716:	4b13      	ldr	r3, [pc, #76]	@ (8001764 <MX_CAN2_Init+0x64>)
 8001718:	2200      	movs	r2, #0
 800171a:	60da      	str	r2, [r3, #12]
  hcan2.Init.TimeSeg1 = CAN_BS1_2TQ;
 800171c:	4b11      	ldr	r3, [pc, #68]	@ (8001764 <MX_CAN2_Init+0x64>)
 800171e:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 8001722:	611a      	str	r2, [r3, #16]
  hcan2.Init.TimeSeg2 = CAN_BS2_1TQ;
 8001724:	4b0f      	ldr	r3, [pc, #60]	@ (8001764 <MX_CAN2_Init+0x64>)
 8001726:	2200      	movs	r2, #0
 8001728:	615a      	str	r2, [r3, #20]
  hcan2.Init.TimeTriggeredMode = DISABLE;
 800172a:	4b0e      	ldr	r3, [pc, #56]	@ (8001764 <MX_CAN2_Init+0x64>)
 800172c:	2200      	movs	r2, #0
 800172e:	761a      	strb	r2, [r3, #24]
  hcan2.Init.AutoBusOff = DISABLE;
 8001730:	4b0c      	ldr	r3, [pc, #48]	@ (8001764 <MX_CAN2_Init+0x64>)
 8001732:	2200      	movs	r2, #0
 8001734:	765a      	strb	r2, [r3, #25]
  hcan2.Init.AutoWakeUp = DISABLE;
 8001736:	4b0b      	ldr	r3, [pc, #44]	@ (8001764 <MX_CAN2_Init+0x64>)
 8001738:	2200      	movs	r2, #0
 800173a:	769a      	strb	r2, [r3, #26]
  hcan2.Init.AutoRetransmission = DISABLE;
 800173c:	4b09      	ldr	r3, [pc, #36]	@ (8001764 <MX_CAN2_Init+0x64>)
 800173e:	2200      	movs	r2, #0
 8001740:	76da      	strb	r2, [r3, #27]
  hcan2.Init.ReceiveFifoLocked = DISABLE;
 8001742:	4b08      	ldr	r3, [pc, #32]	@ (8001764 <MX_CAN2_Init+0x64>)
 8001744:	2200      	movs	r2, #0
 8001746:	771a      	strb	r2, [r3, #28]
  hcan2.Init.TransmitFifoPriority = DISABLE;
 8001748:	4b06      	ldr	r3, [pc, #24]	@ (8001764 <MX_CAN2_Init+0x64>)
 800174a:	2200      	movs	r2, #0
 800174c:	775a      	strb	r2, [r3, #29]
  if (HAL_CAN_Init(&hcan2) != HAL_OK)
 800174e:	4805      	ldr	r0, [pc, #20]	@ (8001764 <MX_CAN2_Init+0x64>)
 8001750:	f000 ff2c 	bl	80025ac <HAL_CAN_Init>
 8001754:	4603      	mov	r3, r0
 8001756:	2b00      	cmp	r3, #0
 8001758:	d001      	beq.n	800175e <MX_CAN2_Init+0x5e>
  {
    Error_Handler();
 800175a:	f000 fa90 	bl	8001c7e <Error_Handler>



  /* USER CODE END CAN2_Init 2 */

}
 800175e:	bf00      	nop
 8001760:	bd80      	pop	{r7, pc}
 8001762:	bf00      	nop
 8001764:	200001fc 	.word	0x200001fc
 8001768:	40006800 	.word	0x40006800

0800176c <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 800176c:	b580      	push	{r7, lr}
 800176e:	b086      	sub	sp, #24
 8001770:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001772:	f107 0308 	add.w	r3, r7, #8
 8001776:	2200      	movs	r2, #0
 8001778:	601a      	str	r2, [r3, #0]
 800177a:	605a      	str	r2, [r3, #4]
 800177c:	609a      	str	r2, [r3, #8]
 800177e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001780:	463b      	mov	r3, r7
 8001782:	2200      	movs	r2, #0
 8001784:	601a      	str	r2, [r3, #0]
 8001786:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8001788:	4b1e      	ldr	r3, [pc, #120]	@ (8001804 <MX_TIM1_Init+0x98>)
 800178a:	4a1f      	ldr	r2, [pc, #124]	@ (8001808 <MX_TIM1_Init+0x9c>)
 800178c:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 16-1;
 800178e:	4b1d      	ldr	r3, [pc, #116]	@ (8001804 <MX_TIM1_Init+0x98>)
 8001790:	220f      	movs	r2, #15
 8001792:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001794:	4b1b      	ldr	r3, [pc, #108]	@ (8001804 <MX_TIM1_Init+0x98>)
 8001796:	2200      	movs	r2, #0
 8001798:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 65535;
 800179a:	4b1a      	ldr	r3, [pc, #104]	@ (8001804 <MX_TIM1_Init+0x98>)
 800179c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80017a0:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80017a2:	4b18      	ldr	r3, [pc, #96]	@ (8001804 <MX_TIM1_Init+0x98>)
 80017a4:	2200      	movs	r2, #0
 80017a6:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 80017a8:	4b16      	ldr	r3, [pc, #88]	@ (8001804 <MX_TIM1_Init+0x98>)
 80017aa:	2200      	movs	r2, #0
 80017ac:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80017ae:	4b15      	ldr	r3, [pc, #84]	@ (8001804 <MX_TIM1_Init+0x98>)
 80017b0:	2200      	movs	r2, #0
 80017b2:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 80017b4:	4813      	ldr	r0, [pc, #76]	@ (8001804 <MX_TIM1_Init+0x98>)
 80017b6:	f002 fe5f 	bl	8004478 <HAL_TIM_Base_Init>
 80017ba:	4603      	mov	r3, r0
 80017bc:	2b00      	cmp	r3, #0
 80017be:	d001      	beq.n	80017c4 <MX_TIM1_Init+0x58>
  {
    Error_Handler();
 80017c0:	f000 fa5d 	bl	8001c7e <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80017c4:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80017c8:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 80017ca:	f107 0308 	add.w	r3, r7, #8
 80017ce:	4619      	mov	r1, r3
 80017d0:	480c      	ldr	r0, [pc, #48]	@ (8001804 <MX_TIM1_Init+0x98>)
 80017d2:	f003 f9df 	bl	8004b94 <HAL_TIM_ConfigClockSource>
 80017d6:	4603      	mov	r3, r0
 80017d8:	2b00      	cmp	r3, #0
 80017da:	d001      	beq.n	80017e0 <MX_TIM1_Init+0x74>
  {
    Error_Handler();
 80017dc:	f000 fa4f 	bl	8001c7e <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80017e0:	2300      	movs	r3, #0
 80017e2:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80017e4:	2300      	movs	r3, #0
 80017e6:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 80017e8:	463b      	mov	r3, r7
 80017ea:	4619      	mov	r1, r3
 80017ec:	4805      	ldr	r0, [pc, #20]	@ (8001804 <MX_TIM1_Init+0x98>)
 80017ee:	f003 fe9b 	bl	8005528 <HAL_TIMEx_MasterConfigSynchronization>
 80017f2:	4603      	mov	r3, r0
 80017f4:	2b00      	cmp	r3, #0
 80017f6:	d001      	beq.n	80017fc <MX_TIM1_Init+0x90>
  {
    Error_Handler();
 80017f8:	f000 fa41 	bl	8001c7e <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 80017fc:	bf00      	nop
 80017fe:	3718      	adds	r7, #24
 8001800:	46bd      	mov	sp, r7
 8001802:	bd80      	pop	{r7, pc}
 8001804:	20000224 	.word	0x20000224
 8001808:	40010000 	.word	0x40010000

0800180c <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 800180c:	b580      	push	{r7, lr}
 800180e:	b08c      	sub	sp, #48	@ 0x30
 8001810:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 8001812:	f107 030c 	add.w	r3, r7, #12
 8001816:	2224      	movs	r2, #36	@ 0x24
 8001818:	2100      	movs	r1, #0
 800181a:	4618      	mov	r0, r3
 800181c:	f005 f8f1 	bl	8006a02 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001820:	1d3b      	adds	r3, r7, #4
 8001822:	2200      	movs	r2, #0
 8001824:	601a      	str	r2, [r3, #0]
 8001826:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8001828:	4b21      	ldr	r3, [pc, #132]	@ (80018b0 <MX_TIM2_Init+0xa4>)
 800182a:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800182e:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 8001830:	4b1f      	ldr	r3, [pc, #124]	@ (80018b0 <MX_TIM2_Init+0xa4>)
 8001832:	2200      	movs	r2, #0
 8001834:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001836:	4b1e      	ldr	r3, [pc, #120]	@ (80018b0 <MX_TIM2_Init+0xa4>)
 8001838:	2200      	movs	r2, #0
 800183a:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 65535;
 800183c:	4b1c      	ldr	r3, [pc, #112]	@ (80018b0 <MX_TIM2_Init+0xa4>)
 800183e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001842:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001844:	4b1a      	ldr	r3, [pc, #104]	@ (80018b0 <MX_TIM2_Init+0xa4>)
 8001846:	2200      	movs	r2, #0
 8001848:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800184a:	4b19      	ldr	r3, [pc, #100]	@ (80018b0 <MX_TIM2_Init+0xa4>)
 800184c:	2200      	movs	r2, #0
 800184e:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 8001850:	2303      	movs	r3, #3
 8001852:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 8001854:	2300      	movs	r3, #0
 8001856:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8001858:	2301      	movs	r3, #1
 800185a:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 800185c:	2300      	movs	r3, #0
 800185e:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 0;
 8001860:	2300      	movs	r3, #0
 8001862:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 8001864:	2300      	movs	r3, #0
 8001866:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 8001868:	2301      	movs	r3, #1
 800186a:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 800186c:	2300      	movs	r3, #0
 800186e:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfig.IC2Filter = 0;
 8001870:	2300      	movs	r3, #0
 8001872:	62fb      	str	r3, [r7, #44]	@ 0x2c
  if (HAL_TIM_Encoder_Init(&htim2, &sConfig) != HAL_OK)
 8001874:	f107 030c 	add.w	r3, r7, #12
 8001878:	4619      	mov	r1, r3
 800187a:	480d      	ldr	r0, [pc, #52]	@ (80018b0 <MX_TIM2_Init+0xa4>)
 800187c:	f002 fea4 	bl	80045c8 <HAL_TIM_Encoder_Init>
 8001880:	4603      	mov	r3, r0
 8001882:	2b00      	cmp	r3, #0
 8001884:	d001      	beq.n	800188a <MX_TIM2_Init+0x7e>
  {
    Error_Handler();
 8001886:	f000 f9fa 	bl	8001c7e <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800188a:	2300      	movs	r3, #0
 800188c:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800188e:	2300      	movs	r3, #0
 8001890:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001892:	1d3b      	adds	r3, r7, #4
 8001894:	4619      	mov	r1, r3
 8001896:	4806      	ldr	r0, [pc, #24]	@ (80018b0 <MX_TIM2_Init+0xa4>)
 8001898:	f003 fe46 	bl	8005528 <HAL_TIMEx_MasterConfigSynchronization>
 800189c:	4603      	mov	r3, r0
 800189e:	2b00      	cmp	r3, #0
 80018a0:	d001      	beq.n	80018a6 <MX_TIM2_Init+0x9a>
  {
    Error_Handler();
 80018a2:	f000 f9ec 	bl	8001c7e <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 80018a6:	bf00      	nop
 80018a8:	3730      	adds	r7, #48	@ 0x30
 80018aa:	46bd      	mov	sp, r7
 80018ac:	bd80      	pop	{r7, pc}
 80018ae:	bf00      	nop
 80018b0:	2000026c 	.word	0x2000026c

080018b4 <MX_TIM5_Init>:
  * @brief TIM5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM5_Init(void)
{
 80018b4:	b580      	push	{r7, lr}
 80018b6:	b086      	sub	sp, #24
 80018b8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80018ba:	f107 0308 	add.w	r3, r7, #8
 80018be:	2200      	movs	r2, #0
 80018c0:	601a      	str	r2, [r3, #0]
 80018c2:	605a      	str	r2, [r3, #4]
 80018c4:	609a      	str	r2, [r3, #8]
 80018c6:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80018c8:	463b      	mov	r3, r7
 80018ca:	2200      	movs	r2, #0
 80018cc:	601a      	str	r2, [r3, #0]
 80018ce:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 80018d0:	4b1d      	ldr	r3, [pc, #116]	@ (8001948 <MX_TIM5_Init+0x94>)
 80018d2:	4a1e      	ldr	r2, [pc, #120]	@ (800194c <MX_TIM5_Init+0x98>)
 80018d4:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 0;
 80018d6:	4b1c      	ldr	r3, [pc, #112]	@ (8001948 <MX_TIM5_Init+0x94>)
 80018d8:	2200      	movs	r2, #0
 80018da:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 80018dc:	4b1a      	ldr	r3, [pc, #104]	@ (8001948 <MX_TIM5_Init+0x94>)
 80018de:	2200      	movs	r2, #0
 80018e0:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 4294967295;
 80018e2:	4b19      	ldr	r3, [pc, #100]	@ (8001948 <MX_TIM5_Init+0x94>)
 80018e4:	f04f 32ff 	mov.w	r2, #4294967295
 80018e8:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80018ea:	4b17      	ldr	r3, [pc, #92]	@ (8001948 <MX_TIM5_Init+0x94>)
 80018ec:	2200      	movs	r2, #0
 80018ee:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80018f0:	4b15      	ldr	r3, [pc, #84]	@ (8001948 <MX_TIM5_Init+0x94>)
 80018f2:	2200      	movs	r2, #0
 80018f4:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 80018f6:	4814      	ldr	r0, [pc, #80]	@ (8001948 <MX_TIM5_Init+0x94>)
 80018f8:	f002 fdbe 	bl	8004478 <HAL_TIM_Base_Init>
 80018fc:	4603      	mov	r3, r0
 80018fe:	2b00      	cmp	r3, #0
 8001900:	d001      	beq.n	8001906 <MX_TIM5_Init+0x52>
  {
    Error_Handler();
 8001902:	f000 f9bc 	bl	8001c7e <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001906:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800190a:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 800190c:	f107 0308 	add.w	r3, r7, #8
 8001910:	4619      	mov	r1, r3
 8001912:	480d      	ldr	r0, [pc, #52]	@ (8001948 <MX_TIM5_Init+0x94>)
 8001914:	f003 f93e 	bl	8004b94 <HAL_TIM_ConfigClockSource>
 8001918:	4603      	mov	r3, r0
 800191a:	2b00      	cmp	r3, #0
 800191c:	d001      	beq.n	8001922 <MX_TIM5_Init+0x6e>
  {
    Error_Handler();
 800191e:	f000 f9ae 	bl	8001c7e <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001922:	2300      	movs	r3, #0
 8001924:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001926:	2300      	movs	r3, #0
 8001928:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 800192a:	463b      	mov	r3, r7
 800192c:	4619      	mov	r1, r3
 800192e:	4806      	ldr	r0, [pc, #24]	@ (8001948 <MX_TIM5_Init+0x94>)
 8001930:	f003 fdfa 	bl	8005528 <HAL_TIMEx_MasterConfigSynchronization>
 8001934:	4603      	mov	r3, r0
 8001936:	2b00      	cmp	r3, #0
 8001938:	d001      	beq.n	800193e <MX_TIM5_Init+0x8a>
  {
    Error_Handler();
 800193a:	f000 f9a0 	bl	8001c7e <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */

}
 800193e:	bf00      	nop
 8001940:	3718      	adds	r7, #24
 8001942:	46bd      	mov	sp, r7
 8001944:	bd80      	pop	{r7, pc}
 8001946:	bf00      	nop
 8001948:	200002b4 	.word	0x200002b4
 800194c:	40000c00 	.word	0x40000c00

08001950 <MX_TIM8_Init>:
  * @brief TIM8 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM8_Init(void)
{
 8001950:	b580      	push	{r7, lr}
 8001952:	b096      	sub	sp, #88	@ 0x58
 8001954:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM8_Init 0 */

  /* USER CODE END TIM8_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001956:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 800195a:	2200      	movs	r2, #0
 800195c:	601a      	str	r2, [r3, #0]
 800195e:	605a      	str	r2, [r3, #4]
 8001960:	609a      	str	r2, [r3, #8]
 8001962:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001964:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8001968:	2200      	movs	r2, #0
 800196a:	601a      	str	r2, [r3, #0]
 800196c:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800196e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001972:	2200      	movs	r2, #0
 8001974:	601a      	str	r2, [r3, #0]
 8001976:	605a      	str	r2, [r3, #4]
 8001978:	609a      	str	r2, [r3, #8]
 800197a:	60da      	str	r2, [r3, #12]
 800197c:	611a      	str	r2, [r3, #16]
 800197e:	615a      	str	r2, [r3, #20]
 8001980:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8001982:	1d3b      	adds	r3, r7, #4
 8001984:	2220      	movs	r2, #32
 8001986:	2100      	movs	r1, #0
 8001988:	4618      	mov	r0, r3
 800198a:	f005 f83a 	bl	8006a02 <memset>

  /* USER CODE BEGIN TIM8_Init 1 */

  /* USER CODE END TIM8_Init 1 */
  htim8.Instance = TIM8;
 800198e:	4b3e      	ldr	r3, [pc, #248]	@ (8001a88 <MX_TIM8_Init+0x138>)
 8001990:	4a3e      	ldr	r2, [pc, #248]	@ (8001a8c <MX_TIM8_Init+0x13c>)
 8001992:	601a      	str	r2, [r3, #0]
  htim8.Init.Prescaler = 15;
 8001994:	4b3c      	ldr	r3, [pc, #240]	@ (8001a88 <MX_TIM8_Init+0x138>)
 8001996:	220f      	movs	r2, #15
 8001998:	605a      	str	r2, [r3, #4]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 800199a:	4b3b      	ldr	r3, [pc, #236]	@ (8001a88 <MX_TIM8_Init+0x138>)
 800199c:	2200      	movs	r2, #0
 800199e:	609a      	str	r2, [r3, #8]
  htim8.Init.Period = 99;
 80019a0:	4b39      	ldr	r3, [pc, #228]	@ (8001a88 <MX_TIM8_Init+0x138>)
 80019a2:	2263      	movs	r2, #99	@ 0x63
 80019a4:	60da      	str	r2, [r3, #12]
  htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80019a6:	4b38      	ldr	r3, [pc, #224]	@ (8001a88 <MX_TIM8_Init+0x138>)
 80019a8:	2200      	movs	r2, #0
 80019aa:	611a      	str	r2, [r3, #16]
  htim8.Init.RepetitionCounter = 0;
 80019ac:	4b36      	ldr	r3, [pc, #216]	@ (8001a88 <MX_TIM8_Init+0x138>)
 80019ae:	2200      	movs	r2, #0
 80019b0:	615a      	str	r2, [r3, #20]
  htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80019b2:	4b35      	ldr	r3, [pc, #212]	@ (8001a88 <MX_TIM8_Init+0x138>)
 80019b4:	2200      	movs	r2, #0
 80019b6:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 80019b8:	4833      	ldr	r0, [pc, #204]	@ (8001a88 <MX_TIM8_Init+0x138>)
 80019ba:	f002 fd5d 	bl	8004478 <HAL_TIM_Base_Init>
 80019be:	4603      	mov	r3, r0
 80019c0:	2b00      	cmp	r3, #0
 80019c2:	d001      	beq.n	80019c8 <MX_TIM8_Init+0x78>
  {
    Error_Handler();
 80019c4:	f000 f95b 	bl	8001c7e <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80019c8:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80019cc:	64bb      	str	r3, [r7, #72]	@ 0x48
  if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 80019ce:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 80019d2:	4619      	mov	r1, r3
 80019d4:	482c      	ldr	r0, [pc, #176]	@ (8001a88 <MX_TIM8_Init+0x138>)
 80019d6:	f003 f8dd 	bl	8004b94 <HAL_TIM_ConfigClockSource>
 80019da:	4603      	mov	r3, r0
 80019dc:	2b00      	cmp	r3, #0
 80019de:	d001      	beq.n	80019e4 <MX_TIM8_Init+0x94>
  {
    Error_Handler();
 80019e0:	f000 f94d 	bl	8001c7e <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim8) != HAL_OK)
 80019e4:	4828      	ldr	r0, [pc, #160]	@ (8001a88 <MX_TIM8_Init+0x138>)
 80019e6:	f002 fd96 	bl	8004516 <HAL_TIM_PWM_Init>
 80019ea:	4603      	mov	r3, r0
 80019ec:	2b00      	cmp	r3, #0
 80019ee:	d001      	beq.n	80019f4 <MX_TIM8_Init+0xa4>
  {
    Error_Handler();
 80019f0:	f000 f945 	bl	8001c7e <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80019f4:	2300      	movs	r3, #0
 80019f6:	643b      	str	r3, [r7, #64]	@ 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80019f8:	2300      	movs	r3, #0
 80019fa:	647b      	str	r3, [r7, #68]	@ 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 80019fc:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8001a00:	4619      	mov	r1, r3
 8001a02:	4821      	ldr	r0, [pc, #132]	@ (8001a88 <MX_TIM8_Init+0x138>)
 8001a04:	f003 fd90 	bl	8005528 <HAL_TIMEx_MasterConfigSynchronization>
 8001a08:	4603      	mov	r3, r0
 8001a0a:	2b00      	cmp	r3, #0
 8001a0c:	d001      	beq.n	8001a12 <MX_TIM8_Init+0xc2>
  {
    Error_Handler();
 8001a0e:	f000 f936 	bl	8001c7e <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001a12:	2360      	movs	r3, #96	@ 0x60
 8001a14:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfigOC.Pulse = 0;
 8001a16:	2300      	movs	r3, #0
 8001a18:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001a1a:	2300      	movs	r3, #0
 8001a1c:	62fb      	str	r3, [r7, #44]	@ 0x2c
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 8001a1e:	2300      	movs	r3, #0
 8001a20:	633b      	str	r3, [r7, #48]	@ 0x30
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001a22:	2300      	movs	r3, #0
 8001a24:	637b      	str	r3, [r7, #52]	@ 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8001a26:	2300      	movs	r3, #0
 8001a28:	63bb      	str	r3, [r7, #56]	@ 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8001a2a:	2300      	movs	r3, #0
 8001a2c:	63fb      	str	r3, [r7, #60]	@ 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001a2e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001a32:	2200      	movs	r2, #0
 8001a34:	4619      	mov	r1, r3
 8001a36:	4814      	ldr	r0, [pc, #80]	@ (8001a88 <MX_TIM8_Init+0x138>)
 8001a38:	f002 ffea 	bl	8004a10 <HAL_TIM_PWM_ConfigChannel>
 8001a3c:	4603      	mov	r3, r0
 8001a3e:	2b00      	cmp	r3, #0
 8001a40:	d001      	beq.n	8001a46 <MX_TIM8_Init+0xf6>
  {
    Error_Handler();
 8001a42:	f000 f91c 	bl	8001c7e <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8001a46:	2300      	movs	r3, #0
 8001a48:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8001a4a:	2300      	movs	r3, #0
 8001a4c:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8001a4e:	2300      	movs	r3, #0
 8001a50:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 8001a52:	2300      	movs	r3, #0
 8001a54:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8001a56:	2300      	movs	r3, #0
 8001a58:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8001a5a:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001a5e:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8001a60:	2300      	movs	r3, #0
 8001a62:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 8001a64:	1d3b      	adds	r3, r7, #4
 8001a66:	4619      	mov	r1, r3
 8001a68:	4807      	ldr	r0, [pc, #28]	@ (8001a88 <MX_TIM8_Init+0x138>)
 8001a6a:	f003 fdd9 	bl	8005620 <HAL_TIMEx_ConfigBreakDeadTime>
 8001a6e:	4603      	mov	r3, r0
 8001a70:	2b00      	cmp	r3, #0
 8001a72:	d001      	beq.n	8001a78 <MX_TIM8_Init+0x128>
  {
    Error_Handler();
 8001a74:	f000 f903 	bl	8001c7e <Error_Handler>
  }
  /* USER CODE BEGIN TIM8_Init 2 */

  /* USER CODE END TIM8_Init 2 */
  HAL_TIM_MspPostInit(&htim8);
 8001a78:	4803      	ldr	r0, [pc, #12]	@ (8001a88 <MX_TIM8_Init+0x138>)
 8001a7a:	f000 fb29 	bl	80020d0 <HAL_TIM_MspPostInit>

}
 8001a7e:	bf00      	nop
 8001a80:	3758      	adds	r7, #88	@ 0x58
 8001a82:	46bd      	mov	sp, r7
 8001a84:	bd80      	pop	{r7, pc}
 8001a86:	bf00      	nop
 8001a88:	200002fc 	.word	0x200002fc
 8001a8c:	40010400 	.word	0x40010400

08001a90 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8001a90:	b580      	push	{r7, lr}
 8001a92:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8001a94:	4b11      	ldr	r3, [pc, #68]	@ (8001adc <MX_USART2_UART_Init+0x4c>)
 8001a96:	4a12      	ldr	r2, [pc, #72]	@ (8001ae0 <MX_USART2_UART_Init+0x50>)
 8001a98:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8001a9a:	4b10      	ldr	r3, [pc, #64]	@ (8001adc <MX_USART2_UART_Init+0x4c>)
 8001a9c:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8001aa0:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8001aa2:	4b0e      	ldr	r3, [pc, #56]	@ (8001adc <MX_USART2_UART_Init+0x4c>)
 8001aa4:	2200      	movs	r2, #0
 8001aa6:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8001aa8:	4b0c      	ldr	r3, [pc, #48]	@ (8001adc <MX_USART2_UART_Init+0x4c>)
 8001aaa:	2200      	movs	r2, #0
 8001aac:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8001aae:	4b0b      	ldr	r3, [pc, #44]	@ (8001adc <MX_USART2_UART_Init+0x4c>)
 8001ab0:	2200      	movs	r2, #0
 8001ab2:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8001ab4:	4b09      	ldr	r3, [pc, #36]	@ (8001adc <MX_USART2_UART_Init+0x4c>)
 8001ab6:	220c      	movs	r2, #12
 8001ab8:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001aba:	4b08      	ldr	r3, [pc, #32]	@ (8001adc <MX_USART2_UART_Init+0x4c>)
 8001abc:	2200      	movs	r2, #0
 8001abe:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8001ac0:	4b06      	ldr	r3, [pc, #24]	@ (8001adc <MX_USART2_UART_Init+0x4c>)
 8001ac2:	2200      	movs	r2, #0
 8001ac4:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8001ac6:	4805      	ldr	r0, [pc, #20]	@ (8001adc <MX_USART2_UART_Init+0x4c>)
 8001ac8:	f003 fe35 	bl	8005736 <HAL_UART_Init>
 8001acc:	4603      	mov	r3, r0
 8001ace:	2b00      	cmp	r3, #0
 8001ad0:	d001      	beq.n	8001ad6 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8001ad2:	f000 f8d4 	bl	8001c7e <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8001ad6:	bf00      	nop
 8001ad8:	bd80      	pop	{r7, pc}
 8001ada:	bf00      	nop
 8001adc:	20000344 	.word	0x20000344
 8001ae0:	40004400 	.word	0x40004400

08001ae4 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001ae4:	b580      	push	{r7, lr}
 8001ae6:	b08a      	sub	sp, #40	@ 0x28
 8001ae8:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001aea:	f107 0314 	add.w	r3, r7, #20
 8001aee:	2200      	movs	r2, #0
 8001af0:	601a      	str	r2, [r3, #0]
 8001af2:	605a      	str	r2, [r3, #4]
 8001af4:	609a      	str	r2, [r3, #8]
 8001af6:	60da      	str	r2, [r3, #12]
 8001af8:	611a      	str	r2, [r3, #16]
  /* USER CODE BEGIN MX_GPIO_Init_1 */
  /* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001afa:	2300      	movs	r3, #0
 8001afc:	613b      	str	r3, [r7, #16]
 8001afe:	4b3b      	ldr	r3, [pc, #236]	@ (8001bec <MX_GPIO_Init+0x108>)
 8001b00:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001b02:	4a3a      	ldr	r2, [pc, #232]	@ (8001bec <MX_GPIO_Init+0x108>)
 8001b04:	f043 0304 	orr.w	r3, r3, #4
 8001b08:	6313      	str	r3, [r2, #48]	@ 0x30
 8001b0a:	4b38      	ldr	r3, [pc, #224]	@ (8001bec <MX_GPIO_Init+0x108>)
 8001b0c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001b0e:	f003 0304 	and.w	r3, r3, #4
 8001b12:	613b      	str	r3, [r7, #16]
 8001b14:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001b16:	2300      	movs	r3, #0
 8001b18:	60fb      	str	r3, [r7, #12]
 8001b1a:	4b34      	ldr	r3, [pc, #208]	@ (8001bec <MX_GPIO_Init+0x108>)
 8001b1c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001b1e:	4a33      	ldr	r2, [pc, #204]	@ (8001bec <MX_GPIO_Init+0x108>)
 8001b20:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001b24:	6313      	str	r3, [r2, #48]	@ 0x30
 8001b26:	4b31      	ldr	r3, [pc, #196]	@ (8001bec <MX_GPIO_Init+0x108>)
 8001b28:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001b2a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001b2e:	60fb      	str	r3, [r7, #12]
 8001b30:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b32:	2300      	movs	r3, #0
 8001b34:	60bb      	str	r3, [r7, #8]
 8001b36:	4b2d      	ldr	r3, [pc, #180]	@ (8001bec <MX_GPIO_Init+0x108>)
 8001b38:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001b3a:	4a2c      	ldr	r2, [pc, #176]	@ (8001bec <MX_GPIO_Init+0x108>)
 8001b3c:	f043 0301 	orr.w	r3, r3, #1
 8001b40:	6313      	str	r3, [r2, #48]	@ 0x30
 8001b42:	4b2a      	ldr	r3, [pc, #168]	@ (8001bec <MX_GPIO_Init+0x108>)
 8001b44:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001b46:	f003 0301 	and.w	r3, r3, #1
 8001b4a:	60bb      	str	r3, [r7, #8]
 8001b4c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b4e:	2300      	movs	r3, #0
 8001b50:	607b      	str	r3, [r7, #4]
 8001b52:	4b26      	ldr	r3, [pc, #152]	@ (8001bec <MX_GPIO_Init+0x108>)
 8001b54:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001b56:	4a25      	ldr	r2, [pc, #148]	@ (8001bec <MX_GPIO_Init+0x108>)
 8001b58:	f043 0302 	orr.w	r3, r3, #2
 8001b5c:	6313      	str	r3, [r2, #48]	@ 0x30
 8001b5e:	4b23      	ldr	r3, [pc, #140]	@ (8001bec <MX_GPIO_Init+0x108>)
 8001b60:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001b62:	f003 0302 	and.w	r3, r3, #2
 8001b66:	607b      	str	r3, [r7, #4]
 8001b68:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 8001b6a:	2200      	movs	r2, #0
 8001b6c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001b70:	481f      	ldr	r0, [pc, #124]	@ (8001bf0 <MX_GPIO_Init+0x10c>)
 8001b72:	f001 fe4f 	bl	8003814 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(DIR_GPIO_Port, DIR_Pin, GPIO_PIN_RESET);
 8001b76:	2200      	movs	r2, #0
 8001b78:	2180      	movs	r1, #128	@ 0x80
 8001b7a:	481e      	ldr	r0, [pc, #120]	@ (8001bf4 <MX_GPIO_Init+0x110>)
 8001b7c:	f001 fe4a 	bl	8003814 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : LED_Pin */
  GPIO_InitStruct.Pin = LED_Pin;
 8001b80:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001b84:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001b86:	2301      	movs	r3, #1
 8001b88:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b8a:	2300      	movs	r3, #0
 8001b8c:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001b8e:	2300      	movs	r3, #0
 8001b90:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 8001b92:	f107 0314 	add.w	r3, r7, #20
 8001b96:	4619      	mov	r1, r3
 8001b98:	4815      	ldr	r0, [pc, #84]	@ (8001bf0 <MX_GPIO_Init+0x10c>)
 8001b9a:	f001 fca7 	bl	80034ec <HAL_GPIO_Init>

  /*Configure GPIO pin : LIMIT_Pin */
  GPIO_InitStruct.Pin = LIMIT_Pin;
 8001b9e:	2308      	movs	r3, #8
 8001ba0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8001ba2:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 8001ba6:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001ba8:	2301      	movs	r3, #1
 8001baa:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(LIMIT_GPIO_Port, &GPIO_InitStruct);
 8001bac:	f107 0314 	add.w	r3, r7, #20
 8001bb0:	4619      	mov	r1, r3
 8001bb2:	480f      	ldr	r0, [pc, #60]	@ (8001bf0 <MX_GPIO_Init+0x10c>)
 8001bb4:	f001 fc9a 	bl	80034ec <HAL_GPIO_Init>

  /*Configure GPIO pin : DIR_Pin */
  GPIO_InitStruct.Pin = DIR_Pin;
 8001bb8:	2380      	movs	r3, #128	@ 0x80
 8001bba:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001bbc:	2301      	movs	r3, #1
 8001bbe:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001bc0:	2300      	movs	r3, #0
 8001bc2:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001bc4:	2300      	movs	r3, #0
 8001bc6:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(DIR_GPIO_Port, &GPIO_InitStruct);
 8001bc8:	f107 0314 	add.w	r3, r7, #20
 8001bcc:	4619      	mov	r1, r3
 8001bce:	4809      	ldr	r0, [pc, #36]	@ (8001bf4 <MX_GPIO_Init+0x110>)
 8001bd0:	f001 fc8c 	bl	80034ec <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI3_IRQn, 0, 0);
 8001bd4:	2200      	movs	r2, #0
 8001bd6:	2100      	movs	r1, #0
 8001bd8:	2009      	movs	r0, #9
 8001bda:	f001 fc50 	bl	800347e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8001bde:	2009      	movs	r0, #9
 8001be0:	f001 fc69 	bl	80034b6 <HAL_NVIC_EnableIRQ>

  /* USER CODE BEGIN MX_GPIO_Init_2 */
  /* USER CODE END MX_GPIO_Init_2 */
}
 8001be4:	bf00      	nop
 8001be6:	3728      	adds	r7, #40	@ 0x28
 8001be8:	46bd      	mov	sp, r7
 8001bea:	bd80      	pop	{r7, pc}
 8001bec:	40023800 	.word	0x40023800
 8001bf0:	40020800 	.word	0x40020800
 8001bf4:	40020000 	.word	0x40020000

08001bf8 <HAL_CAN_RxFifo0MsgPendingCallback>:

/* USER CODE BEGIN 4 */


void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan) {
 8001bf8:	b580      	push	{r7, lr}
 8001bfa:	b082      	sub	sp, #8
 8001bfc:	af00      	add	r7, sp, #0
 8001bfe:	6078      	str	r0, [r7, #4]
    // Keep reading until FIFO is empty, but only keep the last message
    while (HAL_CAN_GetRxFifoFillLevel(hcan, CAN_RX_FIFO0) > 0) {
 8001c00:	e005      	b.n	8001c0e <HAL_CAN_RxFifo0MsgPendingCallback+0x16>
        HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO0, &RxHeader, rxData);
 8001c02:	4b0a      	ldr	r3, [pc, #40]	@ (8001c2c <HAL_CAN_RxFifo0MsgPendingCallback+0x34>)
 8001c04:	4a0a      	ldr	r2, [pc, #40]	@ (8001c30 <HAL_CAN_RxFifo0MsgPendingCallback+0x38>)
 8001c06:	2100      	movs	r1, #0
 8001c08:	6878      	ldr	r0, [r7, #4]
 8001c0a:	f000 ffbd 	bl	8002b88 <HAL_CAN_GetRxMessage>
    while (HAL_CAN_GetRxFifoFillLevel(hcan, CAN_RX_FIFO0) > 0) {
 8001c0e:	2100      	movs	r1, #0
 8001c10:	6878      	ldr	r0, [r7, #4]
 8001c12:	f001 f8db 	bl	8002dcc <HAL_CAN_GetRxFifoFillLevel>
 8001c16:	4603      	mov	r3, r0
 8001c18:	2b00      	cmp	r3, #0
 8001c1a:	d1f2      	bne.n	8001c02 <HAL_CAN_RxFifo0MsgPendingCallback+0xa>
    }
    datacheck = 1;
 8001c1c:	4b05      	ldr	r3, [pc, #20]	@ (8001c34 <HAL_CAN_RxFifo0MsgPendingCallback+0x3c>)
 8001c1e:	2201      	movs	r2, #1
 8001c20:	601a      	str	r2, [r3, #0]
}
 8001c22:	bf00      	nop
 8001c24:	3708      	adds	r7, #8
 8001c26:	46bd      	mov	sp, r7
 8001c28:	bd80      	pop	{r7, pc}
 8001c2a:	bf00      	nop
 8001c2c:	200003a8 	.word	0x200003a8
 8001c30:	2000038c 	.word	0x2000038c
 8001c34:	200003b0 	.word	0x200003b0

08001c38 <__io_putchar>:
  * @brief  Retargets the C library printf function to the USART.
  *   None
  * @retval None
  */
PUTCHAR_PROTOTYPE
{
 8001c38:	b580      	push	{r7, lr}
 8001c3a:	b082      	sub	sp, #8
 8001c3c:	af00      	add	r7, sp, #0
 8001c3e:	6078      	str	r0, [r7, #4]
  /* Place your implementation of fputc here */
  /* e.g. write a character to the USART1 and Loop until the end of transmission */
  HAL_UART_Transmit(&huart2, (uint8_t *)&ch, 1, 0xFFFF);
 8001c40:	1d39      	adds	r1, r7, #4
 8001c42:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001c46:	2201      	movs	r2, #1
 8001c48:	4803      	ldr	r0, [pc, #12]	@ (8001c58 <__io_putchar+0x20>)
 8001c4a:	f003 fdc4 	bl	80057d6 <HAL_UART_Transmit>

  return ch;
 8001c4e:	687b      	ldr	r3, [r7, #4]
}
 8001c50:	4618      	mov	r0, r3
 8001c52:	3708      	adds	r7, #8
 8001c54:	46bd      	mov	sp, r7
 8001c56:	bd80      	pop	{r7, pc}
 8001c58:	20000344 	.word	0x20000344

08001c5c <HAL_GPIO_EXTI_Callback>:

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_PIN)
{
 8001c5c:	b580      	push	{r7, lr}
 8001c5e:	b082      	sub	sp, #8
 8001c60:	af00      	add	r7, sp, #0
 8001c62:	4603      	mov	r3, r0
 8001c64:	80fb      	strh	r3, [r7, #6]
	set_counts(0);
 8001c66:	2000      	movs	r0, #0
 8001c68:	f7ff fbc2 	bl	80013f0 <set_counts>
	if (GPIO_PIN == LIMIT_Pin){
 8001c6c:	88fb      	ldrh	r3, [r7, #6]
 8001c6e:	2b08      	cmp	r3, #8
 8001c70:	d101      	bne.n	8001c76 <HAL_GPIO_EXTI_Callback+0x1a>
		calibrate_encoder();
 8001c72:	f7ff fc69 	bl	8001548 <calibrate_encoder>
	}
}
 8001c76:	bf00      	nop
 8001c78:	3708      	adds	r7, #8
 8001c7a:	46bd      	mov	sp, r7
 8001c7c:	bd80      	pop	{r7, pc}

08001c7e <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001c7e:	b480      	push	{r7}
 8001c80:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001c82:	b672      	cpsid	i
}
 8001c84:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001c86:	bf00      	nop
 8001c88:	e7fd      	b.n	8001c86 <Error_Handler+0x8>

08001c8a <stop_motor>:
int direction = 1;

// Change based on what motor is being controlled!
int STEERING_ID = RF_STEER;

void stop_motor(){
 8001c8a:	b580      	push	{r7, lr}
 8001c8c:	b082      	sub	sp, #8
 8001c8e:	af00      	add	r7, sp, #0
	set_motor_speed(0);
 8001c90:	2000      	movs	r0, #0
 8001c92:	f000 f815 	bl	8001cc0 <set_motor_speed>
	int counts = get_counts();
 8001c96:	f7ff fbd5 	bl	8001444 <get_counts>
 8001c9a:	6078      	str	r0, [r7, #4]
	setPIDGoalA(count_to_angle(counts));
 8001c9c:	6878      	ldr	r0, [r7, #4]
 8001c9e:	f7ff fbdd 	bl	800145c <count_to_angle>
 8001ca2:	ee10 3a10 	vmov	r3, s0
 8001ca6:	4618      	mov	r0, r3
 8001ca8:	f7fe fc6e 	bl	8000588 <__aeabi_f2d>
 8001cac:	4602      	mov	r2, r0
 8001cae:	460b      	mov	r3, r1
 8001cb0:	ec43 2b10 	vmov	d0, r2, r3
 8001cb4:	f000 f8b8 	bl	8001e28 <setPIDGoalA>
}
 8001cb8:	bf00      	nop
 8001cba:	3708      	adds	r7, #8
 8001cbc:	46bd      	mov	sp, r7
 8001cbe:	bd80      	pop	{r7, pc}

08001cc0 <set_motor_speed>:

void set_motor_speed(int n){
 8001cc0:	b480      	push	{r7}
 8001cc2:	b083      	sub	sp, #12
 8001cc4:	af00      	add	r7, sp, #0
 8001cc6:	6078      	str	r0, [r7, #4]
	TIM8->CCR1 = n;
 8001cc8:	4a04      	ldr	r2, [pc, #16]	@ (8001cdc <set_motor_speed+0x1c>)
 8001cca:	687b      	ldr	r3, [r7, #4]
 8001ccc:	6353      	str	r3, [r2, #52]	@ 0x34
}
 8001cce:	bf00      	nop
 8001cd0:	370c      	adds	r7, #12
 8001cd2:	46bd      	mov	sp, r7
 8001cd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cd8:	4770      	bx	lr
 8001cda:	bf00      	nop
 8001cdc:	40010400 	.word	0x40010400

08001ce0 <set_motor_direction>:


void set_motor_direction(int n){
 8001ce0:	b580      	push	{r7, lr}
 8001ce2:	b082      	sub	sp, #8
 8001ce4:	af00      	add	r7, sp, #0
 8001ce6:	6078      	str	r0, [r7, #4]
	if (n) {
 8001ce8:	687b      	ldr	r3, [r7, #4]
 8001cea:	2b00      	cmp	r3, #0
 8001cec:	d005      	beq.n	8001cfa <set_motor_direction+0x1a>
		HAL_GPIO_WritePin(DIR_GPIO_Port, DIR_Pin, GPIO_PIN_RESET);
 8001cee:	2200      	movs	r2, #0
 8001cf0:	2180      	movs	r1, #128	@ 0x80
 8001cf2:	4808      	ldr	r0, [pc, #32]	@ (8001d14 <set_motor_direction+0x34>)
 8001cf4:	f001 fd8e 	bl	8003814 <HAL_GPIO_WritePin>
 8001cf8:	e004      	b.n	8001d04 <set_motor_direction+0x24>
	}
	else {
		HAL_GPIO_WritePin(DIR_GPIO_Port, DIR_Pin, GPIO_PIN_SET);
 8001cfa:	2201      	movs	r2, #1
 8001cfc:	2180      	movs	r1, #128	@ 0x80
 8001cfe:	4805      	ldr	r0, [pc, #20]	@ (8001d14 <set_motor_direction+0x34>)
 8001d00:	f001 fd88 	bl	8003814 <HAL_GPIO_WritePin>
	}
	direction = n;
 8001d04:	4a04      	ldr	r2, [pc, #16]	@ (8001d18 <set_motor_direction+0x38>)
 8001d06:	687b      	ldr	r3, [r7, #4]
 8001d08:	6013      	str	r3, [r2, #0]
}
 8001d0a:	bf00      	nop
 8001d0c:	3708      	adds	r7, #8
 8001d0e:	46bd      	mov	sp, r7
 8001d10:	bd80      	pop	{r7, pc}
 8001d12:	bf00      	nop
 8001d14:	40020000 	.word	0x40020000
 8001d18:	20000000 	.word	0x20000000

08001d1c <updatePID>:
int oldAngleError = 0;

static volatile atomic_int goalAngle = ATOMIC_VAR_INIT (0);


void updatePID() {
 8001d1c:	b590      	push	{r4, r7, lr}
 8001d1e:	b085      	sub	sp, #20
 8001d20:	af00      	add	r7, sp, #0
	 *
	 * For assignment 3.2: implement this function so it calculates distanceError as the difference between your goal distance and the average of
	 * your left and right encoder counts. Calculate angleError as the difference between your goal angle and the difference between your left and
	 * right encoder counts. Refer to stocked example document on the google drive for some pointers.
	 */
	angleError = atomic_load(&goalAngle) - get_counts();
 8001d22:	4b3d      	ldr	r3, [pc, #244]	@ (8001e18 <updatePID+0xfc>)
 8001d24:	60fb      	str	r3, [r7, #12]
 8001d26:	68fb      	ldr	r3, [r7, #12]
 8001d28:	f3bf 8f5b 	dmb	ish
 8001d2c:	681b      	ldr	r3, [r3, #0]
 8001d2e:	f3bf 8f5b 	dmb	ish
 8001d32:	607b      	str	r3, [r7, #4]
 8001d34:	687c      	ldr	r4, [r7, #4]
 8001d36:	f7ff fb85 	bl	8001444 <get_counts>
 8001d3a:	4603      	mov	r3, r0
 8001d3c:	1ae3      	subs	r3, r4, r3
 8001d3e:	4a37      	ldr	r2, [pc, #220]	@ (8001e1c <updatePID+0x100>)
 8001d40:	6013      	str	r3, [r2, #0]
	// Find optimal direction
	if (abs(angleError) > MAX_COUNTS/2) {
 8001d42:	4b36      	ldr	r3, [pc, #216]	@ (8001e1c <updatePID+0x100>)
 8001d44:	681b      	ldr	r3, [r3, #0]
 8001d46:	2b00      	cmp	r3, #0
 8001d48:	bfb8      	it	lt
 8001d4a:	425b      	neglt	r3, r3
 8001d4c:	f5b3 4f81 	cmp.w	r3, #16512	@ 0x4080
 8001d50:	dd10      	ble.n	8001d74 <updatePID+0x58>
		if (angleError > 0) {
 8001d52:	4b32      	ldr	r3, [pc, #200]	@ (8001e1c <updatePID+0x100>)
 8001d54:	681b      	ldr	r3, [r3, #0]
 8001d56:	2b00      	cmp	r3, #0
 8001d58:	dd06      	ble.n	8001d68 <updatePID+0x4c>
			angleError = angleError - MAX_COUNTS;
 8001d5a:	4b30      	ldr	r3, [pc, #192]	@ (8001e1c <updatePID+0x100>)
 8001d5c:	681b      	ldr	r3, [r3, #0]
 8001d5e:	f5a3 4301 	sub.w	r3, r3, #33024	@ 0x8100
 8001d62:	4a2e      	ldr	r2, [pc, #184]	@ (8001e1c <updatePID+0x100>)
 8001d64:	6013      	str	r3, [r2, #0]
 8001d66:	e005      	b.n	8001d74 <updatePID+0x58>
		}
		else {
			angleError = angleError + MAX_COUNTS;
 8001d68:	4b2c      	ldr	r3, [pc, #176]	@ (8001e1c <updatePID+0x100>)
 8001d6a:	681b      	ldr	r3, [r3, #0]
 8001d6c:	f503 4301 	add.w	r3, r3, #33024	@ 0x8100
 8001d70:	4a2a      	ldr	r2, [pc, #168]	@ (8001e1c <updatePID+0x100>)
 8001d72:	6013      	str	r3, [r2, #0]
		}
	}
    angleCorrection = kPw * angleError + kDw * (angleError - oldAngleError);
 8001d74:	4b29      	ldr	r3, [pc, #164]	@ (8001e1c <updatePID+0x100>)
 8001d76:	681a      	ldr	r2, [r3, #0]
 8001d78:	4b29      	ldr	r3, [pc, #164]	@ (8001e20 <updatePID+0x104>)
 8001d7a:	681b      	ldr	r3, [r3, #0]
 8001d7c:	1ad3      	subs	r3, r2, r3
 8001d7e:	00da      	lsls	r2, r3, #3
 8001d80:	4b26      	ldr	r3, [pc, #152]	@ (8001e1c <updatePID+0x100>)
 8001d82:	681b      	ldr	r3, [r3, #0]
 8001d84:	4413      	add	r3, r2
 8001d86:	4a27      	ldr	r2, [pc, #156]	@ (8001e24 <updatePID+0x108>)
 8001d88:	6013      	str	r3, [r2, #0]
    // Set direction based on allowed error
	if (angleCorrection < 0){
 8001d8a:	4b26      	ldr	r3, [pc, #152]	@ (8001e24 <updatePID+0x108>)
 8001d8c:	681b      	ldr	r3, [r3, #0]
 8001d8e:	2b00      	cmp	r3, #0
 8001d90:	da03      	bge.n	8001d9a <updatePID+0x7e>
		set_motor_direction(0);
 8001d92:	2000      	movs	r0, #0
 8001d94:	f7ff ffa4 	bl	8001ce0 <set_motor_direction>
 8001d98:	e002      	b.n	8001da0 <updatePID+0x84>
	} else{
		set_motor_direction(1);
 8001d9a:	2001      	movs	r0, #1
 8001d9c:	f7ff ffa0 	bl	8001ce0 <set_motor_direction>
	}
	if (abs(angleCorrection) > 100) {
 8001da0:	4b20      	ldr	r3, [pc, #128]	@ (8001e24 <updatePID+0x108>)
 8001da2:	681b      	ldr	r3, [r3, #0]
 8001da4:	2b00      	cmp	r3, #0
 8001da6:	bfb8      	it	lt
 8001da8:	425b      	neglt	r3, r3
 8001daa:	2b64      	cmp	r3, #100	@ 0x64
 8001dac:	dd02      	ble.n	8001db4 <updatePID+0x98>
		angleCorrection = 100;
 8001dae:	4b1d      	ldr	r3, [pc, #116]	@ (8001e24 <updatePID+0x108>)
 8001db0:	2264      	movs	r2, #100	@ 0x64
 8001db2:	601a      	str	r2, [r3, #0]
	}
	oldAngleError = angleError;
 8001db4:	4b19      	ldr	r3, [pc, #100]	@ (8001e1c <updatePID+0x100>)
 8001db6:	681b      	ldr	r3, [r3, #0]
 8001db8:	4a19      	ldr	r2, [pc, #100]	@ (8001e20 <updatePID+0x104>)
 8001dba:	6013      	str	r3, [r2, #0]
	// Stop if within error
	if (abs(angleError) <  ALLOWED_ERROR){
 8001dbc:	4b17      	ldr	r3, [pc, #92]	@ (8001e1c <updatePID+0x100>)
 8001dbe:	681b      	ldr	r3, [r3, #0]
 8001dc0:	f113 0f63 	cmn.w	r3, #99	@ 0x63
 8001dc4:	db07      	blt.n	8001dd6 <updatePID+0xba>
 8001dc6:	4b15      	ldr	r3, [pc, #84]	@ (8001e1c <updatePID+0x100>)
 8001dc8:	681b      	ldr	r3, [r3, #0]
 8001dca:	2b63      	cmp	r3, #99	@ 0x63
 8001dcc:	dc03      	bgt.n	8001dd6 <updatePID+0xba>
		set_motor_speed(0);
 8001dce:	2000      	movs	r0, #0
 8001dd0:	f7ff ff76 	bl	8001cc0 <set_motor_speed>
		return;
 8001dd4:	e01c      	b.n	8001e10 <updatePID+0xf4>
	}

	// Handle strange oscillations near 0 degrees with higher allowed error
	if (goalAngle == 0) {
 8001dd6:	4b10      	ldr	r3, [pc, #64]	@ (8001e18 <updatePID+0xfc>)
 8001dd8:	f3bf 8f5b 	dmb	ish
 8001ddc:	681b      	ldr	r3, [r3, #0]
 8001dde:	f3bf 8f5b 	dmb	ish
 8001de2:	60bb      	str	r3, [r7, #8]
 8001de4:	68bb      	ldr	r3, [r7, #8]
 8001de6:	2b00      	cmp	r3, #0
 8001de8:	d10d      	bne.n	8001e06 <updatePID+0xea>
		if (abs(angleError) < ALLOWED_ERROR_ZERO) {
 8001dea:	4b0c      	ldr	r3, [pc, #48]	@ (8001e1c <updatePID+0x100>)
 8001dec:	681b      	ldr	r3, [r3, #0]
 8001dee:	f513 7f96 	cmn.w	r3, #300	@ 0x12c
 8001df2:	dd08      	ble.n	8001e06 <updatePID+0xea>
 8001df4:	4b09      	ldr	r3, [pc, #36]	@ (8001e1c <updatePID+0x100>)
 8001df6:	681b      	ldr	r3, [r3, #0]
 8001df8:	f5b3 7f96 	cmp.w	r3, #300	@ 0x12c
 8001dfc:	da03      	bge.n	8001e06 <updatePID+0xea>
			set_motor_speed(0);
 8001dfe:	2000      	movs	r0, #0
 8001e00:	f7ff ff5e 	bl	8001cc0 <set_motor_speed>
			return;
 8001e04:	e004      	b.n	8001e10 <updatePID+0xf4>
		}
	}
	set_motor_speed(angleCorrection);
 8001e06:	4b07      	ldr	r3, [pc, #28]	@ (8001e24 <updatePID+0x108>)
 8001e08:	681b      	ldr	r3, [r3, #0]
 8001e0a:	4618      	mov	r0, r3
 8001e0c:	f7ff ff58 	bl	8001cc0 <set_motor_speed>

}
 8001e10:	3714      	adds	r7, #20
 8001e12:	46bd      	mov	sp, r7
 8001e14:	bd90      	pop	{r4, r7, pc}
 8001e16:	bf00      	nop
 8001e18:	200003c0 	.word	0x200003c0
 8001e1c:	200003b4 	.word	0x200003b4
 8001e20:	200003bc 	.word	0x200003bc
 8001e24:	200003b8 	.word	0x200003b8

08001e28 <setPIDGoalA>:

void setPIDGoalA(double angle) {
 8001e28:	b580      	push	{r7, lr}
 8001e2a:	b084      	sub	sp, #16
 8001e2c:	af00      	add	r7, sp, #0
 8001e2e:	ed87 0b00 	vstr	d0, [r7]
	atomic_store(&goalAngle, angle_to_count(angle));
 8001e32:	4b0a      	ldr	r3, [pc, #40]	@ (8001e5c <setPIDGoalA+0x34>)
 8001e34:	60fb      	str	r3, [r7, #12]
 8001e36:	ed97 0b00 	vldr	d0, [r7]
 8001e3a:	f7ff fb51 	bl	80014e0 <angle_to_count>
 8001e3e:	4603      	mov	r3, r0
 8001e40:	60bb      	str	r3, [r7, #8]
 8001e42:	68bb      	ldr	r3, [r7, #8]
 8001e44:	461a      	mov	r2, r3
 8001e46:	68fb      	ldr	r3, [r7, #12]
 8001e48:	f3bf 8f5b 	dmb	ish
 8001e4c:	601a      	str	r2, [r3, #0]
 8001e4e:	f3bf 8f5b 	dmb	ish
}
 8001e52:	bf00      	nop
 8001e54:	3710      	adds	r7, #16
 8001e56:	46bd      	mov	sp, r7
 8001e58:	bd80      	pop	{r7, pc}
 8001e5a:	bf00      	nop
 8001e5c:	200003c0 	.word	0x200003c0

08001e60 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001e60:	b480      	push	{r7}
 8001e62:	b083      	sub	sp, #12
 8001e64:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001e66:	2300      	movs	r3, #0
 8001e68:	607b      	str	r3, [r7, #4]
 8001e6a:	4b10      	ldr	r3, [pc, #64]	@ (8001eac <HAL_MspInit+0x4c>)
 8001e6c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001e6e:	4a0f      	ldr	r2, [pc, #60]	@ (8001eac <HAL_MspInit+0x4c>)
 8001e70:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001e74:	6453      	str	r3, [r2, #68]	@ 0x44
 8001e76:	4b0d      	ldr	r3, [pc, #52]	@ (8001eac <HAL_MspInit+0x4c>)
 8001e78:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001e7a:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001e7e:	607b      	str	r3, [r7, #4]
 8001e80:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001e82:	2300      	movs	r3, #0
 8001e84:	603b      	str	r3, [r7, #0]
 8001e86:	4b09      	ldr	r3, [pc, #36]	@ (8001eac <HAL_MspInit+0x4c>)
 8001e88:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001e8a:	4a08      	ldr	r2, [pc, #32]	@ (8001eac <HAL_MspInit+0x4c>)
 8001e8c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001e90:	6413      	str	r3, [r2, #64]	@ 0x40
 8001e92:	4b06      	ldr	r3, [pc, #24]	@ (8001eac <HAL_MspInit+0x4c>)
 8001e94:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001e96:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001e9a:	603b      	str	r3, [r7, #0]
 8001e9c:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001e9e:	bf00      	nop
 8001ea0:	370c      	adds	r7, #12
 8001ea2:	46bd      	mov	sp, r7
 8001ea4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ea8:	4770      	bx	lr
 8001eaa:	bf00      	nop
 8001eac:	40023800 	.word	0x40023800

08001eb0 <HAL_CAN_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hcan: CAN handle pointer
  * @retval None
  */
void HAL_CAN_MspInit(CAN_HandleTypeDef* hcan)
{
 8001eb0:	b580      	push	{r7, lr}
 8001eb2:	b08a      	sub	sp, #40	@ 0x28
 8001eb4:	af00      	add	r7, sp, #0
 8001eb6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001eb8:	f107 0314 	add.w	r3, r7, #20
 8001ebc:	2200      	movs	r2, #0
 8001ebe:	601a      	str	r2, [r3, #0]
 8001ec0:	605a      	str	r2, [r3, #4]
 8001ec2:	609a      	str	r2, [r3, #8]
 8001ec4:	60da      	str	r2, [r3, #12]
 8001ec6:	611a      	str	r2, [r3, #16]
  if(hcan->Instance==CAN2)
 8001ec8:	687b      	ldr	r3, [r7, #4]
 8001eca:	681b      	ldr	r3, [r3, #0]
 8001ecc:	4a2c      	ldr	r2, [pc, #176]	@ (8001f80 <HAL_CAN_MspInit+0xd0>)
 8001ece:	4293      	cmp	r3, r2
 8001ed0:	d151      	bne.n	8001f76 <HAL_CAN_MspInit+0xc6>
  {
    /* USER CODE BEGIN CAN2_MspInit 0 */

    /* USER CODE END CAN2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CAN2_CLK_ENABLE();
 8001ed2:	2300      	movs	r3, #0
 8001ed4:	613b      	str	r3, [r7, #16]
 8001ed6:	4b2b      	ldr	r3, [pc, #172]	@ (8001f84 <HAL_CAN_MspInit+0xd4>)
 8001ed8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001eda:	4a2a      	ldr	r2, [pc, #168]	@ (8001f84 <HAL_CAN_MspInit+0xd4>)
 8001edc:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8001ee0:	6413      	str	r3, [r2, #64]	@ 0x40
 8001ee2:	4b28      	ldr	r3, [pc, #160]	@ (8001f84 <HAL_CAN_MspInit+0xd4>)
 8001ee4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ee6:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8001eea:	613b      	str	r3, [r7, #16]
 8001eec:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_CAN1_CLK_ENABLE();
 8001eee:	2300      	movs	r3, #0
 8001ef0:	60fb      	str	r3, [r7, #12]
 8001ef2:	4b24      	ldr	r3, [pc, #144]	@ (8001f84 <HAL_CAN_MspInit+0xd4>)
 8001ef4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ef6:	4a23      	ldr	r2, [pc, #140]	@ (8001f84 <HAL_CAN_MspInit+0xd4>)
 8001ef8:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8001efc:	6413      	str	r3, [r2, #64]	@ 0x40
 8001efe:	4b21      	ldr	r3, [pc, #132]	@ (8001f84 <HAL_CAN_MspInit+0xd4>)
 8001f00:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f02:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001f06:	60fb      	str	r3, [r7, #12]
 8001f08:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001f0a:	2300      	movs	r3, #0
 8001f0c:	60bb      	str	r3, [r7, #8]
 8001f0e:	4b1d      	ldr	r3, [pc, #116]	@ (8001f84 <HAL_CAN_MspInit+0xd4>)
 8001f10:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001f12:	4a1c      	ldr	r2, [pc, #112]	@ (8001f84 <HAL_CAN_MspInit+0xd4>)
 8001f14:	f043 0302 	orr.w	r3, r3, #2
 8001f18:	6313      	str	r3, [r2, #48]	@ 0x30
 8001f1a:	4b1a      	ldr	r3, [pc, #104]	@ (8001f84 <HAL_CAN_MspInit+0xd4>)
 8001f1c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001f1e:	f003 0302 	and.w	r3, r3, #2
 8001f22:	60bb      	str	r3, [r7, #8]
 8001f24:	68bb      	ldr	r3, [r7, #8]
    /**CAN2 GPIO Configuration
    PB5     ------> CAN2_RX
    PB6     ------> CAN2_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001f26:	2360      	movs	r3, #96	@ 0x60
 8001f28:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f2a:	2302      	movs	r3, #2
 8001f2c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f2e:	2300      	movs	r3, #0
 8001f30:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f32:	2303      	movs	r3, #3
 8001f34:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_CAN2;
 8001f36:	2309      	movs	r3, #9
 8001f38:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f3a:	f107 0314 	add.w	r3, r7, #20
 8001f3e:	4619      	mov	r1, r3
 8001f40:	4811      	ldr	r0, [pc, #68]	@ (8001f88 <HAL_CAN_MspInit+0xd8>)
 8001f42:	f001 fad3 	bl	80034ec <HAL_GPIO_Init>

    /* CAN2 interrupt Init */
    HAL_NVIC_SetPriority(CAN2_TX_IRQn, 0, 0);
 8001f46:	2200      	movs	r2, #0
 8001f48:	2100      	movs	r1, #0
 8001f4a:	203f      	movs	r0, #63	@ 0x3f
 8001f4c:	f001 fa97 	bl	800347e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(CAN2_TX_IRQn);
 8001f50:	203f      	movs	r0, #63	@ 0x3f
 8001f52:	f001 fab0 	bl	80034b6 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(CAN2_RX0_IRQn, 0, 0);
 8001f56:	2200      	movs	r2, #0
 8001f58:	2100      	movs	r1, #0
 8001f5a:	2040      	movs	r0, #64	@ 0x40
 8001f5c:	f001 fa8f 	bl	800347e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(CAN2_RX0_IRQn);
 8001f60:	2040      	movs	r0, #64	@ 0x40
 8001f62:	f001 faa8 	bl	80034b6 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(CAN2_RX1_IRQn, 0, 0);
 8001f66:	2200      	movs	r2, #0
 8001f68:	2100      	movs	r1, #0
 8001f6a:	2041      	movs	r0, #65	@ 0x41
 8001f6c:	f001 fa87 	bl	800347e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(CAN2_RX1_IRQn);
 8001f70:	2041      	movs	r0, #65	@ 0x41
 8001f72:	f001 faa0 	bl	80034b6 <HAL_NVIC_EnableIRQ>

    /* USER CODE END CAN2_MspInit 1 */

  }

}
 8001f76:	bf00      	nop
 8001f78:	3728      	adds	r7, #40	@ 0x28
 8001f7a:	46bd      	mov	sp, r7
 8001f7c:	bd80      	pop	{r7, pc}
 8001f7e:	bf00      	nop
 8001f80:	40006800 	.word	0x40006800
 8001f84:	40023800 	.word	0x40023800
 8001f88:	40020400 	.word	0x40020400

08001f8c <HAL_TIM_Base_MspInit>:
  * This function configures the hardware resources used in this example
  * @param htim_base: TIM_Base handle pointer
  * @retval None
  */
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001f8c:	b580      	push	{r7, lr}
 8001f8e:	b086      	sub	sp, #24
 8001f90:	af00      	add	r7, sp, #0
 8001f92:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM1)
 8001f94:	687b      	ldr	r3, [r7, #4]
 8001f96:	681b      	ldr	r3, [r3, #0]
 8001f98:	4a26      	ldr	r2, [pc, #152]	@ (8002034 <HAL_TIM_Base_MspInit+0xa8>)
 8001f9a:	4293      	cmp	r3, r2
 8001f9c:	d10e      	bne.n	8001fbc <HAL_TIM_Base_MspInit+0x30>
  {
    /* USER CODE BEGIN TIM1_MspInit 0 */

    /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8001f9e:	2300      	movs	r3, #0
 8001fa0:	617b      	str	r3, [r7, #20]
 8001fa2:	4b25      	ldr	r3, [pc, #148]	@ (8002038 <HAL_TIM_Base_MspInit+0xac>)
 8001fa4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001fa6:	4a24      	ldr	r2, [pc, #144]	@ (8002038 <HAL_TIM_Base_MspInit+0xac>)
 8001fa8:	f043 0301 	orr.w	r3, r3, #1
 8001fac:	6453      	str	r3, [r2, #68]	@ 0x44
 8001fae:	4b22      	ldr	r3, [pc, #136]	@ (8002038 <HAL_TIM_Base_MspInit+0xac>)
 8001fb0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001fb2:	f003 0301 	and.w	r3, r3, #1
 8001fb6:	617b      	str	r3, [r7, #20]
 8001fb8:	697b      	ldr	r3, [r7, #20]
    /* USER CODE BEGIN TIM8_MspInit 1 */

    /* USER CODE END TIM8_MspInit 1 */
  }

}
 8001fba:	e036      	b.n	800202a <HAL_TIM_Base_MspInit+0x9e>
  else if(htim_base->Instance==TIM5)
 8001fbc:	687b      	ldr	r3, [r7, #4]
 8001fbe:	681b      	ldr	r3, [r3, #0]
 8001fc0:	4a1e      	ldr	r2, [pc, #120]	@ (800203c <HAL_TIM_Base_MspInit+0xb0>)
 8001fc2:	4293      	cmp	r3, r2
 8001fc4:	d10e      	bne.n	8001fe4 <HAL_TIM_Base_MspInit+0x58>
    __HAL_RCC_TIM5_CLK_ENABLE();
 8001fc6:	2300      	movs	r3, #0
 8001fc8:	613b      	str	r3, [r7, #16]
 8001fca:	4b1b      	ldr	r3, [pc, #108]	@ (8002038 <HAL_TIM_Base_MspInit+0xac>)
 8001fcc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001fce:	4a1a      	ldr	r2, [pc, #104]	@ (8002038 <HAL_TIM_Base_MspInit+0xac>)
 8001fd0:	f043 0308 	orr.w	r3, r3, #8
 8001fd4:	6413      	str	r3, [r2, #64]	@ 0x40
 8001fd6:	4b18      	ldr	r3, [pc, #96]	@ (8002038 <HAL_TIM_Base_MspInit+0xac>)
 8001fd8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001fda:	f003 0308 	and.w	r3, r3, #8
 8001fde:	613b      	str	r3, [r7, #16]
 8001fe0:	693b      	ldr	r3, [r7, #16]
}
 8001fe2:	e022      	b.n	800202a <HAL_TIM_Base_MspInit+0x9e>
  else if(htim_base->Instance==TIM8)
 8001fe4:	687b      	ldr	r3, [r7, #4]
 8001fe6:	681b      	ldr	r3, [r3, #0]
 8001fe8:	4a15      	ldr	r2, [pc, #84]	@ (8002040 <HAL_TIM_Base_MspInit+0xb4>)
 8001fea:	4293      	cmp	r3, r2
 8001fec:	d11d      	bne.n	800202a <HAL_TIM_Base_MspInit+0x9e>
    __HAL_RCC_TIM8_CLK_ENABLE();
 8001fee:	2300      	movs	r3, #0
 8001ff0:	60fb      	str	r3, [r7, #12]
 8001ff2:	4b11      	ldr	r3, [pc, #68]	@ (8002038 <HAL_TIM_Base_MspInit+0xac>)
 8001ff4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001ff6:	4a10      	ldr	r2, [pc, #64]	@ (8002038 <HAL_TIM_Base_MspInit+0xac>)
 8001ff8:	f043 0302 	orr.w	r3, r3, #2
 8001ffc:	6453      	str	r3, [r2, #68]	@ 0x44
 8001ffe:	4b0e      	ldr	r3, [pc, #56]	@ (8002038 <HAL_TIM_Base_MspInit+0xac>)
 8002000:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002002:	f003 0302 	and.w	r3, r3, #2
 8002006:	60fb      	str	r3, [r7, #12]
 8002008:	68fb      	ldr	r3, [r7, #12]
    HAL_NVIC_SetPriority(TIM8_BRK_TIM12_IRQn, 0, 0);
 800200a:	2200      	movs	r2, #0
 800200c:	2100      	movs	r1, #0
 800200e:	202b      	movs	r0, #43	@ 0x2b
 8002010:	f001 fa35 	bl	800347e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM8_BRK_TIM12_IRQn);
 8002014:	202b      	movs	r0, #43	@ 0x2b
 8002016:	f001 fa4e 	bl	80034b6 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(TIM8_UP_TIM13_IRQn, 0, 0);
 800201a:	2200      	movs	r2, #0
 800201c:	2100      	movs	r1, #0
 800201e:	202c      	movs	r0, #44	@ 0x2c
 8002020:	f001 fa2d 	bl	800347e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 8002024:	202c      	movs	r0, #44	@ 0x2c
 8002026:	f001 fa46 	bl	80034b6 <HAL_NVIC_EnableIRQ>
}
 800202a:	bf00      	nop
 800202c:	3718      	adds	r7, #24
 800202e:	46bd      	mov	sp, r7
 8002030:	bd80      	pop	{r7, pc}
 8002032:	bf00      	nop
 8002034:	40010000 	.word	0x40010000
 8002038:	40023800 	.word	0x40023800
 800203c:	40000c00 	.word	0x40000c00
 8002040:	40010400 	.word	0x40010400

08002044 <HAL_TIM_Encoder_MspInit>:
  * This function configures the hardware resources used in this example
  * @param htim_encoder: TIM_Encoder handle pointer
  * @retval None
  */
void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* htim_encoder)
{
 8002044:	b580      	push	{r7, lr}
 8002046:	b08a      	sub	sp, #40	@ 0x28
 8002048:	af00      	add	r7, sp, #0
 800204a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800204c:	f107 0314 	add.w	r3, r7, #20
 8002050:	2200      	movs	r2, #0
 8002052:	601a      	str	r2, [r3, #0]
 8002054:	605a      	str	r2, [r3, #4]
 8002056:	609a      	str	r2, [r3, #8]
 8002058:	60da      	str	r2, [r3, #12]
 800205a:	611a      	str	r2, [r3, #16]
  if(htim_encoder->Instance==TIM2)
 800205c:	687b      	ldr	r3, [r7, #4]
 800205e:	681b      	ldr	r3, [r3, #0]
 8002060:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002064:	d12b      	bne.n	80020be <HAL_TIM_Encoder_MspInit+0x7a>
  {
    /* USER CODE BEGIN TIM2_MspInit 0 */

    /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002066:	2300      	movs	r3, #0
 8002068:	613b      	str	r3, [r7, #16]
 800206a:	4b17      	ldr	r3, [pc, #92]	@ (80020c8 <HAL_TIM_Encoder_MspInit+0x84>)
 800206c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800206e:	4a16      	ldr	r2, [pc, #88]	@ (80020c8 <HAL_TIM_Encoder_MspInit+0x84>)
 8002070:	f043 0301 	orr.w	r3, r3, #1
 8002074:	6413      	str	r3, [r2, #64]	@ 0x40
 8002076:	4b14      	ldr	r3, [pc, #80]	@ (80020c8 <HAL_TIM_Encoder_MspInit+0x84>)
 8002078:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800207a:	f003 0301 	and.w	r3, r3, #1
 800207e:	613b      	str	r3, [r7, #16]
 8002080:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002082:	2300      	movs	r3, #0
 8002084:	60fb      	str	r3, [r7, #12]
 8002086:	4b10      	ldr	r3, [pc, #64]	@ (80020c8 <HAL_TIM_Encoder_MspInit+0x84>)
 8002088:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800208a:	4a0f      	ldr	r2, [pc, #60]	@ (80020c8 <HAL_TIM_Encoder_MspInit+0x84>)
 800208c:	f043 0301 	orr.w	r3, r3, #1
 8002090:	6313      	str	r3, [r2, #48]	@ 0x30
 8002092:	4b0d      	ldr	r3, [pc, #52]	@ (80020c8 <HAL_TIM_Encoder_MspInit+0x84>)
 8002094:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002096:	f003 0301 	and.w	r3, r3, #1
 800209a:	60fb      	str	r3, [r7, #12]
 800209c:	68fb      	ldr	r3, [r7, #12]
    /**TIM2 GPIO Configuration
    PA0-WKUP     ------> TIM2_CH1
    PA1     ------> TIM2_CH2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800209e:	2303      	movs	r3, #3
 80020a0:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80020a2:	2302      	movs	r3, #2
 80020a4:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80020a6:	2300      	movs	r3, #0
 80020a8:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80020aa:	2300      	movs	r3, #0
 80020ac:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 80020ae:	2301      	movs	r3, #1
 80020b0:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80020b2:	f107 0314 	add.w	r3, r7, #20
 80020b6:	4619      	mov	r1, r3
 80020b8:	4804      	ldr	r0, [pc, #16]	@ (80020cc <HAL_TIM_Encoder_MspInit+0x88>)
 80020ba:	f001 fa17 	bl	80034ec <HAL_GPIO_Init>

    /* USER CODE END TIM2_MspInit 1 */

  }

}
 80020be:	bf00      	nop
 80020c0:	3728      	adds	r7, #40	@ 0x28
 80020c2:	46bd      	mov	sp, r7
 80020c4:	bd80      	pop	{r7, pc}
 80020c6:	bf00      	nop
 80020c8:	40023800 	.word	0x40023800
 80020cc:	40020000 	.word	0x40020000

080020d0 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 80020d0:	b580      	push	{r7, lr}
 80020d2:	b088      	sub	sp, #32
 80020d4:	af00      	add	r7, sp, #0
 80020d6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80020d8:	f107 030c 	add.w	r3, r7, #12
 80020dc:	2200      	movs	r2, #0
 80020de:	601a      	str	r2, [r3, #0]
 80020e0:	605a      	str	r2, [r3, #4]
 80020e2:	609a      	str	r2, [r3, #8]
 80020e4:	60da      	str	r2, [r3, #12]
 80020e6:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM8)
 80020e8:	687b      	ldr	r3, [r7, #4]
 80020ea:	681b      	ldr	r3, [r3, #0]
 80020ec:	4a12      	ldr	r2, [pc, #72]	@ (8002138 <HAL_TIM_MspPostInit+0x68>)
 80020ee:	4293      	cmp	r3, r2
 80020f0:	d11d      	bne.n	800212e <HAL_TIM_MspPostInit+0x5e>
  {
    /* USER CODE BEGIN TIM8_MspPostInit 0 */

    /* USER CODE END TIM8_MspPostInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80020f2:	2300      	movs	r3, #0
 80020f4:	60bb      	str	r3, [r7, #8]
 80020f6:	4b11      	ldr	r3, [pc, #68]	@ (800213c <HAL_TIM_MspPostInit+0x6c>)
 80020f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80020fa:	4a10      	ldr	r2, [pc, #64]	@ (800213c <HAL_TIM_MspPostInit+0x6c>)
 80020fc:	f043 0301 	orr.w	r3, r3, #1
 8002100:	6313      	str	r3, [r2, #48]	@ 0x30
 8002102:	4b0e      	ldr	r3, [pc, #56]	@ (800213c <HAL_TIM_MspPostInit+0x6c>)
 8002104:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002106:	f003 0301 	and.w	r3, r3, #1
 800210a:	60bb      	str	r3, [r7, #8]
 800210c:	68bb      	ldr	r3, [r7, #8]
    /**TIM8 GPIO Configuration
    PA5     ------> TIM8_CH1N
    */
    GPIO_InitStruct.Pin = PWM_Pin;
 800210e:	2320      	movs	r3, #32
 8002110:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002112:	2302      	movs	r3, #2
 8002114:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002116:	2300      	movs	r3, #0
 8002118:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800211a:	2300      	movs	r3, #0
 800211c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM8;
 800211e:	2303      	movs	r3, #3
 8002120:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(PWM_GPIO_Port, &GPIO_InitStruct);
 8002122:	f107 030c 	add.w	r3, r7, #12
 8002126:	4619      	mov	r1, r3
 8002128:	4805      	ldr	r0, [pc, #20]	@ (8002140 <HAL_TIM_MspPostInit+0x70>)
 800212a:	f001 f9df 	bl	80034ec <HAL_GPIO_Init>
    /* USER CODE BEGIN TIM8_MspPostInit 1 */

    /* USER CODE END TIM8_MspPostInit 1 */
  }

}
 800212e:	bf00      	nop
 8002130:	3720      	adds	r7, #32
 8002132:	46bd      	mov	sp, r7
 8002134:	bd80      	pop	{r7, pc}
 8002136:	bf00      	nop
 8002138:	40010400 	.word	0x40010400
 800213c:	40023800 	.word	0x40023800
 8002140:	40020000 	.word	0x40020000

08002144 <HAL_UART_MspInit>:
  * This function configures the hardware resources used in this example
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8002144:	b580      	push	{r7, lr}
 8002146:	b08a      	sub	sp, #40	@ 0x28
 8002148:	af00      	add	r7, sp, #0
 800214a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800214c:	f107 0314 	add.w	r3, r7, #20
 8002150:	2200      	movs	r2, #0
 8002152:	601a      	str	r2, [r3, #0]
 8002154:	605a      	str	r2, [r3, #4]
 8002156:	609a      	str	r2, [r3, #8]
 8002158:	60da      	str	r2, [r3, #12]
 800215a:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART2)
 800215c:	687b      	ldr	r3, [r7, #4]
 800215e:	681b      	ldr	r3, [r3, #0]
 8002160:	4a19      	ldr	r2, [pc, #100]	@ (80021c8 <HAL_UART_MspInit+0x84>)
 8002162:	4293      	cmp	r3, r2
 8002164:	d12b      	bne.n	80021be <HAL_UART_MspInit+0x7a>
  {
    /* USER CODE BEGIN USART2_MspInit 0 */

    /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8002166:	2300      	movs	r3, #0
 8002168:	613b      	str	r3, [r7, #16]
 800216a:	4b18      	ldr	r3, [pc, #96]	@ (80021cc <HAL_UART_MspInit+0x88>)
 800216c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800216e:	4a17      	ldr	r2, [pc, #92]	@ (80021cc <HAL_UART_MspInit+0x88>)
 8002170:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002174:	6413      	str	r3, [r2, #64]	@ 0x40
 8002176:	4b15      	ldr	r3, [pc, #84]	@ (80021cc <HAL_UART_MspInit+0x88>)
 8002178:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800217a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800217e:	613b      	str	r3, [r7, #16]
 8002180:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002182:	2300      	movs	r3, #0
 8002184:	60fb      	str	r3, [r7, #12]
 8002186:	4b11      	ldr	r3, [pc, #68]	@ (80021cc <HAL_UART_MspInit+0x88>)
 8002188:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800218a:	4a10      	ldr	r2, [pc, #64]	@ (80021cc <HAL_UART_MspInit+0x88>)
 800218c:	f043 0301 	orr.w	r3, r3, #1
 8002190:	6313      	str	r3, [r2, #48]	@ 0x30
 8002192:	4b0e      	ldr	r3, [pc, #56]	@ (80021cc <HAL_UART_MspInit+0x88>)
 8002194:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002196:	f003 0301 	and.w	r3, r3, #1
 800219a:	60fb      	str	r3, [r7, #12]
 800219c:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 800219e:	230c      	movs	r3, #12
 80021a0:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80021a2:	2302      	movs	r3, #2
 80021a4:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80021a6:	2300      	movs	r3, #0
 80021a8:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80021aa:	2303      	movs	r3, #3
 80021ac:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 80021ae:	2307      	movs	r3, #7
 80021b0:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80021b2:	f107 0314 	add.w	r3, r7, #20
 80021b6:	4619      	mov	r1, r3
 80021b8:	4805      	ldr	r0, [pc, #20]	@ (80021d0 <HAL_UART_MspInit+0x8c>)
 80021ba:	f001 f997 	bl	80034ec <HAL_GPIO_Init>

    /* USER CODE END USART2_MspInit 1 */

  }

}
 80021be:	bf00      	nop
 80021c0:	3728      	adds	r7, #40	@ 0x28
 80021c2:	46bd      	mov	sp, r7
 80021c4:	bd80      	pop	{r7, pc}
 80021c6:	bf00      	nop
 80021c8:	40004400 	.word	0x40004400
 80021cc:	40023800 	.word	0x40023800
 80021d0:	40020000 	.word	0x40020000

080021d4 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80021d4:	b480      	push	{r7}
 80021d6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80021d8:	bf00      	nop
 80021da:	e7fd      	b.n	80021d8 <NMI_Handler+0x4>

080021dc <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80021dc:	b480      	push	{r7}
 80021de:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80021e0:	bf00      	nop
 80021e2:	e7fd      	b.n	80021e0 <HardFault_Handler+0x4>

080021e4 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80021e4:	b480      	push	{r7}
 80021e6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80021e8:	bf00      	nop
 80021ea:	e7fd      	b.n	80021e8 <MemManage_Handler+0x4>

080021ec <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80021ec:	b480      	push	{r7}
 80021ee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80021f0:	bf00      	nop
 80021f2:	e7fd      	b.n	80021f0 <BusFault_Handler+0x4>

080021f4 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80021f4:	b480      	push	{r7}
 80021f6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80021f8:	bf00      	nop
 80021fa:	e7fd      	b.n	80021f8 <UsageFault_Handler+0x4>

080021fc <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80021fc:	b480      	push	{r7}
 80021fe:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002200:	bf00      	nop
 8002202:	46bd      	mov	sp, r7
 8002204:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002208:	4770      	bx	lr

0800220a <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800220a:	b480      	push	{r7}
 800220c:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800220e:	bf00      	nop
 8002210:	46bd      	mov	sp, r7
 8002212:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002216:	4770      	bx	lr

08002218 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002218:	b480      	push	{r7}
 800221a:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800221c:	bf00      	nop
 800221e:	46bd      	mov	sp, r7
 8002220:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002224:	4770      	bx	lr

08002226 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002226:	b580      	push	{r7, lr}
 8002228:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800222a:	f000 f99f 	bl	800256c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */
  SysTickFunction();
 800222e:	f000 f913 	bl	8002458 <SysTickFunction>
  /* USER CODE END SysTick_IRQn 1 */
}
 8002232:	bf00      	nop
 8002234:	bd80      	pop	{r7, pc}

08002236 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line 3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8002236:	b580      	push	{r7, lr}
 8002238:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(LIMIT_Pin);
 800223a:	2008      	movs	r0, #8
 800223c:	f001 fb1e 	bl	800387c <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 8002240:	bf00      	nop
 8002242:	bd80      	pop	{r7, pc}

08002244 <TIM8_BRK_TIM12_IRQHandler>:

/**
  * @brief This function handles TIM8 break interrupt and TIM12 global interrupt.
  */
void TIM8_BRK_TIM12_IRQHandler(void)
{
 8002244:	b580      	push	{r7, lr}
 8002246:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM8_BRK_TIM12_IRQn 0 */

  /* USER CODE END TIM8_BRK_TIM12_IRQn 0 */
  HAL_TIM_IRQHandler(&htim8);
 8002248:	4802      	ldr	r0, [pc, #8]	@ (8002254 <TIM8_BRK_TIM12_IRQHandler+0x10>)
 800224a:	f002 faf1 	bl	8004830 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM8_BRK_TIM12_IRQn 1 */

  /* USER CODE END TIM8_BRK_TIM12_IRQn 1 */
}
 800224e:	bf00      	nop
 8002250:	bd80      	pop	{r7, pc}
 8002252:	bf00      	nop
 8002254:	200002fc 	.word	0x200002fc

08002258 <TIM8_UP_TIM13_IRQHandler>:

/**
  * @brief This function handles TIM8 update interrupt and TIM13 global interrupt.
  */
void TIM8_UP_TIM13_IRQHandler(void)
{
 8002258:	b580      	push	{r7, lr}
 800225a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 0 */

  /* USER CODE END TIM8_UP_TIM13_IRQn 0 */
  HAL_TIM_IRQHandler(&htim8);
 800225c:	4802      	ldr	r0, [pc, #8]	@ (8002268 <TIM8_UP_TIM13_IRQHandler+0x10>)
 800225e:	f002 fae7 	bl	8004830 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 1 */

  /* USER CODE END TIM8_UP_TIM13_IRQn 1 */
}
 8002262:	bf00      	nop
 8002264:	bd80      	pop	{r7, pc}
 8002266:	bf00      	nop
 8002268:	200002fc 	.word	0x200002fc

0800226c <CAN2_TX_IRQHandler>:

/**
  * @brief This function handles CAN2 TX interrupt.
  */
void CAN2_TX_IRQHandler(void)
{
 800226c:	b580      	push	{r7, lr}
 800226e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN CAN2_TX_IRQn 0 */

  /* USER CODE END CAN2_TX_IRQn 0 */
  HAL_CAN_IRQHandler(&hcan2);
 8002270:	4802      	ldr	r0, [pc, #8]	@ (800227c <CAN2_TX_IRQHandler+0x10>)
 8002272:	f000 fdf9 	bl	8002e68 <HAL_CAN_IRQHandler>
  /* USER CODE BEGIN CAN2_TX_IRQn 1 */

  /* USER CODE END CAN2_TX_IRQn 1 */
}
 8002276:	bf00      	nop
 8002278:	bd80      	pop	{r7, pc}
 800227a:	bf00      	nop
 800227c:	200001fc 	.word	0x200001fc

08002280 <CAN2_RX0_IRQHandler>:

/**
  * @brief This function handles CAN2 RX0 interrupt.
  */
void CAN2_RX0_IRQHandler(void)
{
 8002280:	b580      	push	{r7, lr}
 8002282:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN CAN2_RX0_IRQn 0 */

  /* USER CODE END CAN2_RX0_IRQn 0 */
  HAL_CAN_IRQHandler(&hcan2);
 8002284:	4802      	ldr	r0, [pc, #8]	@ (8002290 <CAN2_RX0_IRQHandler+0x10>)
 8002286:	f000 fdef 	bl	8002e68 <HAL_CAN_IRQHandler>
  /* USER CODE BEGIN CAN2_RX0_IRQn 1 */

  /* USER CODE END CAN2_RX0_IRQn 1 */
}
 800228a:	bf00      	nop
 800228c:	bd80      	pop	{r7, pc}
 800228e:	bf00      	nop
 8002290:	200001fc 	.word	0x200001fc

08002294 <CAN2_RX1_IRQHandler>:

/**
  * @brief This function handles CAN2 RX1 interrupt.
  */
void CAN2_RX1_IRQHandler(void)
{
 8002294:	b580      	push	{r7, lr}
 8002296:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN CAN2_RX1_IRQn 0 */

  /* USER CODE END CAN2_RX1_IRQn 0 */
  HAL_CAN_IRQHandler(&hcan2);
 8002298:	4802      	ldr	r0, [pc, #8]	@ (80022a4 <CAN2_RX1_IRQHandler+0x10>)
 800229a:	f000 fde5 	bl	8002e68 <HAL_CAN_IRQHandler>
  /* USER CODE BEGIN CAN2_RX1_IRQn 1 */

  /* USER CODE END CAN2_RX1_IRQn 1 */
}
 800229e:	bf00      	nop
 80022a0:	bd80      	pop	{r7, pc}
 80022a2:	bf00      	nop
 80022a4:	200001fc 	.word	0x200001fc

080022a8 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80022a8:	b480      	push	{r7}
 80022aa:	af00      	add	r7, sp, #0
  return 1;
 80022ac:	2301      	movs	r3, #1
}
 80022ae:	4618      	mov	r0, r3
 80022b0:	46bd      	mov	sp, r7
 80022b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022b6:	4770      	bx	lr

080022b8 <_kill>:

int _kill(int pid, int sig)
{
 80022b8:	b580      	push	{r7, lr}
 80022ba:	b082      	sub	sp, #8
 80022bc:	af00      	add	r7, sp, #0
 80022be:	6078      	str	r0, [r7, #4]
 80022c0:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80022c2:	f004 fbf1 	bl	8006aa8 <__errno>
 80022c6:	4603      	mov	r3, r0
 80022c8:	2216      	movs	r2, #22
 80022ca:	601a      	str	r2, [r3, #0]
  return -1;
 80022cc:	f04f 33ff 	mov.w	r3, #4294967295
}
 80022d0:	4618      	mov	r0, r3
 80022d2:	3708      	adds	r7, #8
 80022d4:	46bd      	mov	sp, r7
 80022d6:	bd80      	pop	{r7, pc}

080022d8 <_exit>:

void _exit (int status)
{
 80022d8:	b580      	push	{r7, lr}
 80022da:	b082      	sub	sp, #8
 80022dc:	af00      	add	r7, sp, #0
 80022de:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80022e0:	f04f 31ff 	mov.w	r1, #4294967295
 80022e4:	6878      	ldr	r0, [r7, #4]
 80022e6:	f7ff ffe7 	bl	80022b8 <_kill>
  while (1) {}    /* Make sure we hang here */
 80022ea:	bf00      	nop
 80022ec:	e7fd      	b.n	80022ea <_exit+0x12>

080022ee <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80022ee:	b580      	push	{r7, lr}
 80022f0:	b086      	sub	sp, #24
 80022f2:	af00      	add	r7, sp, #0
 80022f4:	60f8      	str	r0, [r7, #12]
 80022f6:	60b9      	str	r1, [r7, #8]
 80022f8:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80022fa:	2300      	movs	r3, #0
 80022fc:	617b      	str	r3, [r7, #20]
 80022fe:	e00a      	b.n	8002316 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8002300:	f3af 8000 	nop.w
 8002304:	4601      	mov	r1, r0
 8002306:	68bb      	ldr	r3, [r7, #8]
 8002308:	1c5a      	adds	r2, r3, #1
 800230a:	60ba      	str	r2, [r7, #8]
 800230c:	b2ca      	uxtb	r2, r1
 800230e:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002310:	697b      	ldr	r3, [r7, #20]
 8002312:	3301      	adds	r3, #1
 8002314:	617b      	str	r3, [r7, #20]
 8002316:	697a      	ldr	r2, [r7, #20]
 8002318:	687b      	ldr	r3, [r7, #4]
 800231a:	429a      	cmp	r2, r3
 800231c:	dbf0      	blt.n	8002300 <_read+0x12>
  }

  return len;
 800231e:	687b      	ldr	r3, [r7, #4]
}
 8002320:	4618      	mov	r0, r3
 8002322:	3718      	adds	r7, #24
 8002324:	46bd      	mov	sp, r7
 8002326:	bd80      	pop	{r7, pc}

08002328 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002328:	b580      	push	{r7, lr}
 800232a:	b086      	sub	sp, #24
 800232c:	af00      	add	r7, sp, #0
 800232e:	60f8      	str	r0, [r7, #12]
 8002330:	60b9      	str	r1, [r7, #8]
 8002332:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002334:	2300      	movs	r3, #0
 8002336:	617b      	str	r3, [r7, #20]
 8002338:	e009      	b.n	800234e <_write+0x26>
  {
    __io_putchar(*ptr++);
 800233a:	68bb      	ldr	r3, [r7, #8]
 800233c:	1c5a      	adds	r2, r3, #1
 800233e:	60ba      	str	r2, [r7, #8]
 8002340:	781b      	ldrb	r3, [r3, #0]
 8002342:	4618      	mov	r0, r3
 8002344:	f7ff fc78 	bl	8001c38 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002348:	697b      	ldr	r3, [r7, #20]
 800234a:	3301      	adds	r3, #1
 800234c:	617b      	str	r3, [r7, #20]
 800234e:	697a      	ldr	r2, [r7, #20]
 8002350:	687b      	ldr	r3, [r7, #4]
 8002352:	429a      	cmp	r2, r3
 8002354:	dbf1      	blt.n	800233a <_write+0x12>
  }
  return len;
 8002356:	687b      	ldr	r3, [r7, #4]
}
 8002358:	4618      	mov	r0, r3
 800235a:	3718      	adds	r7, #24
 800235c:	46bd      	mov	sp, r7
 800235e:	bd80      	pop	{r7, pc}

08002360 <_close>:

int _close(int file)
{
 8002360:	b480      	push	{r7}
 8002362:	b083      	sub	sp, #12
 8002364:	af00      	add	r7, sp, #0
 8002366:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8002368:	f04f 33ff 	mov.w	r3, #4294967295
}
 800236c:	4618      	mov	r0, r3
 800236e:	370c      	adds	r7, #12
 8002370:	46bd      	mov	sp, r7
 8002372:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002376:	4770      	bx	lr

08002378 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002378:	b480      	push	{r7}
 800237a:	b083      	sub	sp, #12
 800237c:	af00      	add	r7, sp, #0
 800237e:	6078      	str	r0, [r7, #4]
 8002380:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8002382:	683b      	ldr	r3, [r7, #0]
 8002384:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8002388:	605a      	str	r2, [r3, #4]
  return 0;
 800238a:	2300      	movs	r3, #0
}
 800238c:	4618      	mov	r0, r3
 800238e:	370c      	adds	r7, #12
 8002390:	46bd      	mov	sp, r7
 8002392:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002396:	4770      	bx	lr

08002398 <_isatty>:

int _isatty(int file)
{
 8002398:	b480      	push	{r7}
 800239a:	b083      	sub	sp, #12
 800239c:	af00      	add	r7, sp, #0
 800239e:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80023a0:	2301      	movs	r3, #1
}
 80023a2:	4618      	mov	r0, r3
 80023a4:	370c      	adds	r7, #12
 80023a6:	46bd      	mov	sp, r7
 80023a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023ac:	4770      	bx	lr

080023ae <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80023ae:	b480      	push	{r7}
 80023b0:	b085      	sub	sp, #20
 80023b2:	af00      	add	r7, sp, #0
 80023b4:	60f8      	str	r0, [r7, #12]
 80023b6:	60b9      	str	r1, [r7, #8]
 80023b8:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80023ba:	2300      	movs	r3, #0
}
 80023bc:	4618      	mov	r0, r3
 80023be:	3714      	adds	r7, #20
 80023c0:	46bd      	mov	sp, r7
 80023c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023c6:	4770      	bx	lr

080023c8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80023c8:	b580      	push	{r7, lr}
 80023ca:	b086      	sub	sp, #24
 80023cc:	af00      	add	r7, sp, #0
 80023ce:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80023d0:	4a14      	ldr	r2, [pc, #80]	@ (8002424 <_sbrk+0x5c>)
 80023d2:	4b15      	ldr	r3, [pc, #84]	@ (8002428 <_sbrk+0x60>)
 80023d4:	1ad3      	subs	r3, r2, r3
 80023d6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80023d8:	697b      	ldr	r3, [r7, #20]
 80023da:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80023dc:	4b13      	ldr	r3, [pc, #76]	@ (800242c <_sbrk+0x64>)
 80023de:	681b      	ldr	r3, [r3, #0]
 80023e0:	2b00      	cmp	r3, #0
 80023e2:	d102      	bne.n	80023ea <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80023e4:	4b11      	ldr	r3, [pc, #68]	@ (800242c <_sbrk+0x64>)
 80023e6:	4a12      	ldr	r2, [pc, #72]	@ (8002430 <_sbrk+0x68>)
 80023e8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80023ea:	4b10      	ldr	r3, [pc, #64]	@ (800242c <_sbrk+0x64>)
 80023ec:	681a      	ldr	r2, [r3, #0]
 80023ee:	687b      	ldr	r3, [r7, #4]
 80023f0:	4413      	add	r3, r2
 80023f2:	693a      	ldr	r2, [r7, #16]
 80023f4:	429a      	cmp	r2, r3
 80023f6:	d207      	bcs.n	8002408 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80023f8:	f004 fb56 	bl	8006aa8 <__errno>
 80023fc:	4603      	mov	r3, r0
 80023fe:	220c      	movs	r2, #12
 8002400:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8002402:	f04f 33ff 	mov.w	r3, #4294967295
 8002406:	e009      	b.n	800241c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002408:	4b08      	ldr	r3, [pc, #32]	@ (800242c <_sbrk+0x64>)
 800240a:	681b      	ldr	r3, [r3, #0]
 800240c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800240e:	4b07      	ldr	r3, [pc, #28]	@ (800242c <_sbrk+0x64>)
 8002410:	681a      	ldr	r2, [r3, #0]
 8002412:	687b      	ldr	r3, [r7, #4]
 8002414:	4413      	add	r3, r2
 8002416:	4a05      	ldr	r2, [pc, #20]	@ (800242c <_sbrk+0x64>)
 8002418:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800241a:	68fb      	ldr	r3, [r7, #12]
}
 800241c:	4618      	mov	r0, r3
 800241e:	3718      	adds	r7, #24
 8002420:	46bd      	mov	sp, r7
 8002422:	bd80      	pop	{r7, pc}
 8002424:	20020000 	.word	0x20020000
 8002428:	00000400 	.word	0x00000400
 800242c:	200003c4 	.word	0x200003c4
 8002430:	20000518 	.word	0x20000518

08002434 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8002434:	b480      	push	{r7}
 8002436:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8002438:	4b06      	ldr	r3, [pc, #24]	@ (8002454 <SystemInit+0x20>)
 800243a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800243e:	4a05      	ldr	r2, [pc, #20]	@ (8002454 <SystemInit+0x20>)
 8002440:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8002444:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002448:	bf00      	nop
 800244a:	46bd      	mov	sp, r7
 800244c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002450:	4770      	bx	lr
 8002452:	bf00      	nop
 8002454:	e000ed00 	.word	0xe000ed00

08002458 <SysTickFunction>:
#include "pid.h"
#include "encoder.h"
#include "stdio.h"
#include "motor.h"

void SysTickFunction(void) {
 8002458:	b580      	push	{r7, lr}
 800245a:	af00      	add	r7, sp, #0
	/*
	 * PID LOOP: THIS IS CALLED EVERY 1ms
	 */
	updatePID();
 800245c:	f7ff fc5e 	bl	8001d1c <updatePID>
	set_counts((int16_t) TIM2->CNT);
 8002460:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8002464:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002466:	b21b      	sxth	r3, r3
 8002468:	4618      	mov	r0, r3
 800246a:	f7fe ffc1 	bl	80013f0 <set_counts>
}
 800246e:	bf00      	nop
 8002470:	bd80      	pop	{r7, pc}
	...

08002474 <Reset_Handler>:
 8002474:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80024ac <LoopFillZerobss+0xe>
 8002478:	f7ff ffdc 	bl	8002434 <SystemInit>
 800247c:	480c      	ldr	r0, [pc, #48]	@ (80024b0 <LoopFillZerobss+0x12>)
 800247e:	490d      	ldr	r1, [pc, #52]	@ (80024b4 <LoopFillZerobss+0x16>)
 8002480:	4a0d      	ldr	r2, [pc, #52]	@ (80024b8 <LoopFillZerobss+0x1a>)
 8002482:	2300      	movs	r3, #0
 8002484:	e002      	b.n	800248c <LoopCopyDataInit>

08002486 <CopyDataInit>:
 8002486:	58d4      	ldr	r4, [r2, r3]
 8002488:	50c4      	str	r4, [r0, r3]
 800248a:	3304      	adds	r3, #4

0800248c <LoopCopyDataInit>:
 800248c:	18c4      	adds	r4, r0, r3
 800248e:	428c      	cmp	r4, r1
 8002490:	d3f9      	bcc.n	8002486 <CopyDataInit>
 8002492:	4a0a      	ldr	r2, [pc, #40]	@ (80024bc <LoopFillZerobss+0x1e>)
 8002494:	4c0a      	ldr	r4, [pc, #40]	@ (80024c0 <LoopFillZerobss+0x22>)
 8002496:	2300      	movs	r3, #0
 8002498:	e001      	b.n	800249e <LoopFillZerobss>

0800249a <FillZerobss>:
 800249a:	6013      	str	r3, [r2, #0]
 800249c:	3204      	adds	r2, #4

0800249e <LoopFillZerobss>:
 800249e:	42a2      	cmp	r2, r4
 80024a0:	d3fb      	bcc.n	800249a <FillZerobss>
 80024a2:	f004 fb07 	bl	8006ab4 <__libc_init_array>
 80024a6:	f7ff f85f 	bl	8001568 <main>
 80024aa:	4770      	bx	lr
 80024ac:	20020000 	.word	0x20020000
 80024b0:	20000000 	.word	0x20000000
 80024b4:	200001dc 	.word	0x200001dc
 80024b8:	08008e88 	.word	0x08008e88
 80024bc:	200001dc 	.word	0x200001dc
 80024c0:	20000518 	.word	0x20000518

080024c4 <ADC_IRQHandler>:
 80024c4:	e7fe      	b.n	80024c4 <ADC_IRQHandler>
	...

080024c8 <HAL_Init>:
 80024c8:	b580      	push	{r7, lr}
 80024ca:	af00      	add	r7, sp, #0
 80024cc:	4b0e      	ldr	r3, [pc, #56]	@ (8002508 <HAL_Init+0x40>)
 80024ce:	681b      	ldr	r3, [r3, #0]
 80024d0:	4a0d      	ldr	r2, [pc, #52]	@ (8002508 <HAL_Init+0x40>)
 80024d2:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80024d6:	6013      	str	r3, [r2, #0]
 80024d8:	4b0b      	ldr	r3, [pc, #44]	@ (8002508 <HAL_Init+0x40>)
 80024da:	681b      	ldr	r3, [r3, #0]
 80024dc:	4a0a      	ldr	r2, [pc, #40]	@ (8002508 <HAL_Init+0x40>)
 80024de:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80024e2:	6013      	str	r3, [r2, #0]
 80024e4:	4b08      	ldr	r3, [pc, #32]	@ (8002508 <HAL_Init+0x40>)
 80024e6:	681b      	ldr	r3, [r3, #0]
 80024e8:	4a07      	ldr	r2, [pc, #28]	@ (8002508 <HAL_Init+0x40>)
 80024ea:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80024ee:	6013      	str	r3, [r2, #0]
 80024f0:	2003      	movs	r0, #3
 80024f2:	f000 ffb9 	bl	8003468 <HAL_NVIC_SetPriorityGrouping>
 80024f6:	200f      	movs	r0, #15
 80024f8:	f000 f808 	bl	800250c <HAL_InitTick>
 80024fc:	f7ff fcb0 	bl	8001e60 <HAL_MspInit>
 8002500:	2300      	movs	r3, #0
 8002502:	4618      	mov	r0, r3
 8002504:	bd80      	pop	{r7, pc}
 8002506:	bf00      	nop
 8002508:	40023c00 	.word	0x40023c00

0800250c <HAL_InitTick>:
 800250c:	b580      	push	{r7, lr}
 800250e:	b082      	sub	sp, #8
 8002510:	af00      	add	r7, sp, #0
 8002512:	6078      	str	r0, [r7, #4]
 8002514:	4b12      	ldr	r3, [pc, #72]	@ (8002560 <HAL_InitTick+0x54>)
 8002516:	681a      	ldr	r2, [r3, #0]
 8002518:	4b12      	ldr	r3, [pc, #72]	@ (8002564 <HAL_InitTick+0x58>)
 800251a:	781b      	ldrb	r3, [r3, #0]
 800251c:	4619      	mov	r1, r3
 800251e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8002522:	fbb3 f3f1 	udiv	r3, r3, r1
 8002526:	fbb2 f3f3 	udiv	r3, r2, r3
 800252a:	4618      	mov	r0, r3
 800252c:	f000 ffd1 	bl	80034d2 <HAL_SYSTICK_Config>
 8002530:	4603      	mov	r3, r0
 8002532:	2b00      	cmp	r3, #0
 8002534:	d001      	beq.n	800253a <HAL_InitTick+0x2e>
 8002536:	2301      	movs	r3, #1
 8002538:	e00e      	b.n	8002558 <HAL_InitTick+0x4c>
 800253a:	687b      	ldr	r3, [r7, #4]
 800253c:	2b0f      	cmp	r3, #15
 800253e:	d80a      	bhi.n	8002556 <HAL_InitTick+0x4a>
 8002540:	2200      	movs	r2, #0
 8002542:	6879      	ldr	r1, [r7, #4]
 8002544:	f04f 30ff 	mov.w	r0, #4294967295
 8002548:	f000 ff99 	bl	800347e <HAL_NVIC_SetPriority>
 800254c:	4a06      	ldr	r2, [pc, #24]	@ (8002568 <HAL_InitTick+0x5c>)
 800254e:	687b      	ldr	r3, [r7, #4]
 8002550:	6013      	str	r3, [r2, #0]
 8002552:	2300      	movs	r3, #0
 8002554:	e000      	b.n	8002558 <HAL_InitTick+0x4c>
 8002556:	2301      	movs	r3, #1
 8002558:	4618      	mov	r0, r3
 800255a:	3708      	adds	r7, #8
 800255c:	46bd      	mov	sp, r7
 800255e:	bd80      	pop	{r7, pc}
 8002560:	20000008 	.word	0x20000008
 8002564:	20000010 	.word	0x20000010
 8002568:	2000000c 	.word	0x2000000c

0800256c <HAL_IncTick>:
 800256c:	b480      	push	{r7}
 800256e:	af00      	add	r7, sp, #0
 8002570:	4b06      	ldr	r3, [pc, #24]	@ (800258c <HAL_IncTick+0x20>)
 8002572:	781b      	ldrb	r3, [r3, #0]
 8002574:	461a      	mov	r2, r3
 8002576:	4b06      	ldr	r3, [pc, #24]	@ (8002590 <HAL_IncTick+0x24>)
 8002578:	681b      	ldr	r3, [r3, #0]
 800257a:	4413      	add	r3, r2
 800257c:	4a04      	ldr	r2, [pc, #16]	@ (8002590 <HAL_IncTick+0x24>)
 800257e:	6013      	str	r3, [r2, #0]
 8002580:	bf00      	nop
 8002582:	46bd      	mov	sp, r7
 8002584:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002588:	4770      	bx	lr
 800258a:	bf00      	nop
 800258c:	20000010 	.word	0x20000010
 8002590:	200003c8 	.word	0x200003c8

08002594 <HAL_GetTick>:
 8002594:	b480      	push	{r7}
 8002596:	af00      	add	r7, sp, #0
 8002598:	4b03      	ldr	r3, [pc, #12]	@ (80025a8 <HAL_GetTick+0x14>)
 800259a:	681b      	ldr	r3, [r3, #0]
 800259c:	4618      	mov	r0, r3
 800259e:	46bd      	mov	sp, r7
 80025a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025a4:	4770      	bx	lr
 80025a6:	bf00      	nop
 80025a8:	200003c8 	.word	0x200003c8

080025ac <HAL_CAN_Init>:
 80025ac:	b580      	push	{r7, lr}
 80025ae:	b084      	sub	sp, #16
 80025b0:	af00      	add	r7, sp, #0
 80025b2:	6078      	str	r0, [r7, #4]
 80025b4:	687b      	ldr	r3, [r7, #4]
 80025b6:	2b00      	cmp	r3, #0
 80025b8:	d101      	bne.n	80025be <HAL_CAN_Init+0x12>
 80025ba:	2301      	movs	r3, #1
 80025bc:	e0ed      	b.n	800279a <HAL_CAN_Init+0x1ee>
 80025be:	687b      	ldr	r3, [r7, #4]
 80025c0:	f893 3020 	ldrb.w	r3, [r3, #32]
 80025c4:	b2db      	uxtb	r3, r3
 80025c6:	2b00      	cmp	r3, #0
 80025c8:	d102      	bne.n	80025d0 <HAL_CAN_Init+0x24>
 80025ca:	6878      	ldr	r0, [r7, #4]
 80025cc:	f7ff fc70 	bl	8001eb0 <HAL_CAN_MspInit>
 80025d0:	687b      	ldr	r3, [r7, #4]
 80025d2:	681b      	ldr	r3, [r3, #0]
 80025d4:	681a      	ldr	r2, [r3, #0]
 80025d6:	687b      	ldr	r3, [r7, #4]
 80025d8:	681b      	ldr	r3, [r3, #0]
 80025da:	f042 0201 	orr.w	r2, r2, #1
 80025de:	601a      	str	r2, [r3, #0]
 80025e0:	f7ff ffd8 	bl	8002594 <HAL_GetTick>
 80025e4:	60f8      	str	r0, [r7, #12]
 80025e6:	e012      	b.n	800260e <HAL_CAN_Init+0x62>
 80025e8:	f7ff ffd4 	bl	8002594 <HAL_GetTick>
 80025ec:	4602      	mov	r2, r0
 80025ee:	68fb      	ldr	r3, [r7, #12]
 80025f0:	1ad3      	subs	r3, r2, r3
 80025f2:	2b0a      	cmp	r3, #10
 80025f4:	d90b      	bls.n	800260e <HAL_CAN_Init+0x62>
 80025f6:	687b      	ldr	r3, [r7, #4]
 80025f8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80025fa:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 80025fe:	687b      	ldr	r3, [r7, #4]
 8002600:	625a      	str	r2, [r3, #36]	@ 0x24
 8002602:	687b      	ldr	r3, [r7, #4]
 8002604:	2205      	movs	r2, #5
 8002606:	f883 2020 	strb.w	r2, [r3, #32]
 800260a:	2301      	movs	r3, #1
 800260c:	e0c5      	b.n	800279a <HAL_CAN_Init+0x1ee>
 800260e:	687b      	ldr	r3, [r7, #4]
 8002610:	681b      	ldr	r3, [r3, #0]
 8002612:	685b      	ldr	r3, [r3, #4]
 8002614:	f003 0301 	and.w	r3, r3, #1
 8002618:	2b00      	cmp	r3, #0
 800261a:	d0e5      	beq.n	80025e8 <HAL_CAN_Init+0x3c>
 800261c:	687b      	ldr	r3, [r7, #4]
 800261e:	681b      	ldr	r3, [r3, #0]
 8002620:	681a      	ldr	r2, [r3, #0]
 8002622:	687b      	ldr	r3, [r7, #4]
 8002624:	681b      	ldr	r3, [r3, #0]
 8002626:	f022 0202 	bic.w	r2, r2, #2
 800262a:	601a      	str	r2, [r3, #0]
 800262c:	f7ff ffb2 	bl	8002594 <HAL_GetTick>
 8002630:	60f8      	str	r0, [r7, #12]
 8002632:	e012      	b.n	800265a <HAL_CAN_Init+0xae>
 8002634:	f7ff ffae 	bl	8002594 <HAL_GetTick>
 8002638:	4602      	mov	r2, r0
 800263a:	68fb      	ldr	r3, [r7, #12]
 800263c:	1ad3      	subs	r3, r2, r3
 800263e:	2b0a      	cmp	r3, #10
 8002640:	d90b      	bls.n	800265a <HAL_CAN_Init+0xae>
 8002642:	687b      	ldr	r3, [r7, #4]
 8002644:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002646:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 800264a:	687b      	ldr	r3, [r7, #4]
 800264c:	625a      	str	r2, [r3, #36]	@ 0x24
 800264e:	687b      	ldr	r3, [r7, #4]
 8002650:	2205      	movs	r2, #5
 8002652:	f883 2020 	strb.w	r2, [r3, #32]
 8002656:	2301      	movs	r3, #1
 8002658:	e09f      	b.n	800279a <HAL_CAN_Init+0x1ee>
 800265a:	687b      	ldr	r3, [r7, #4]
 800265c:	681b      	ldr	r3, [r3, #0]
 800265e:	685b      	ldr	r3, [r3, #4]
 8002660:	f003 0302 	and.w	r3, r3, #2
 8002664:	2b00      	cmp	r3, #0
 8002666:	d1e5      	bne.n	8002634 <HAL_CAN_Init+0x88>
 8002668:	687b      	ldr	r3, [r7, #4]
 800266a:	7e1b      	ldrb	r3, [r3, #24]
 800266c:	2b01      	cmp	r3, #1
 800266e:	d108      	bne.n	8002682 <HAL_CAN_Init+0xd6>
 8002670:	687b      	ldr	r3, [r7, #4]
 8002672:	681b      	ldr	r3, [r3, #0]
 8002674:	681a      	ldr	r2, [r3, #0]
 8002676:	687b      	ldr	r3, [r7, #4]
 8002678:	681b      	ldr	r3, [r3, #0]
 800267a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800267e:	601a      	str	r2, [r3, #0]
 8002680:	e007      	b.n	8002692 <HAL_CAN_Init+0xe6>
 8002682:	687b      	ldr	r3, [r7, #4]
 8002684:	681b      	ldr	r3, [r3, #0]
 8002686:	681a      	ldr	r2, [r3, #0]
 8002688:	687b      	ldr	r3, [r7, #4]
 800268a:	681b      	ldr	r3, [r3, #0]
 800268c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002690:	601a      	str	r2, [r3, #0]
 8002692:	687b      	ldr	r3, [r7, #4]
 8002694:	7e5b      	ldrb	r3, [r3, #25]
 8002696:	2b01      	cmp	r3, #1
 8002698:	d108      	bne.n	80026ac <HAL_CAN_Init+0x100>
 800269a:	687b      	ldr	r3, [r7, #4]
 800269c:	681b      	ldr	r3, [r3, #0]
 800269e:	681a      	ldr	r2, [r3, #0]
 80026a0:	687b      	ldr	r3, [r7, #4]
 80026a2:	681b      	ldr	r3, [r3, #0]
 80026a4:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80026a8:	601a      	str	r2, [r3, #0]
 80026aa:	e007      	b.n	80026bc <HAL_CAN_Init+0x110>
 80026ac:	687b      	ldr	r3, [r7, #4]
 80026ae:	681b      	ldr	r3, [r3, #0]
 80026b0:	681a      	ldr	r2, [r3, #0]
 80026b2:	687b      	ldr	r3, [r7, #4]
 80026b4:	681b      	ldr	r3, [r3, #0]
 80026b6:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80026ba:	601a      	str	r2, [r3, #0]
 80026bc:	687b      	ldr	r3, [r7, #4]
 80026be:	7e9b      	ldrb	r3, [r3, #26]
 80026c0:	2b01      	cmp	r3, #1
 80026c2:	d108      	bne.n	80026d6 <HAL_CAN_Init+0x12a>
 80026c4:	687b      	ldr	r3, [r7, #4]
 80026c6:	681b      	ldr	r3, [r3, #0]
 80026c8:	681a      	ldr	r2, [r3, #0]
 80026ca:	687b      	ldr	r3, [r7, #4]
 80026cc:	681b      	ldr	r3, [r3, #0]
 80026ce:	f042 0220 	orr.w	r2, r2, #32
 80026d2:	601a      	str	r2, [r3, #0]
 80026d4:	e007      	b.n	80026e6 <HAL_CAN_Init+0x13a>
 80026d6:	687b      	ldr	r3, [r7, #4]
 80026d8:	681b      	ldr	r3, [r3, #0]
 80026da:	681a      	ldr	r2, [r3, #0]
 80026dc:	687b      	ldr	r3, [r7, #4]
 80026de:	681b      	ldr	r3, [r3, #0]
 80026e0:	f022 0220 	bic.w	r2, r2, #32
 80026e4:	601a      	str	r2, [r3, #0]
 80026e6:	687b      	ldr	r3, [r7, #4]
 80026e8:	7edb      	ldrb	r3, [r3, #27]
 80026ea:	2b01      	cmp	r3, #1
 80026ec:	d108      	bne.n	8002700 <HAL_CAN_Init+0x154>
 80026ee:	687b      	ldr	r3, [r7, #4]
 80026f0:	681b      	ldr	r3, [r3, #0]
 80026f2:	681a      	ldr	r2, [r3, #0]
 80026f4:	687b      	ldr	r3, [r7, #4]
 80026f6:	681b      	ldr	r3, [r3, #0]
 80026f8:	f022 0210 	bic.w	r2, r2, #16
 80026fc:	601a      	str	r2, [r3, #0]
 80026fe:	e007      	b.n	8002710 <HAL_CAN_Init+0x164>
 8002700:	687b      	ldr	r3, [r7, #4]
 8002702:	681b      	ldr	r3, [r3, #0]
 8002704:	681a      	ldr	r2, [r3, #0]
 8002706:	687b      	ldr	r3, [r7, #4]
 8002708:	681b      	ldr	r3, [r3, #0]
 800270a:	f042 0210 	orr.w	r2, r2, #16
 800270e:	601a      	str	r2, [r3, #0]
 8002710:	687b      	ldr	r3, [r7, #4]
 8002712:	7f1b      	ldrb	r3, [r3, #28]
 8002714:	2b01      	cmp	r3, #1
 8002716:	d108      	bne.n	800272a <HAL_CAN_Init+0x17e>
 8002718:	687b      	ldr	r3, [r7, #4]
 800271a:	681b      	ldr	r3, [r3, #0]
 800271c:	681a      	ldr	r2, [r3, #0]
 800271e:	687b      	ldr	r3, [r7, #4]
 8002720:	681b      	ldr	r3, [r3, #0]
 8002722:	f042 0208 	orr.w	r2, r2, #8
 8002726:	601a      	str	r2, [r3, #0]
 8002728:	e007      	b.n	800273a <HAL_CAN_Init+0x18e>
 800272a:	687b      	ldr	r3, [r7, #4]
 800272c:	681b      	ldr	r3, [r3, #0]
 800272e:	681a      	ldr	r2, [r3, #0]
 8002730:	687b      	ldr	r3, [r7, #4]
 8002732:	681b      	ldr	r3, [r3, #0]
 8002734:	f022 0208 	bic.w	r2, r2, #8
 8002738:	601a      	str	r2, [r3, #0]
 800273a:	687b      	ldr	r3, [r7, #4]
 800273c:	7f5b      	ldrb	r3, [r3, #29]
 800273e:	2b01      	cmp	r3, #1
 8002740:	d108      	bne.n	8002754 <HAL_CAN_Init+0x1a8>
 8002742:	687b      	ldr	r3, [r7, #4]
 8002744:	681b      	ldr	r3, [r3, #0]
 8002746:	681a      	ldr	r2, [r3, #0]
 8002748:	687b      	ldr	r3, [r7, #4]
 800274a:	681b      	ldr	r3, [r3, #0]
 800274c:	f042 0204 	orr.w	r2, r2, #4
 8002750:	601a      	str	r2, [r3, #0]
 8002752:	e007      	b.n	8002764 <HAL_CAN_Init+0x1b8>
 8002754:	687b      	ldr	r3, [r7, #4]
 8002756:	681b      	ldr	r3, [r3, #0]
 8002758:	681a      	ldr	r2, [r3, #0]
 800275a:	687b      	ldr	r3, [r7, #4]
 800275c:	681b      	ldr	r3, [r3, #0]
 800275e:	f022 0204 	bic.w	r2, r2, #4
 8002762:	601a      	str	r2, [r3, #0]
 8002764:	687b      	ldr	r3, [r7, #4]
 8002766:	689a      	ldr	r2, [r3, #8]
 8002768:	687b      	ldr	r3, [r7, #4]
 800276a:	68db      	ldr	r3, [r3, #12]
 800276c:	431a      	orrs	r2, r3
 800276e:	687b      	ldr	r3, [r7, #4]
 8002770:	691b      	ldr	r3, [r3, #16]
 8002772:	431a      	orrs	r2, r3
 8002774:	687b      	ldr	r3, [r7, #4]
 8002776:	695b      	ldr	r3, [r3, #20]
 8002778:	ea42 0103 	orr.w	r1, r2, r3
 800277c:	687b      	ldr	r3, [r7, #4]
 800277e:	685b      	ldr	r3, [r3, #4]
 8002780:	1e5a      	subs	r2, r3, #1
 8002782:	687b      	ldr	r3, [r7, #4]
 8002784:	681b      	ldr	r3, [r3, #0]
 8002786:	430a      	orrs	r2, r1
 8002788:	61da      	str	r2, [r3, #28]
 800278a:	687b      	ldr	r3, [r7, #4]
 800278c:	2200      	movs	r2, #0
 800278e:	625a      	str	r2, [r3, #36]	@ 0x24
 8002790:	687b      	ldr	r3, [r7, #4]
 8002792:	2201      	movs	r2, #1
 8002794:	f883 2020 	strb.w	r2, [r3, #32]
 8002798:	2300      	movs	r3, #0
 800279a:	4618      	mov	r0, r3
 800279c:	3710      	adds	r7, #16
 800279e:	46bd      	mov	sp, r7
 80027a0:	bd80      	pop	{r7, pc}
	...

080027a4 <HAL_CAN_ConfigFilter>:
 80027a4:	b480      	push	{r7}
 80027a6:	b087      	sub	sp, #28
 80027a8:	af00      	add	r7, sp, #0
 80027aa:	6078      	str	r0, [r7, #4]
 80027ac:	6039      	str	r1, [r7, #0]
 80027ae:	687b      	ldr	r3, [r7, #4]
 80027b0:	f893 3020 	ldrb.w	r3, [r3, #32]
 80027b4:	75fb      	strb	r3, [r7, #23]
 80027b6:	7dfb      	ldrb	r3, [r7, #23]
 80027b8:	2b01      	cmp	r3, #1
 80027ba:	d003      	beq.n	80027c4 <HAL_CAN_ConfigFilter+0x20>
 80027bc:	7dfb      	ldrb	r3, [r7, #23]
 80027be:	2b02      	cmp	r3, #2
 80027c0:	f040 80be 	bne.w	8002940 <HAL_CAN_ConfigFilter+0x19c>
 80027c4:	4b65      	ldr	r3, [pc, #404]	@ (800295c <HAL_CAN_ConfigFilter+0x1b8>)
 80027c6:	613b      	str	r3, [r7, #16]
 80027c8:	693b      	ldr	r3, [r7, #16]
 80027ca:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 80027ce:	f043 0201 	orr.w	r2, r3, #1
 80027d2:	693b      	ldr	r3, [r7, #16]
 80027d4:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 80027d8:	693b      	ldr	r3, [r7, #16]
 80027da:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 80027de:	f423 527c 	bic.w	r2, r3, #16128	@ 0x3f00
 80027e2:	693b      	ldr	r3, [r7, #16]
 80027e4:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 80027e8:	693b      	ldr	r3, [r7, #16]
 80027ea:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 80027ee:	683b      	ldr	r3, [r7, #0]
 80027f0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80027f2:	021b      	lsls	r3, r3, #8
 80027f4:	431a      	orrs	r2, r3
 80027f6:	693b      	ldr	r3, [r7, #16]
 80027f8:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 80027fc:	683b      	ldr	r3, [r7, #0]
 80027fe:	695b      	ldr	r3, [r3, #20]
 8002800:	f003 031f 	and.w	r3, r3, #31
 8002804:	2201      	movs	r2, #1
 8002806:	fa02 f303 	lsl.w	r3, r2, r3
 800280a:	60fb      	str	r3, [r7, #12]
 800280c:	693b      	ldr	r3, [r7, #16]
 800280e:	f8d3 221c 	ldr.w	r2, [r3, #540]	@ 0x21c
 8002812:	68fb      	ldr	r3, [r7, #12]
 8002814:	43db      	mvns	r3, r3
 8002816:	401a      	ands	r2, r3
 8002818:	693b      	ldr	r3, [r7, #16]
 800281a:	f8c3 221c 	str.w	r2, [r3, #540]	@ 0x21c
 800281e:	683b      	ldr	r3, [r7, #0]
 8002820:	69db      	ldr	r3, [r3, #28]
 8002822:	2b00      	cmp	r3, #0
 8002824:	d123      	bne.n	800286e <HAL_CAN_ConfigFilter+0xca>
 8002826:	693b      	ldr	r3, [r7, #16]
 8002828:	f8d3 220c 	ldr.w	r2, [r3, #524]	@ 0x20c
 800282c:	68fb      	ldr	r3, [r7, #12]
 800282e:	43db      	mvns	r3, r3
 8002830:	401a      	ands	r2, r3
 8002832:	693b      	ldr	r3, [r7, #16]
 8002834:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 8002838:	683b      	ldr	r3, [r7, #0]
 800283a:	68db      	ldr	r3, [r3, #12]
 800283c:	0419      	lsls	r1, r3, #16
 800283e:	683b      	ldr	r3, [r7, #0]
 8002840:	685b      	ldr	r3, [r3, #4]
 8002842:	b29b      	uxth	r3, r3
 8002844:	683a      	ldr	r2, [r7, #0]
 8002846:	6952      	ldr	r2, [r2, #20]
 8002848:	4319      	orrs	r1, r3
 800284a:	693b      	ldr	r3, [r7, #16]
 800284c:	3248      	adds	r2, #72	@ 0x48
 800284e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 8002852:	683b      	ldr	r3, [r7, #0]
 8002854:	689b      	ldr	r3, [r3, #8]
 8002856:	0419      	lsls	r1, r3, #16
 8002858:	683b      	ldr	r3, [r7, #0]
 800285a:	681b      	ldr	r3, [r3, #0]
 800285c:	b29a      	uxth	r2, r3
 800285e:	683b      	ldr	r3, [r7, #0]
 8002860:	695b      	ldr	r3, [r3, #20]
 8002862:	430a      	orrs	r2, r1
 8002864:	6939      	ldr	r1, [r7, #16]
 8002866:	3348      	adds	r3, #72	@ 0x48
 8002868:	00db      	lsls	r3, r3, #3
 800286a:	440b      	add	r3, r1
 800286c:	605a      	str	r2, [r3, #4]
 800286e:	683b      	ldr	r3, [r7, #0]
 8002870:	69db      	ldr	r3, [r3, #28]
 8002872:	2b01      	cmp	r3, #1
 8002874:	d122      	bne.n	80028bc <HAL_CAN_ConfigFilter+0x118>
 8002876:	693b      	ldr	r3, [r7, #16]
 8002878:	f8d3 220c 	ldr.w	r2, [r3, #524]	@ 0x20c
 800287c:	68fb      	ldr	r3, [r7, #12]
 800287e:	431a      	orrs	r2, r3
 8002880:	693b      	ldr	r3, [r7, #16]
 8002882:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 8002886:	683b      	ldr	r3, [r7, #0]
 8002888:	681b      	ldr	r3, [r3, #0]
 800288a:	0419      	lsls	r1, r3, #16
 800288c:	683b      	ldr	r3, [r7, #0]
 800288e:	685b      	ldr	r3, [r3, #4]
 8002890:	b29b      	uxth	r3, r3
 8002892:	683a      	ldr	r2, [r7, #0]
 8002894:	6952      	ldr	r2, [r2, #20]
 8002896:	4319      	orrs	r1, r3
 8002898:	693b      	ldr	r3, [r7, #16]
 800289a:	3248      	adds	r2, #72	@ 0x48
 800289c:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 80028a0:	683b      	ldr	r3, [r7, #0]
 80028a2:	689b      	ldr	r3, [r3, #8]
 80028a4:	0419      	lsls	r1, r3, #16
 80028a6:	683b      	ldr	r3, [r7, #0]
 80028a8:	68db      	ldr	r3, [r3, #12]
 80028aa:	b29a      	uxth	r2, r3
 80028ac:	683b      	ldr	r3, [r7, #0]
 80028ae:	695b      	ldr	r3, [r3, #20]
 80028b0:	430a      	orrs	r2, r1
 80028b2:	6939      	ldr	r1, [r7, #16]
 80028b4:	3348      	adds	r3, #72	@ 0x48
 80028b6:	00db      	lsls	r3, r3, #3
 80028b8:	440b      	add	r3, r1
 80028ba:	605a      	str	r2, [r3, #4]
 80028bc:	683b      	ldr	r3, [r7, #0]
 80028be:	699b      	ldr	r3, [r3, #24]
 80028c0:	2b00      	cmp	r3, #0
 80028c2:	d109      	bne.n	80028d8 <HAL_CAN_ConfigFilter+0x134>
 80028c4:	693b      	ldr	r3, [r7, #16]
 80028c6:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 80028ca:	68fb      	ldr	r3, [r7, #12]
 80028cc:	43db      	mvns	r3, r3
 80028ce:	401a      	ands	r2, r3
 80028d0:	693b      	ldr	r3, [r7, #16]
 80028d2:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 80028d6:	e007      	b.n	80028e8 <HAL_CAN_ConfigFilter+0x144>
 80028d8:	693b      	ldr	r3, [r7, #16]
 80028da:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 80028de:	68fb      	ldr	r3, [r7, #12]
 80028e0:	431a      	orrs	r2, r3
 80028e2:	693b      	ldr	r3, [r7, #16]
 80028e4:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 80028e8:	683b      	ldr	r3, [r7, #0]
 80028ea:	691b      	ldr	r3, [r3, #16]
 80028ec:	2b00      	cmp	r3, #0
 80028ee:	d109      	bne.n	8002904 <HAL_CAN_ConfigFilter+0x160>
 80028f0:	693b      	ldr	r3, [r7, #16]
 80028f2:	f8d3 2214 	ldr.w	r2, [r3, #532]	@ 0x214
 80028f6:	68fb      	ldr	r3, [r7, #12]
 80028f8:	43db      	mvns	r3, r3
 80028fa:	401a      	ands	r2, r3
 80028fc:	693b      	ldr	r3, [r7, #16]
 80028fe:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 8002902:	e007      	b.n	8002914 <HAL_CAN_ConfigFilter+0x170>
 8002904:	693b      	ldr	r3, [r7, #16]
 8002906:	f8d3 2214 	ldr.w	r2, [r3, #532]	@ 0x214
 800290a:	68fb      	ldr	r3, [r7, #12]
 800290c:	431a      	orrs	r2, r3
 800290e:	693b      	ldr	r3, [r7, #16]
 8002910:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 8002914:	683b      	ldr	r3, [r7, #0]
 8002916:	6a1b      	ldr	r3, [r3, #32]
 8002918:	2b01      	cmp	r3, #1
 800291a:	d107      	bne.n	800292c <HAL_CAN_ConfigFilter+0x188>
 800291c:	693b      	ldr	r3, [r7, #16]
 800291e:	f8d3 221c 	ldr.w	r2, [r3, #540]	@ 0x21c
 8002922:	68fb      	ldr	r3, [r7, #12]
 8002924:	431a      	orrs	r2, r3
 8002926:	693b      	ldr	r3, [r7, #16]
 8002928:	f8c3 221c 	str.w	r2, [r3, #540]	@ 0x21c
 800292c:	693b      	ldr	r3, [r7, #16]
 800292e:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 8002932:	f023 0201 	bic.w	r2, r3, #1
 8002936:	693b      	ldr	r3, [r7, #16]
 8002938:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 800293c:	2300      	movs	r3, #0
 800293e:	e006      	b.n	800294e <HAL_CAN_ConfigFilter+0x1aa>
 8002940:	687b      	ldr	r3, [r7, #4]
 8002942:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002944:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 8002948:	687b      	ldr	r3, [r7, #4]
 800294a:	625a      	str	r2, [r3, #36]	@ 0x24
 800294c:	2301      	movs	r3, #1
 800294e:	4618      	mov	r0, r3
 8002950:	371c      	adds	r7, #28
 8002952:	46bd      	mov	sp, r7
 8002954:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002958:	4770      	bx	lr
 800295a:	bf00      	nop
 800295c:	40006400 	.word	0x40006400

08002960 <HAL_CAN_Start>:
 8002960:	b580      	push	{r7, lr}
 8002962:	b084      	sub	sp, #16
 8002964:	af00      	add	r7, sp, #0
 8002966:	6078      	str	r0, [r7, #4]
 8002968:	687b      	ldr	r3, [r7, #4]
 800296a:	f893 3020 	ldrb.w	r3, [r3, #32]
 800296e:	b2db      	uxtb	r3, r3
 8002970:	2b01      	cmp	r3, #1
 8002972:	d12e      	bne.n	80029d2 <HAL_CAN_Start+0x72>
 8002974:	687b      	ldr	r3, [r7, #4]
 8002976:	2202      	movs	r2, #2
 8002978:	f883 2020 	strb.w	r2, [r3, #32]
 800297c:	687b      	ldr	r3, [r7, #4]
 800297e:	681b      	ldr	r3, [r3, #0]
 8002980:	681a      	ldr	r2, [r3, #0]
 8002982:	687b      	ldr	r3, [r7, #4]
 8002984:	681b      	ldr	r3, [r3, #0]
 8002986:	f022 0201 	bic.w	r2, r2, #1
 800298a:	601a      	str	r2, [r3, #0]
 800298c:	f7ff fe02 	bl	8002594 <HAL_GetTick>
 8002990:	60f8      	str	r0, [r7, #12]
 8002992:	e012      	b.n	80029ba <HAL_CAN_Start+0x5a>
 8002994:	f7ff fdfe 	bl	8002594 <HAL_GetTick>
 8002998:	4602      	mov	r2, r0
 800299a:	68fb      	ldr	r3, [r7, #12]
 800299c:	1ad3      	subs	r3, r2, r3
 800299e:	2b0a      	cmp	r3, #10
 80029a0:	d90b      	bls.n	80029ba <HAL_CAN_Start+0x5a>
 80029a2:	687b      	ldr	r3, [r7, #4]
 80029a4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80029a6:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 80029aa:	687b      	ldr	r3, [r7, #4]
 80029ac:	625a      	str	r2, [r3, #36]	@ 0x24
 80029ae:	687b      	ldr	r3, [r7, #4]
 80029b0:	2205      	movs	r2, #5
 80029b2:	f883 2020 	strb.w	r2, [r3, #32]
 80029b6:	2301      	movs	r3, #1
 80029b8:	e012      	b.n	80029e0 <HAL_CAN_Start+0x80>
 80029ba:	687b      	ldr	r3, [r7, #4]
 80029bc:	681b      	ldr	r3, [r3, #0]
 80029be:	685b      	ldr	r3, [r3, #4]
 80029c0:	f003 0301 	and.w	r3, r3, #1
 80029c4:	2b00      	cmp	r3, #0
 80029c6:	d1e5      	bne.n	8002994 <HAL_CAN_Start+0x34>
 80029c8:	687b      	ldr	r3, [r7, #4]
 80029ca:	2200      	movs	r2, #0
 80029cc:	625a      	str	r2, [r3, #36]	@ 0x24
 80029ce:	2300      	movs	r3, #0
 80029d0:	e006      	b.n	80029e0 <HAL_CAN_Start+0x80>
 80029d2:	687b      	ldr	r3, [r7, #4]
 80029d4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80029d6:	f443 2200 	orr.w	r2, r3, #524288	@ 0x80000
 80029da:	687b      	ldr	r3, [r7, #4]
 80029dc:	625a      	str	r2, [r3, #36]	@ 0x24
 80029de:	2301      	movs	r3, #1
 80029e0:	4618      	mov	r0, r3
 80029e2:	3710      	adds	r7, #16
 80029e4:	46bd      	mov	sp, r7
 80029e6:	bd80      	pop	{r7, pc}

080029e8 <HAL_CAN_AddTxMessage>:
 80029e8:	b480      	push	{r7}
 80029ea:	b089      	sub	sp, #36	@ 0x24
 80029ec:	af00      	add	r7, sp, #0
 80029ee:	60f8      	str	r0, [r7, #12]
 80029f0:	60b9      	str	r1, [r7, #8]
 80029f2:	607a      	str	r2, [r7, #4]
 80029f4:	603b      	str	r3, [r7, #0]
 80029f6:	68fb      	ldr	r3, [r7, #12]
 80029f8:	f893 3020 	ldrb.w	r3, [r3, #32]
 80029fc:	77fb      	strb	r3, [r7, #31]
 80029fe:	68fb      	ldr	r3, [r7, #12]
 8002a00:	681b      	ldr	r3, [r3, #0]
 8002a02:	689b      	ldr	r3, [r3, #8]
 8002a04:	61bb      	str	r3, [r7, #24]
 8002a06:	7ffb      	ldrb	r3, [r7, #31]
 8002a08:	2b01      	cmp	r3, #1
 8002a0a:	d003      	beq.n	8002a14 <HAL_CAN_AddTxMessage+0x2c>
 8002a0c:	7ffb      	ldrb	r3, [r7, #31]
 8002a0e:	2b02      	cmp	r3, #2
 8002a10:	f040 80ad 	bne.w	8002b6e <HAL_CAN_AddTxMessage+0x186>
 8002a14:	69bb      	ldr	r3, [r7, #24]
 8002a16:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8002a1a:	2b00      	cmp	r3, #0
 8002a1c:	d10a      	bne.n	8002a34 <HAL_CAN_AddTxMessage+0x4c>
 8002a1e:	69bb      	ldr	r3, [r7, #24]
 8002a20:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8002a24:	2b00      	cmp	r3, #0
 8002a26:	d105      	bne.n	8002a34 <HAL_CAN_AddTxMessage+0x4c>
 8002a28:	69bb      	ldr	r3, [r7, #24]
 8002a2a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002a2e:	2b00      	cmp	r3, #0
 8002a30:	f000 8095 	beq.w	8002b5e <HAL_CAN_AddTxMessage+0x176>
 8002a34:	69bb      	ldr	r3, [r7, #24]
 8002a36:	0e1b      	lsrs	r3, r3, #24
 8002a38:	f003 0303 	and.w	r3, r3, #3
 8002a3c:	617b      	str	r3, [r7, #20]
 8002a3e:	2201      	movs	r2, #1
 8002a40:	697b      	ldr	r3, [r7, #20]
 8002a42:	409a      	lsls	r2, r3
 8002a44:	683b      	ldr	r3, [r7, #0]
 8002a46:	601a      	str	r2, [r3, #0]
 8002a48:	68bb      	ldr	r3, [r7, #8]
 8002a4a:	689b      	ldr	r3, [r3, #8]
 8002a4c:	2b00      	cmp	r3, #0
 8002a4e:	d10d      	bne.n	8002a6c <HAL_CAN_AddTxMessage+0x84>
 8002a50:	68bb      	ldr	r3, [r7, #8]
 8002a52:	681b      	ldr	r3, [r3, #0]
 8002a54:	055a      	lsls	r2, r3, #21
 8002a56:	68bb      	ldr	r3, [r7, #8]
 8002a58:	68db      	ldr	r3, [r3, #12]
 8002a5a:	68f9      	ldr	r1, [r7, #12]
 8002a5c:	6809      	ldr	r1, [r1, #0]
 8002a5e:	431a      	orrs	r2, r3
 8002a60:	697b      	ldr	r3, [r7, #20]
 8002a62:	3318      	adds	r3, #24
 8002a64:	011b      	lsls	r3, r3, #4
 8002a66:	440b      	add	r3, r1
 8002a68:	601a      	str	r2, [r3, #0]
 8002a6a:	e00f      	b.n	8002a8c <HAL_CAN_AddTxMessage+0xa4>
 8002a6c:	68bb      	ldr	r3, [r7, #8]
 8002a6e:	685b      	ldr	r3, [r3, #4]
 8002a70:	00da      	lsls	r2, r3, #3
 8002a72:	68bb      	ldr	r3, [r7, #8]
 8002a74:	689b      	ldr	r3, [r3, #8]
 8002a76:	431a      	orrs	r2, r3
 8002a78:	68bb      	ldr	r3, [r7, #8]
 8002a7a:	68db      	ldr	r3, [r3, #12]
 8002a7c:	68f9      	ldr	r1, [r7, #12]
 8002a7e:	6809      	ldr	r1, [r1, #0]
 8002a80:	431a      	orrs	r2, r3
 8002a82:	697b      	ldr	r3, [r7, #20]
 8002a84:	3318      	adds	r3, #24
 8002a86:	011b      	lsls	r3, r3, #4
 8002a88:	440b      	add	r3, r1
 8002a8a:	601a      	str	r2, [r3, #0]
 8002a8c:	68fb      	ldr	r3, [r7, #12]
 8002a8e:	6819      	ldr	r1, [r3, #0]
 8002a90:	68bb      	ldr	r3, [r7, #8]
 8002a92:	691a      	ldr	r2, [r3, #16]
 8002a94:	697b      	ldr	r3, [r7, #20]
 8002a96:	3318      	adds	r3, #24
 8002a98:	011b      	lsls	r3, r3, #4
 8002a9a:	440b      	add	r3, r1
 8002a9c:	3304      	adds	r3, #4
 8002a9e:	601a      	str	r2, [r3, #0]
 8002aa0:	68bb      	ldr	r3, [r7, #8]
 8002aa2:	7d1b      	ldrb	r3, [r3, #20]
 8002aa4:	2b01      	cmp	r3, #1
 8002aa6:	d111      	bne.n	8002acc <HAL_CAN_AddTxMessage+0xe4>
 8002aa8:	68fb      	ldr	r3, [r7, #12]
 8002aaa:	681a      	ldr	r2, [r3, #0]
 8002aac:	697b      	ldr	r3, [r7, #20]
 8002aae:	3318      	adds	r3, #24
 8002ab0:	011b      	lsls	r3, r3, #4
 8002ab2:	4413      	add	r3, r2
 8002ab4:	3304      	adds	r3, #4
 8002ab6:	681b      	ldr	r3, [r3, #0]
 8002ab8:	68fa      	ldr	r2, [r7, #12]
 8002aba:	6811      	ldr	r1, [r2, #0]
 8002abc:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8002ac0:	697b      	ldr	r3, [r7, #20]
 8002ac2:	3318      	adds	r3, #24
 8002ac4:	011b      	lsls	r3, r3, #4
 8002ac6:	440b      	add	r3, r1
 8002ac8:	3304      	adds	r3, #4
 8002aca:	601a      	str	r2, [r3, #0]
 8002acc:	687b      	ldr	r3, [r7, #4]
 8002ace:	3307      	adds	r3, #7
 8002ad0:	781b      	ldrb	r3, [r3, #0]
 8002ad2:	061a      	lsls	r2, r3, #24
 8002ad4:	687b      	ldr	r3, [r7, #4]
 8002ad6:	3306      	adds	r3, #6
 8002ad8:	781b      	ldrb	r3, [r3, #0]
 8002ada:	041b      	lsls	r3, r3, #16
 8002adc:	431a      	orrs	r2, r3
 8002ade:	687b      	ldr	r3, [r7, #4]
 8002ae0:	3305      	adds	r3, #5
 8002ae2:	781b      	ldrb	r3, [r3, #0]
 8002ae4:	021b      	lsls	r3, r3, #8
 8002ae6:	4313      	orrs	r3, r2
 8002ae8:	687a      	ldr	r2, [r7, #4]
 8002aea:	3204      	adds	r2, #4
 8002aec:	7812      	ldrb	r2, [r2, #0]
 8002aee:	4610      	mov	r0, r2
 8002af0:	68fa      	ldr	r2, [r7, #12]
 8002af2:	6811      	ldr	r1, [r2, #0]
 8002af4:	ea43 0200 	orr.w	r2, r3, r0
 8002af8:	697b      	ldr	r3, [r7, #20]
 8002afa:	011b      	lsls	r3, r3, #4
 8002afc:	440b      	add	r3, r1
 8002afe:	f503 73c6 	add.w	r3, r3, #396	@ 0x18c
 8002b02:	601a      	str	r2, [r3, #0]
 8002b04:	687b      	ldr	r3, [r7, #4]
 8002b06:	3303      	adds	r3, #3
 8002b08:	781b      	ldrb	r3, [r3, #0]
 8002b0a:	061a      	lsls	r2, r3, #24
 8002b0c:	687b      	ldr	r3, [r7, #4]
 8002b0e:	3302      	adds	r3, #2
 8002b10:	781b      	ldrb	r3, [r3, #0]
 8002b12:	041b      	lsls	r3, r3, #16
 8002b14:	431a      	orrs	r2, r3
 8002b16:	687b      	ldr	r3, [r7, #4]
 8002b18:	3301      	adds	r3, #1
 8002b1a:	781b      	ldrb	r3, [r3, #0]
 8002b1c:	021b      	lsls	r3, r3, #8
 8002b1e:	4313      	orrs	r3, r2
 8002b20:	687a      	ldr	r2, [r7, #4]
 8002b22:	7812      	ldrb	r2, [r2, #0]
 8002b24:	4610      	mov	r0, r2
 8002b26:	68fa      	ldr	r2, [r7, #12]
 8002b28:	6811      	ldr	r1, [r2, #0]
 8002b2a:	ea43 0200 	orr.w	r2, r3, r0
 8002b2e:	697b      	ldr	r3, [r7, #20]
 8002b30:	011b      	lsls	r3, r3, #4
 8002b32:	440b      	add	r3, r1
 8002b34:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 8002b38:	601a      	str	r2, [r3, #0]
 8002b3a:	68fb      	ldr	r3, [r7, #12]
 8002b3c:	681a      	ldr	r2, [r3, #0]
 8002b3e:	697b      	ldr	r3, [r7, #20]
 8002b40:	3318      	adds	r3, #24
 8002b42:	011b      	lsls	r3, r3, #4
 8002b44:	4413      	add	r3, r2
 8002b46:	681b      	ldr	r3, [r3, #0]
 8002b48:	68fa      	ldr	r2, [r7, #12]
 8002b4a:	6811      	ldr	r1, [r2, #0]
 8002b4c:	f043 0201 	orr.w	r2, r3, #1
 8002b50:	697b      	ldr	r3, [r7, #20]
 8002b52:	3318      	adds	r3, #24
 8002b54:	011b      	lsls	r3, r3, #4
 8002b56:	440b      	add	r3, r1
 8002b58:	601a      	str	r2, [r3, #0]
 8002b5a:	2300      	movs	r3, #0
 8002b5c:	e00e      	b.n	8002b7c <HAL_CAN_AddTxMessage+0x194>
 8002b5e:	68fb      	ldr	r3, [r7, #12]
 8002b60:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002b62:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 8002b66:	68fb      	ldr	r3, [r7, #12]
 8002b68:	625a      	str	r2, [r3, #36]	@ 0x24
 8002b6a:	2301      	movs	r3, #1
 8002b6c:	e006      	b.n	8002b7c <HAL_CAN_AddTxMessage+0x194>
 8002b6e:	68fb      	ldr	r3, [r7, #12]
 8002b70:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002b72:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 8002b76:	68fb      	ldr	r3, [r7, #12]
 8002b78:	625a      	str	r2, [r3, #36]	@ 0x24
 8002b7a:	2301      	movs	r3, #1
 8002b7c:	4618      	mov	r0, r3
 8002b7e:	3724      	adds	r7, #36	@ 0x24
 8002b80:	46bd      	mov	sp, r7
 8002b82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b86:	4770      	bx	lr

08002b88 <HAL_CAN_GetRxMessage>:
 8002b88:	b480      	push	{r7}
 8002b8a:	b087      	sub	sp, #28
 8002b8c:	af00      	add	r7, sp, #0
 8002b8e:	60f8      	str	r0, [r7, #12]
 8002b90:	60b9      	str	r1, [r7, #8]
 8002b92:	607a      	str	r2, [r7, #4]
 8002b94:	603b      	str	r3, [r7, #0]
 8002b96:	68fb      	ldr	r3, [r7, #12]
 8002b98:	f893 3020 	ldrb.w	r3, [r3, #32]
 8002b9c:	75fb      	strb	r3, [r7, #23]
 8002b9e:	7dfb      	ldrb	r3, [r7, #23]
 8002ba0:	2b01      	cmp	r3, #1
 8002ba2:	d003      	beq.n	8002bac <HAL_CAN_GetRxMessage+0x24>
 8002ba4:	7dfb      	ldrb	r3, [r7, #23]
 8002ba6:	2b02      	cmp	r3, #2
 8002ba8:	f040 8103 	bne.w	8002db2 <HAL_CAN_GetRxMessage+0x22a>
 8002bac:	68bb      	ldr	r3, [r7, #8]
 8002bae:	2b00      	cmp	r3, #0
 8002bb0:	d10e      	bne.n	8002bd0 <HAL_CAN_GetRxMessage+0x48>
 8002bb2:	68fb      	ldr	r3, [r7, #12]
 8002bb4:	681b      	ldr	r3, [r3, #0]
 8002bb6:	68db      	ldr	r3, [r3, #12]
 8002bb8:	f003 0303 	and.w	r3, r3, #3
 8002bbc:	2b00      	cmp	r3, #0
 8002bbe:	d116      	bne.n	8002bee <HAL_CAN_GetRxMessage+0x66>
 8002bc0:	68fb      	ldr	r3, [r7, #12]
 8002bc2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002bc4:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 8002bc8:	68fb      	ldr	r3, [r7, #12]
 8002bca:	625a      	str	r2, [r3, #36]	@ 0x24
 8002bcc:	2301      	movs	r3, #1
 8002bce:	e0f7      	b.n	8002dc0 <HAL_CAN_GetRxMessage+0x238>
 8002bd0:	68fb      	ldr	r3, [r7, #12]
 8002bd2:	681b      	ldr	r3, [r3, #0]
 8002bd4:	691b      	ldr	r3, [r3, #16]
 8002bd6:	f003 0303 	and.w	r3, r3, #3
 8002bda:	2b00      	cmp	r3, #0
 8002bdc:	d107      	bne.n	8002bee <HAL_CAN_GetRxMessage+0x66>
 8002bde:	68fb      	ldr	r3, [r7, #12]
 8002be0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002be2:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 8002be6:	68fb      	ldr	r3, [r7, #12]
 8002be8:	625a      	str	r2, [r3, #36]	@ 0x24
 8002bea:	2301      	movs	r3, #1
 8002bec:	e0e8      	b.n	8002dc0 <HAL_CAN_GetRxMessage+0x238>
 8002bee:	68fb      	ldr	r3, [r7, #12]
 8002bf0:	681a      	ldr	r2, [r3, #0]
 8002bf2:	68bb      	ldr	r3, [r7, #8]
 8002bf4:	331b      	adds	r3, #27
 8002bf6:	011b      	lsls	r3, r3, #4
 8002bf8:	4413      	add	r3, r2
 8002bfa:	681b      	ldr	r3, [r3, #0]
 8002bfc:	f003 0204 	and.w	r2, r3, #4
 8002c00:	687b      	ldr	r3, [r7, #4]
 8002c02:	609a      	str	r2, [r3, #8]
 8002c04:	687b      	ldr	r3, [r7, #4]
 8002c06:	689b      	ldr	r3, [r3, #8]
 8002c08:	2b00      	cmp	r3, #0
 8002c0a:	d10c      	bne.n	8002c26 <HAL_CAN_GetRxMessage+0x9e>
 8002c0c:	68fb      	ldr	r3, [r7, #12]
 8002c0e:	681a      	ldr	r2, [r3, #0]
 8002c10:	68bb      	ldr	r3, [r7, #8]
 8002c12:	331b      	adds	r3, #27
 8002c14:	011b      	lsls	r3, r3, #4
 8002c16:	4413      	add	r3, r2
 8002c18:	681b      	ldr	r3, [r3, #0]
 8002c1a:	0d5b      	lsrs	r3, r3, #21
 8002c1c:	f3c3 020a 	ubfx	r2, r3, #0, #11
 8002c20:	687b      	ldr	r3, [r7, #4]
 8002c22:	601a      	str	r2, [r3, #0]
 8002c24:	e00b      	b.n	8002c3e <HAL_CAN_GetRxMessage+0xb6>
 8002c26:	68fb      	ldr	r3, [r7, #12]
 8002c28:	681a      	ldr	r2, [r3, #0]
 8002c2a:	68bb      	ldr	r3, [r7, #8]
 8002c2c:	331b      	adds	r3, #27
 8002c2e:	011b      	lsls	r3, r3, #4
 8002c30:	4413      	add	r3, r2
 8002c32:	681b      	ldr	r3, [r3, #0]
 8002c34:	08db      	lsrs	r3, r3, #3
 8002c36:	f023 4260 	bic.w	r2, r3, #3758096384	@ 0xe0000000
 8002c3a:	687b      	ldr	r3, [r7, #4]
 8002c3c:	605a      	str	r2, [r3, #4]
 8002c3e:	68fb      	ldr	r3, [r7, #12]
 8002c40:	681a      	ldr	r2, [r3, #0]
 8002c42:	68bb      	ldr	r3, [r7, #8]
 8002c44:	331b      	adds	r3, #27
 8002c46:	011b      	lsls	r3, r3, #4
 8002c48:	4413      	add	r3, r2
 8002c4a:	681b      	ldr	r3, [r3, #0]
 8002c4c:	f003 0202 	and.w	r2, r3, #2
 8002c50:	687b      	ldr	r3, [r7, #4]
 8002c52:	60da      	str	r2, [r3, #12]
 8002c54:	68fb      	ldr	r3, [r7, #12]
 8002c56:	681a      	ldr	r2, [r3, #0]
 8002c58:	68bb      	ldr	r3, [r7, #8]
 8002c5a:	331b      	adds	r3, #27
 8002c5c:	011b      	lsls	r3, r3, #4
 8002c5e:	4413      	add	r3, r2
 8002c60:	3304      	adds	r3, #4
 8002c62:	681b      	ldr	r3, [r3, #0]
 8002c64:	f003 0308 	and.w	r3, r3, #8
 8002c68:	2b00      	cmp	r3, #0
 8002c6a:	d003      	beq.n	8002c74 <HAL_CAN_GetRxMessage+0xec>
 8002c6c:	687b      	ldr	r3, [r7, #4]
 8002c6e:	2208      	movs	r2, #8
 8002c70:	611a      	str	r2, [r3, #16]
 8002c72:	e00b      	b.n	8002c8c <HAL_CAN_GetRxMessage+0x104>
 8002c74:	68fb      	ldr	r3, [r7, #12]
 8002c76:	681a      	ldr	r2, [r3, #0]
 8002c78:	68bb      	ldr	r3, [r7, #8]
 8002c7a:	331b      	adds	r3, #27
 8002c7c:	011b      	lsls	r3, r3, #4
 8002c7e:	4413      	add	r3, r2
 8002c80:	3304      	adds	r3, #4
 8002c82:	681b      	ldr	r3, [r3, #0]
 8002c84:	f003 020f 	and.w	r2, r3, #15
 8002c88:	687b      	ldr	r3, [r7, #4]
 8002c8a:	611a      	str	r2, [r3, #16]
 8002c8c:	68fb      	ldr	r3, [r7, #12]
 8002c8e:	681a      	ldr	r2, [r3, #0]
 8002c90:	68bb      	ldr	r3, [r7, #8]
 8002c92:	331b      	adds	r3, #27
 8002c94:	011b      	lsls	r3, r3, #4
 8002c96:	4413      	add	r3, r2
 8002c98:	3304      	adds	r3, #4
 8002c9a:	681b      	ldr	r3, [r3, #0]
 8002c9c:	0a1b      	lsrs	r3, r3, #8
 8002c9e:	b2da      	uxtb	r2, r3
 8002ca0:	687b      	ldr	r3, [r7, #4]
 8002ca2:	619a      	str	r2, [r3, #24]
 8002ca4:	68fb      	ldr	r3, [r7, #12]
 8002ca6:	681a      	ldr	r2, [r3, #0]
 8002ca8:	68bb      	ldr	r3, [r7, #8]
 8002caa:	331b      	adds	r3, #27
 8002cac:	011b      	lsls	r3, r3, #4
 8002cae:	4413      	add	r3, r2
 8002cb0:	3304      	adds	r3, #4
 8002cb2:	681b      	ldr	r3, [r3, #0]
 8002cb4:	0c1b      	lsrs	r3, r3, #16
 8002cb6:	b29a      	uxth	r2, r3
 8002cb8:	687b      	ldr	r3, [r7, #4]
 8002cba:	615a      	str	r2, [r3, #20]
 8002cbc:	68fb      	ldr	r3, [r7, #12]
 8002cbe:	681a      	ldr	r2, [r3, #0]
 8002cc0:	68bb      	ldr	r3, [r7, #8]
 8002cc2:	011b      	lsls	r3, r3, #4
 8002cc4:	4413      	add	r3, r2
 8002cc6:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 8002cca:	681b      	ldr	r3, [r3, #0]
 8002ccc:	b2da      	uxtb	r2, r3
 8002cce:	683b      	ldr	r3, [r7, #0]
 8002cd0:	701a      	strb	r2, [r3, #0]
 8002cd2:	68fb      	ldr	r3, [r7, #12]
 8002cd4:	681a      	ldr	r2, [r3, #0]
 8002cd6:	68bb      	ldr	r3, [r7, #8]
 8002cd8:	011b      	lsls	r3, r3, #4
 8002cda:	4413      	add	r3, r2
 8002cdc:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 8002ce0:	681b      	ldr	r3, [r3, #0]
 8002ce2:	0a1a      	lsrs	r2, r3, #8
 8002ce4:	683b      	ldr	r3, [r7, #0]
 8002ce6:	3301      	adds	r3, #1
 8002ce8:	b2d2      	uxtb	r2, r2
 8002cea:	701a      	strb	r2, [r3, #0]
 8002cec:	68fb      	ldr	r3, [r7, #12]
 8002cee:	681a      	ldr	r2, [r3, #0]
 8002cf0:	68bb      	ldr	r3, [r7, #8]
 8002cf2:	011b      	lsls	r3, r3, #4
 8002cf4:	4413      	add	r3, r2
 8002cf6:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 8002cfa:	681b      	ldr	r3, [r3, #0]
 8002cfc:	0c1a      	lsrs	r2, r3, #16
 8002cfe:	683b      	ldr	r3, [r7, #0]
 8002d00:	3302      	adds	r3, #2
 8002d02:	b2d2      	uxtb	r2, r2
 8002d04:	701a      	strb	r2, [r3, #0]
 8002d06:	68fb      	ldr	r3, [r7, #12]
 8002d08:	681a      	ldr	r2, [r3, #0]
 8002d0a:	68bb      	ldr	r3, [r7, #8]
 8002d0c:	011b      	lsls	r3, r3, #4
 8002d0e:	4413      	add	r3, r2
 8002d10:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 8002d14:	681b      	ldr	r3, [r3, #0]
 8002d16:	0e1a      	lsrs	r2, r3, #24
 8002d18:	683b      	ldr	r3, [r7, #0]
 8002d1a:	3303      	adds	r3, #3
 8002d1c:	b2d2      	uxtb	r2, r2
 8002d1e:	701a      	strb	r2, [r3, #0]
 8002d20:	68fb      	ldr	r3, [r7, #12]
 8002d22:	681a      	ldr	r2, [r3, #0]
 8002d24:	68bb      	ldr	r3, [r7, #8]
 8002d26:	011b      	lsls	r3, r3, #4
 8002d28:	4413      	add	r3, r2
 8002d2a:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 8002d2e:	681a      	ldr	r2, [r3, #0]
 8002d30:	683b      	ldr	r3, [r7, #0]
 8002d32:	3304      	adds	r3, #4
 8002d34:	b2d2      	uxtb	r2, r2
 8002d36:	701a      	strb	r2, [r3, #0]
 8002d38:	68fb      	ldr	r3, [r7, #12]
 8002d3a:	681a      	ldr	r2, [r3, #0]
 8002d3c:	68bb      	ldr	r3, [r7, #8]
 8002d3e:	011b      	lsls	r3, r3, #4
 8002d40:	4413      	add	r3, r2
 8002d42:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 8002d46:	681b      	ldr	r3, [r3, #0]
 8002d48:	0a1a      	lsrs	r2, r3, #8
 8002d4a:	683b      	ldr	r3, [r7, #0]
 8002d4c:	3305      	adds	r3, #5
 8002d4e:	b2d2      	uxtb	r2, r2
 8002d50:	701a      	strb	r2, [r3, #0]
 8002d52:	68fb      	ldr	r3, [r7, #12]
 8002d54:	681a      	ldr	r2, [r3, #0]
 8002d56:	68bb      	ldr	r3, [r7, #8]
 8002d58:	011b      	lsls	r3, r3, #4
 8002d5a:	4413      	add	r3, r2
 8002d5c:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 8002d60:	681b      	ldr	r3, [r3, #0]
 8002d62:	0c1a      	lsrs	r2, r3, #16
 8002d64:	683b      	ldr	r3, [r7, #0]
 8002d66:	3306      	adds	r3, #6
 8002d68:	b2d2      	uxtb	r2, r2
 8002d6a:	701a      	strb	r2, [r3, #0]
 8002d6c:	68fb      	ldr	r3, [r7, #12]
 8002d6e:	681a      	ldr	r2, [r3, #0]
 8002d70:	68bb      	ldr	r3, [r7, #8]
 8002d72:	011b      	lsls	r3, r3, #4
 8002d74:	4413      	add	r3, r2
 8002d76:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 8002d7a:	681b      	ldr	r3, [r3, #0]
 8002d7c:	0e1a      	lsrs	r2, r3, #24
 8002d7e:	683b      	ldr	r3, [r7, #0]
 8002d80:	3307      	adds	r3, #7
 8002d82:	b2d2      	uxtb	r2, r2
 8002d84:	701a      	strb	r2, [r3, #0]
 8002d86:	68bb      	ldr	r3, [r7, #8]
 8002d88:	2b00      	cmp	r3, #0
 8002d8a:	d108      	bne.n	8002d9e <HAL_CAN_GetRxMessage+0x216>
 8002d8c:	68fb      	ldr	r3, [r7, #12]
 8002d8e:	681b      	ldr	r3, [r3, #0]
 8002d90:	68da      	ldr	r2, [r3, #12]
 8002d92:	68fb      	ldr	r3, [r7, #12]
 8002d94:	681b      	ldr	r3, [r3, #0]
 8002d96:	f042 0220 	orr.w	r2, r2, #32
 8002d9a:	60da      	str	r2, [r3, #12]
 8002d9c:	e007      	b.n	8002dae <HAL_CAN_GetRxMessage+0x226>
 8002d9e:	68fb      	ldr	r3, [r7, #12]
 8002da0:	681b      	ldr	r3, [r3, #0]
 8002da2:	691a      	ldr	r2, [r3, #16]
 8002da4:	68fb      	ldr	r3, [r7, #12]
 8002da6:	681b      	ldr	r3, [r3, #0]
 8002da8:	f042 0220 	orr.w	r2, r2, #32
 8002dac:	611a      	str	r2, [r3, #16]
 8002dae:	2300      	movs	r3, #0
 8002db0:	e006      	b.n	8002dc0 <HAL_CAN_GetRxMessage+0x238>
 8002db2:	68fb      	ldr	r3, [r7, #12]
 8002db4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002db6:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 8002dba:	68fb      	ldr	r3, [r7, #12]
 8002dbc:	625a      	str	r2, [r3, #36]	@ 0x24
 8002dbe:	2301      	movs	r3, #1
 8002dc0:	4618      	mov	r0, r3
 8002dc2:	371c      	adds	r7, #28
 8002dc4:	46bd      	mov	sp, r7
 8002dc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002dca:	4770      	bx	lr

08002dcc <HAL_CAN_GetRxFifoFillLevel>:
 8002dcc:	b480      	push	{r7}
 8002dce:	b085      	sub	sp, #20
 8002dd0:	af00      	add	r7, sp, #0
 8002dd2:	6078      	str	r0, [r7, #4]
 8002dd4:	6039      	str	r1, [r7, #0]
 8002dd6:	2300      	movs	r3, #0
 8002dd8:	60fb      	str	r3, [r7, #12]
 8002dda:	687b      	ldr	r3, [r7, #4]
 8002ddc:	f893 3020 	ldrb.w	r3, [r3, #32]
 8002de0:	72fb      	strb	r3, [r7, #11]
 8002de2:	7afb      	ldrb	r3, [r7, #11]
 8002de4:	2b01      	cmp	r3, #1
 8002de6:	d002      	beq.n	8002dee <HAL_CAN_GetRxFifoFillLevel+0x22>
 8002de8:	7afb      	ldrb	r3, [r7, #11]
 8002dea:	2b02      	cmp	r3, #2
 8002dec:	d10f      	bne.n	8002e0e <HAL_CAN_GetRxFifoFillLevel+0x42>
 8002dee:	683b      	ldr	r3, [r7, #0]
 8002df0:	2b00      	cmp	r3, #0
 8002df2:	d106      	bne.n	8002e02 <HAL_CAN_GetRxFifoFillLevel+0x36>
 8002df4:	687b      	ldr	r3, [r7, #4]
 8002df6:	681b      	ldr	r3, [r3, #0]
 8002df8:	68db      	ldr	r3, [r3, #12]
 8002dfa:	f003 0303 	and.w	r3, r3, #3
 8002dfe:	60fb      	str	r3, [r7, #12]
 8002e00:	e005      	b.n	8002e0e <HAL_CAN_GetRxFifoFillLevel+0x42>
 8002e02:	687b      	ldr	r3, [r7, #4]
 8002e04:	681b      	ldr	r3, [r3, #0]
 8002e06:	691b      	ldr	r3, [r3, #16]
 8002e08:	f003 0303 	and.w	r3, r3, #3
 8002e0c:	60fb      	str	r3, [r7, #12]
 8002e0e:	68fb      	ldr	r3, [r7, #12]
 8002e10:	4618      	mov	r0, r3
 8002e12:	3714      	adds	r7, #20
 8002e14:	46bd      	mov	sp, r7
 8002e16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e1a:	4770      	bx	lr

08002e1c <HAL_CAN_ActivateNotification>:
 8002e1c:	b480      	push	{r7}
 8002e1e:	b085      	sub	sp, #20
 8002e20:	af00      	add	r7, sp, #0
 8002e22:	6078      	str	r0, [r7, #4]
 8002e24:	6039      	str	r1, [r7, #0]
 8002e26:	687b      	ldr	r3, [r7, #4]
 8002e28:	f893 3020 	ldrb.w	r3, [r3, #32]
 8002e2c:	73fb      	strb	r3, [r7, #15]
 8002e2e:	7bfb      	ldrb	r3, [r7, #15]
 8002e30:	2b01      	cmp	r3, #1
 8002e32:	d002      	beq.n	8002e3a <HAL_CAN_ActivateNotification+0x1e>
 8002e34:	7bfb      	ldrb	r3, [r7, #15]
 8002e36:	2b02      	cmp	r3, #2
 8002e38:	d109      	bne.n	8002e4e <HAL_CAN_ActivateNotification+0x32>
 8002e3a:	687b      	ldr	r3, [r7, #4]
 8002e3c:	681b      	ldr	r3, [r3, #0]
 8002e3e:	6959      	ldr	r1, [r3, #20]
 8002e40:	687b      	ldr	r3, [r7, #4]
 8002e42:	681b      	ldr	r3, [r3, #0]
 8002e44:	683a      	ldr	r2, [r7, #0]
 8002e46:	430a      	orrs	r2, r1
 8002e48:	615a      	str	r2, [r3, #20]
 8002e4a:	2300      	movs	r3, #0
 8002e4c:	e006      	b.n	8002e5c <HAL_CAN_ActivateNotification+0x40>
 8002e4e:	687b      	ldr	r3, [r7, #4]
 8002e50:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002e52:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 8002e56:	687b      	ldr	r3, [r7, #4]
 8002e58:	625a      	str	r2, [r3, #36]	@ 0x24
 8002e5a:	2301      	movs	r3, #1
 8002e5c:	4618      	mov	r0, r3
 8002e5e:	3714      	adds	r7, #20
 8002e60:	46bd      	mov	sp, r7
 8002e62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e66:	4770      	bx	lr

08002e68 <HAL_CAN_IRQHandler>:
 8002e68:	b580      	push	{r7, lr}
 8002e6a:	b08a      	sub	sp, #40	@ 0x28
 8002e6c:	af00      	add	r7, sp, #0
 8002e6e:	6078      	str	r0, [r7, #4]
 8002e70:	2300      	movs	r3, #0
 8002e72:	627b      	str	r3, [r7, #36]	@ 0x24
 8002e74:	687b      	ldr	r3, [r7, #4]
 8002e76:	681b      	ldr	r3, [r3, #0]
 8002e78:	695b      	ldr	r3, [r3, #20]
 8002e7a:	623b      	str	r3, [r7, #32]
 8002e7c:	687b      	ldr	r3, [r7, #4]
 8002e7e:	681b      	ldr	r3, [r3, #0]
 8002e80:	685b      	ldr	r3, [r3, #4]
 8002e82:	61fb      	str	r3, [r7, #28]
 8002e84:	687b      	ldr	r3, [r7, #4]
 8002e86:	681b      	ldr	r3, [r3, #0]
 8002e88:	689b      	ldr	r3, [r3, #8]
 8002e8a:	61bb      	str	r3, [r7, #24]
 8002e8c:	687b      	ldr	r3, [r7, #4]
 8002e8e:	681b      	ldr	r3, [r3, #0]
 8002e90:	68db      	ldr	r3, [r3, #12]
 8002e92:	617b      	str	r3, [r7, #20]
 8002e94:	687b      	ldr	r3, [r7, #4]
 8002e96:	681b      	ldr	r3, [r3, #0]
 8002e98:	691b      	ldr	r3, [r3, #16]
 8002e9a:	613b      	str	r3, [r7, #16]
 8002e9c:	687b      	ldr	r3, [r7, #4]
 8002e9e:	681b      	ldr	r3, [r3, #0]
 8002ea0:	699b      	ldr	r3, [r3, #24]
 8002ea2:	60fb      	str	r3, [r7, #12]
 8002ea4:	6a3b      	ldr	r3, [r7, #32]
 8002ea6:	f003 0301 	and.w	r3, r3, #1
 8002eaa:	2b00      	cmp	r3, #0
 8002eac:	d07c      	beq.n	8002fa8 <HAL_CAN_IRQHandler+0x140>
 8002eae:	69bb      	ldr	r3, [r7, #24]
 8002eb0:	f003 0301 	and.w	r3, r3, #1
 8002eb4:	2b00      	cmp	r3, #0
 8002eb6:	d023      	beq.n	8002f00 <HAL_CAN_IRQHandler+0x98>
 8002eb8:	687b      	ldr	r3, [r7, #4]
 8002eba:	681b      	ldr	r3, [r3, #0]
 8002ebc:	2201      	movs	r2, #1
 8002ebe:	609a      	str	r2, [r3, #8]
 8002ec0:	69bb      	ldr	r3, [r7, #24]
 8002ec2:	f003 0302 	and.w	r3, r3, #2
 8002ec6:	2b00      	cmp	r3, #0
 8002ec8:	d003      	beq.n	8002ed2 <HAL_CAN_IRQHandler+0x6a>
 8002eca:	6878      	ldr	r0, [r7, #4]
 8002ecc:	f000 f983 	bl	80031d6 <HAL_CAN_TxMailbox0CompleteCallback>
 8002ed0:	e016      	b.n	8002f00 <HAL_CAN_IRQHandler+0x98>
 8002ed2:	69bb      	ldr	r3, [r7, #24]
 8002ed4:	f003 0304 	and.w	r3, r3, #4
 8002ed8:	2b00      	cmp	r3, #0
 8002eda:	d004      	beq.n	8002ee6 <HAL_CAN_IRQHandler+0x7e>
 8002edc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002ede:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8002ee2:	627b      	str	r3, [r7, #36]	@ 0x24
 8002ee4:	e00c      	b.n	8002f00 <HAL_CAN_IRQHandler+0x98>
 8002ee6:	69bb      	ldr	r3, [r7, #24]
 8002ee8:	f003 0308 	and.w	r3, r3, #8
 8002eec:	2b00      	cmp	r3, #0
 8002eee:	d004      	beq.n	8002efa <HAL_CAN_IRQHandler+0x92>
 8002ef0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002ef2:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8002ef6:	627b      	str	r3, [r7, #36]	@ 0x24
 8002ef8:	e002      	b.n	8002f00 <HAL_CAN_IRQHandler+0x98>
 8002efa:	6878      	ldr	r0, [r7, #4]
 8002efc:	f000 f989 	bl	8003212 <HAL_CAN_TxMailbox0AbortCallback>
 8002f00:	69bb      	ldr	r3, [r7, #24]
 8002f02:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002f06:	2b00      	cmp	r3, #0
 8002f08:	d024      	beq.n	8002f54 <HAL_CAN_IRQHandler+0xec>
 8002f0a:	687b      	ldr	r3, [r7, #4]
 8002f0c:	681b      	ldr	r3, [r3, #0]
 8002f0e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8002f12:	609a      	str	r2, [r3, #8]
 8002f14:	69bb      	ldr	r3, [r7, #24]
 8002f16:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8002f1a:	2b00      	cmp	r3, #0
 8002f1c:	d003      	beq.n	8002f26 <HAL_CAN_IRQHandler+0xbe>
 8002f1e:	6878      	ldr	r0, [r7, #4]
 8002f20:	f000 f963 	bl	80031ea <HAL_CAN_TxMailbox1CompleteCallback>
 8002f24:	e016      	b.n	8002f54 <HAL_CAN_IRQHandler+0xec>
 8002f26:	69bb      	ldr	r3, [r7, #24]
 8002f28:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002f2c:	2b00      	cmp	r3, #0
 8002f2e:	d004      	beq.n	8002f3a <HAL_CAN_IRQHandler+0xd2>
 8002f30:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002f32:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8002f36:	627b      	str	r3, [r7, #36]	@ 0x24
 8002f38:	e00c      	b.n	8002f54 <HAL_CAN_IRQHandler+0xec>
 8002f3a:	69bb      	ldr	r3, [r7, #24]
 8002f3c:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8002f40:	2b00      	cmp	r3, #0
 8002f42:	d004      	beq.n	8002f4e <HAL_CAN_IRQHandler+0xe6>
 8002f44:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002f46:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002f4a:	627b      	str	r3, [r7, #36]	@ 0x24
 8002f4c:	e002      	b.n	8002f54 <HAL_CAN_IRQHandler+0xec>
 8002f4e:	6878      	ldr	r0, [r7, #4]
 8002f50:	f000 f969 	bl	8003226 <HAL_CAN_TxMailbox1AbortCallback>
 8002f54:	69bb      	ldr	r3, [r7, #24]
 8002f56:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002f5a:	2b00      	cmp	r3, #0
 8002f5c:	d024      	beq.n	8002fa8 <HAL_CAN_IRQHandler+0x140>
 8002f5e:	687b      	ldr	r3, [r7, #4]
 8002f60:	681b      	ldr	r3, [r3, #0]
 8002f62:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 8002f66:	609a      	str	r2, [r3, #8]
 8002f68:	69bb      	ldr	r3, [r7, #24]
 8002f6a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002f6e:	2b00      	cmp	r3, #0
 8002f70:	d003      	beq.n	8002f7a <HAL_CAN_IRQHandler+0x112>
 8002f72:	6878      	ldr	r0, [r7, #4]
 8002f74:	f000 f943 	bl	80031fe <HAL_CAN_TxMailbox2CompleteCallback>
 8002f78:	e016      	b.n	8002fa8 <HAL_CAN_IRQHandler+0x140>
 8002f7a:	69bb      	ldr	r3, [r7, #24]
 8002f7c:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8002f80:	2b00      	cmp	r3, #0
 8002f82:	d004      	beq.n	8002f8e <HAL_CAN_IRQHandler+0x126>
 8002f84:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002f86:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8002f8a:	627b      	str	r3, [r7, #36]	@ 0x24
 8002f8c:	e00c      	b.n	8002fa8 <HAL_CAN_IRQHandler+0x140>
 8002f8e:	69bb      	ldr	r3, [r7, #24]
 8002f90:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8002f94:	2b00      	cmp	r3, #0
 8002f96:	d004      	beq.n	8002fa2 <HAL_CAN_IRQHandler+0x13a>
 8002f98:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002f9a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002f9e:	627b      	str	r3, [r7, #36]	@ 0x24
 8002fa0:	e002      	b.n	8002fa8 <HAL_CAN_IRQHandler+0x140>
 8002fa2:	6878      	ldr	r0, [r7, #4]
 8002fa4:	f000 f949 	bl	800323a <HAL_CAN_TxMailbox2AbortCallback>
 8002fa8:	6a3b      	ldr	r3, [r7, #32]
 8002faa:	f003 0308 	and.w	r3, r3, #8
 8002fae:	2b00      	cmp	r3, #0
 8002fb0:	d00c      	beq.n	8002fcc <HAL_CAN_IRQHandler+0x164>
 8002fb2:	697b      	ldr	r3, [r7, #20]
 8002fb4:	f003 0310 	and.w	r3, r3, #16
 8002fb8:	2b00      	cmp	r3, #0
 8002fba:	d007      	beq.n	8002fcc <HAL_CAN_IRQHandler+0x164>
 8002fbc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002fbe:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002fc2:	627b      	str	r3, [r7, #36]	@ 0x24
 8002fc4:	687b      	ldr	r3, [r7, #4]
 8002fc6:	681b      	ldr	r3, [r3, #0]
 8002fc8:	2210      	movs	r2, #16
 8002fca:	60da      	str	r2, [r3, #12]
 8002fcc:	6a3b      	ldr	r3, [r7, #32]
 8002fce:	f003 0304 	and.w	r3, r3, #4
 8002fd2:	2b00      	cmp	r3, #0
 8002fd4:	d00b      	beq.n	8002fee <HAL_CAN_IRQHandler+0x186>
 8002fd6:	697b      	ldr	r3, [r7, #20]
 8002fd8:	f003 0308 	and.w	r3, r3, #8
 8002fdc:	2b00      	cmp	r3, #0
 8002fde:	d006      	beq.n	8002fee <HAL_CAN_IRQHandler+0x186>
 8002fe0:	687b      	ldr	r3, [r7, #4]
 8002fe2:	681b      	ldr	r3, [r3, #0]
 8002fe4:	2208      	movs	r2, #8
 8002fe6:	60da      	str	r2, [r3, #12]
 8002fe8:	6878      	ldr	r0, [r7, #4]
 8002fea:	f000 f930 	bl	800324e <HAL_CAN_RxFifo0FullCallback>
 8002fee:	6a3b      	ldr	r3, [r7, #32]
 8002ff0:	f003 0302 	and.w	r3, r3, #2
 8002ff4:	2b00      	cmp	r3, #0
 8002ff6:	d009      	beq.n	800300c <HAL_CAN_IRQHandler+0x1a4>
 8002ff8:	687b      	ldr	r3, [r7, #4]
 8002ffa:	681b      	ldr	r3, [r3, #0]
 8002ffc:	68db      	ldr	r3, [r3, #12]
 8002ffe:	f003 0303 	and.w	r3, r3, #3
 8003002:	2b00      	cmp	r3, #0
 8003004:	d002      	beq.n	800300c <HAL_CAN_IRQHandler+0x1a4>
 8003006:	6878      	ldr	r0, [r7, #4]
 8003008:	f7fe fdf6 	bl	8001bf8 <HAL_CAN_RxFifo0MsgPendingCallback>
 800300c:	6a3b      	ldr	r3, [r7, #32]
 800300e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003012:	2b00      	cmp	r3, #0
 8003014:	d00c      	beq.n	8003030 <HAL_CAN_IRQHandler+0x1c8>
 8003016:	693b      	ldr	r3, [r7, #16]
 8003018:	f003 0310 	and.w	r3, r3, #16
 800301c:	2b00      	cmp	r3, #0
 800301e:	d007      	beq.n	8003030 <HAL_CAN_IRQHandler+0x1c8>
 8003020:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003022:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8003026:	627b      	str	r3, [r7, #36]	@ 0x24
 8003028:	687b      	ldr	r3, [r7, #4]
 800302a:	681b      	ldr	r3, [r3, #0]
 800302c:	2210      	movs	r2, #16
 800302e:	611a      	str	r2, [r3, #16]
 8003030:	6a3b      	ldr	r3, [r7, #32]
 8003032:	f003 0320 	and.w	r3, r3, #32
 8003036:	2b00      	cmp	r3, #0
 8003038:	d00b      	beq.n	8003052 <HAL_CAN_IRQHandler+0x1ea>
 800303a:	693b      	ldr	r3, [r7, #16]
 800303c:	f003 0308 	and.w	r3, r3, #8
 8003040:	2b00      	cmp	r3, #0
 8003042:	d006      	beq.n	8003052 <HAL_CAN_IRQHandler+0x1ea>
 8003044:	687b      	ldr	r3, [r7, #4]
 8003046:	681b      	ldr	r3, [r3, #0]
 8003048:	2208      	movs	r2, #8
 800304a:	611a      	str	r2, [r3, #16]
 800304c:	6878      	ldr	r0, [r7, #4]
 800304e:	f000 f912 	bl	8003276 <HAL_CAN_RxFifo1FullCallback>
 8003052:	6a3b      	ldr	r3, [r7, #32]
 8003054:	f003 0310 	and.w	r3, r3, #16
 8003058:	2b00      	cmp	r3, #0
 800305a:	d009      	beq.n	8003070 <HAL_CAN_IRQHandler+0x208>
 800305c:	687b      	ldr	r3, [r7, #4]
 800305e:	681b      	ldr	r3, [r3, #0]
 8003060:	691b      	ldr	r3, [r3, #16]
 8003062:	f003 0303 	and.w	r3, r3, #3
 8003066:	2b00      	cmp	r3, #0
 8003068:	d002      	beq.n	8003070 <HAL_CAN_IRQHandler+0x208>
 800306a:	6878      	ldr	r0, [r7, #4]
 800306c:	f000 f8f9 	bl	8003262 <HAL_CAN_RxFifo1MsgPendingCallback>
 8003070:	6a3b      	ldr	r3, [r7, #32]
 8003072:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003076:	2b00      	cmp	r3, #0
 8003078:	d00b      	beq.n	8003092 <HAL_CAN_IRQHandler+0x22a>
 800307a:	69fb      	ldr	r3, [r7, #28]
 800307c:	f003 0310 	and.w	r3, r3, #16
 8003080:	2b00      	cmp	r3, #0
 8003082:	d006      	beq.n	8003092 <HAL_CAN_IRQHandler+0x22a>
 8003084:	687b      	ldr	r3, [r7, #4]
 8003086:	681b      	ldr	r3, [r3, #0]
 8003088:	2210      	movs	r2, #16
 800308a:	605a      	str	r2, [r3, #4]
 800308c:	6878      	ldr	r0, [r7, #4]
 800308e:	f000 f8fc 	bl	800328a <HAL_CAN_SleepCallback>
 8003092:	6a3b      	ldr	r3, [r7, #32]
 8003094:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003098:	2b00      	cmp	r3, #0
 800309a:	d00b      	beq.n	80030b4 <HAL_CAN_IRQHandler+0x24c>
 800309c:	69fb      	ldr	r3, [r7, #28]
 800309e:	f003 0308 	and.w	r3, r3, #8
 80030a2:	2b00      	cmp	r3, #0
 80030a4:	d006      	beq.n	80030b4 <HAL_CAN_IRQHandler+0x24c>
 80030a6:	687b      	ldr	r3, [r7, #4]
 80030a8:	681b      	ldr	r3, [r3, #0]
 80030aa:	2208      	movs	r2, #8
 80030ac:	605a      	str	r2, [r3, #4]
 80030ae:	6878      	ldr	r0, [r7, #4]
 80030b0:	f000 f8f5 	bl	800329e <HAL_CAN_WakeUpFromRxMsgCallback>
 80030b4:	6a3b      	ldr	r3, [r7, #32]
 80030b6:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80030ba:	2b00      	cmp	r3, #0
 80030bc:	d07b      	beq.n	80031b6 <HAL_CAN_IRQHandler+0x34e>
 80030be:	69fb      	ldr	r3, [r7, #28]
 80030c0:	f003 0304 	and.w	r3, r3, #4
 80030c4:	2b00      	cmp	r3, #0
 80030c6:	d072      	beq.n	80031ae <HAL_CAN_IRQHandler+0x346>
 80030c8:	6a3b      	ldr	r3, [r7, #32]
 80030ca:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80030ce:	2b00      	cmp	r3, #0
 80030d0:	d008      	beq.n	80030e4 <HAL_CAN_IRQHandler+0x27c>
 80030d2:	68fb      	ldr	r3, [r7, #12]
 80030d4:	f003 0301 	and.w	r3, r3, #1
 80030d8:	2b00      	cmp	r3, #0
 80030da:	d003      	beq.n	80030e4 <HAL_CAN_IRQHandler+0x27c>
 80030dc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80030de:	f043 0301 	orr.w	r3, r3, #1
 80030e2:	627b      	str	r3, [r7, #36]	@ 0x24
 80030e4:	6a3b      	ldr	r3, [r7, #32]
 80030e6:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80030ea:	2b00      	cmp	r3, #0
 80030ec:	d008      	beq.n	8003100 <HAL_CAN_IRQHandler+0x298>
 80030ee:	68fb      	ldr	r3, [r7, #12]
 80030f0:	f003 0302 	and.w	r3, r3, #2
 80030f4:	2b00      	cmp	r3, #0
 80030f6:	d003      	beq.n	8003100 <HAL_CAN_IRQHandler+0x298>
 80030f8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80030fa:	f043 0302 	orr.w	r3, r3, #2
 80030fe:	627b      	str	r3, [r7, #36]	@ 0x24
 8003100:	6a3b      	ldr	r3, [r7, #32]
 8003102:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003106:	2b00      	cmp	r3, #0
 8003108:	d008      	beq.n	800311c <HAL_CAN_IRQHandler+0x2b4>
 800310a:	68fb      	ldr	r3, [r7, #12]
 800310c:	f003 0304 	and.w	r3, r3, #4
 8003110:	2b00      	cmp	r3, #0
 8003112:	d003      	beq.n	800311c <HAL_CAN_IRQHandler+0x2b4>
 8003114:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003116:	f043 0304 	orr.w	r3, r3, #4
 800311a:	627b      	str	r3, [r7, #36]	@ 0x24
 800311c:	6a3b      	ldr	r3, [r7, #32]
 800311e:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8003122:	2b00      	cmp	r3, #0
 8003124:	d043      	beq.n	80031ae <HAL_CAN_IRQHandler+0x346>
 8003126:	68fb      	ldr	r3, [r7, #12]
 8003128:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800312c:	2b00      	cmp	r3, #0
 800312e:	d03e      	beq.n	80031ae <HAL_CAN_IRQHandler+0x346>
 8003130:	68fb      	ldr	r3, [r7, #12]
 8003132:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8003136:	2b60      	cmp	r3, #96	@ 0x60
 8003138:	d02b      	beq.n	8003192 <HAL_CAN_IRQHandler+0x32a>
 800313a:	2b60      	cmp	r3, #96	@ 0x60
 800313c:	d82e      	bhi.n	800319c <HAL_CAN_IRQHandler+0x334>
 800313e:	2b50      	cmp	r3, #80	@ 0x50
 8003140:	d022      	beq.n	8003188 <HAL_CAN_IRQHandler+0x320>
 8003142:	2b50      	cmp	r3, #80	@ 0x50
 8003144:	d82a      	bhi.n	800319c <HAL_CAN_IRQHandler+0x334>
 8003146:	2b40      	cmp	r3, #64	@ 0x40
 8003148:	d019      	beq.n	800317e <HAL_CAN_IRQHandler+0x316>
 800314a:	2b40      	cmp	r3, #64	@ 0x40
 800314c:	d826      	bhi.n	800319c <HAL_CAN_IRQHandler+0x334>
 800314e:	2b30      	cmp	r3, #48	@ 0x30
 8003150:	d010      	beq.n	8003174 <HAL_CAN_IRQHandler+0x30c>
 8003152:	2b30      	cmp	r3, #48	@ 0x30
 8003154:	d822      	bhi.n	800319c <HAL_CAN_IRQHandler+0x334>
 8003156:	2b10      	cmp	r3, #16
 8003158:	d002      	beq.n	8003160 <HAL_CAN_IRQHandler+0x2f8>
 800315a:	2b20      	cmp	r3, #32
 800315c:	d005      	beq.n	800316a <HAL_CAN_IRQHandler+0x302>
 800315e:	e01d      	b.n	800319c <HAL_CAN_IRQHandler+0x334>
 8003160:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003162:	f043 0308 	orr.w	r3, r3, #8
 8003166:	627b      	str	r3, [r7, #36]	@ 0x24
 8003168:	e019      	b.n	800319e <HAL_CAN_IRQHandler+0x336>
 800316a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800316c:	f043 0310 	orr.w	r3, r3, #16
 8003170:	627b      	str	r3, [r7, #36]	@ 0x24
 8003172:	e014      	b.n	800319e <HAL_CAN_IRQHandler+0x336>
 8003174:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003176:	f043 0320 	orr.w	r3, r3, #32
 800317a:	627b      	str	r3, [r7, #36]	@ 0x24
 800317c:	e00f      	b.n	800319e <HAL_CAN_IRQHandler+0x336>
 800317e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003180:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003184:	627b      	str	r3, [r7, #36]	@ 0x24
 8003186:	e00a      	b.n	800319e <HAL_CAN_IRQHandler+0x336>
 8003188:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800318a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800318e:	627b      	str	r3, [r7, #36]	@ 0x24
 8003190:	e005      	b.n	800319e <HAL_CAN_IRQHandler+0x336>
 8003192:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003194:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003198:	627b      	str	r3, [r7, #36]	@ 0x24
 800319a:	e000      	b.n	800319e <HAL_CAN_IRQHandler+0x336>
 800319c:	bf00      	nop
 800319e:	687b      	ldr	r3, [r7, #4]
 80031a0:	681b      	ldr	r3, [r3, #0]
 80031a2:	699a      	ldr	r2, [r3, #24]
 80031a4:	687b      	ldr	r3, [r7, #4]
 80031a6:	681b      	ldr	r3, [r3, #0]
 80031a8:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 80031ac:	619a      	str	r2, [r3, #24]
 80031ae:	687b      	ldr	r3, [r7, #4]
 80031b0:	681b      	ldr	r3, [r3, #0]
 80031b2:	2204      	movs	r2, #4
 80031b4:	605a      	str	r2, [r3, #4]
 80031b6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80031b8:	2b00      	cmp	r3, #0
 80031ba:	d008      	beq.n	80031ce <HAL_CAN_IRQHandler+0x366>
 80031bc:	687b      	ldr	r3, [r7, #4]
 80031be:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80031c0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80031c2:	431a      	orrs	r2, r3
 80031c4:	687b      	ldr	r3, [r7, #4]
 80031c6:	625a      	str	r2, [r3, #36]	@ 0x24
 80031c8:	6878      	ldr	r0, [r7, #4]
 80031ca:	f000 f872 	bl	80032b2 <HAL_CAN_ErrorCallback>
 80031ce:	bf00      	nop
 80031d0:	3728      	adds	r7, #40	@ 0x28
 80031d2:	46bd      	mov	sp, r7
 80031d4:	bd80      	pop	{r7, pc}

080031d6 <HAL_CAN_TxMailbox0CompleteCallback>:
 80031d6:	b480      	push	{r7}
 80031d8:	b083      	sub	sp, #12
 80031da:	af00      	add	r7, sp, #0
 80031dc:	6078      	str	r0, [r7, #4]
 80031de:	bf00      	nop
 80031e0:	370c      	adds	r7, #12
 80031e2:	46bd      	mov	sp, r7
 80031e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031e8:	4770      	bx	lr

080031ea <HAL_CAN_TxMailbox1CompleteCallback>:
 80031ea:	b480      	push	{r7}
 80031ec:	b083      	sub	sp, #12
 80031ee:	af00      	add	r7, sp, #0
 80031f0:	6078      	str	r0, [r7, #4]
 80031f2:	bf00      	nop
 80031f4:	370c      	adds	r7, #12
 80031f6:	46bd      	mov	sp, r7
 80031f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031fc:	4770      	bx	lr

080031fe <HAL_CAN_TxMailbox2CompleteCallback>:
 80031fe:	b480      	push	{r7}
 8003200:	b083      	sub	sp, #12
 8003202:	af00      	add	r7, sp, #0
 8003204:	6078      	str	r0, [r7, #4]
 8003206:	bf00      	nop
 8003208:	370c      	adds	r7, #12
 800320a:	46bd      	mov	sp, r7
 800320c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003210:	4770      	bx	lr

08003212 <HAL_CAN_TxMailbox0AbortCallback>:
 8003212:	b480      	push	{r7}
 8003214:	b083      	sub	sp, #12
 8003216:	af00      	add	r7, sp, #0
 8003218:	6078      	str	r0, [r7, #4]
 800321a:	bf00      	nop
 800321c:	370c      	adds	r7, #12
 800321e:	46bd      	mov	sp, r7
 8003220:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003224:	4770      	bx	lr

08003226 <HAL_CAN_TxMailbox1AbortCallback>:
 8003226:	b480      	push	{r7}
 8003228:	b083      	sub	sp, #12
 800322a:	af00      	add	r7, sp, #0
 800322c:	6078      	str	r0, [r7, #4]
 800322e:	bf00      	nop
 8003230:	370c      	adds	r7, #12
 8003232:	46bd      	mov	sp, r7
 8003234:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003238:	4770      	bx	lr

0800323a <HAL_CAN_TxMailbox2AbortCallback>:
 800323a:	b480      	push	{r7}
 800323c:	b083      	sub	sp, #12
 800323e:	af00      	add	r7, sp, #0
 8003240:	6078      	str	r0, [r7, #4]
 8003242:	bf00      	nop
 8003244:	370c      	adds	r7, #12
 8003246:	46bd      	mov	sp, r7
 8003248:	f85d 7b04 	ldr.w	r7, [sp], #4
 800324c:	4770      	bx	lr

0800324e <HAL_CAN_RxFifo0FullCallback>:
 800324e:	b480      	push	{r7}
 8003250:	b083      	sub	sp, #12
 8003252:	af00      	add	r7, sp, #0
 8003254:	6078      	str	r0, [r7, #4]
 8003256:	bf00      	nop
 8003258:	370c      	adds	r7, #12
 800325a:	46bd      	mov	sp, r7
 800325c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003260:	4770      	bx	lr

08003262 <HAL_CAN_RxFifo1MsgPendingCallback>:
 8003262:	b480      	push	{r7}
 8003264:	b083      	sub	sp, #12
 8003266:	af00      	add	r7, sp, #0
 8003268:	6078      	str	r0, [r7, #4]
 800326a:	bf00      	nop
 800326c:	370c      	adds	r7, #12
 800326e:	46bd      	mov	sp, r7
 8003270:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003274:	4770      	bx	lr

08003276 <HAL_CAN_RxFifo1FullCallback>:
 8003276:	b480      	push	{r7}
 8003278:	b083      	sub	sp, #12
 800327a:	af00      	add	r7, sp, #0
 800327c:	6078      	str	r0, [r7, #4]
 800327e:	bf00      	nop
 8003280:	370c      	adds	r7, #12
 8003282:	46bd      	mov	sp, r7
 8003284:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003288:	4770      	bx	lr

0800328a <HAL_CAN_SleepCallback>:
 800328a:	b480      	push	{r7}
 800328c:	b083      	sub	sp, #12
 800328e:	af00      	add	r7, sp, #0
 8003290:	6078      	str	r0, [r7, #4]
 8003292:	bf00      	nop
 8003294:	370c      	adds	r7, #12
 8003296:	46bd      	mov	sp, r7
 8003298:	f85d 7b04 	ldr.w	r7, [sp], #4
 800329c:	4770      	bx	lr

0800329e <HAL_CAN_WakeUpFromRxMsgCallback>:
 800329e:	b480      	push	{r7}
 80032a0:	b083      	sub	sp, #12
 80032a2:	af00      	add	r7, sp, #0
 80032a4:	6078      	str	r0, [r7, #4]
 80032a6:	bf00      	nop
 80032a8:	370c      	adds	r7, #12
 80032aa:	46bd      	mov	sp, r7
 80032ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032b0:	4770      	bx	lr

080032b2 <HAL_CAN_ErrorCallback>:
 80032b2:	b480      	push	{r7}
 80032b4:	b083      	sub	sp, #12
 80032b6:	af00      	add	r7, sp, #0
 80032b8:	6078      	str	r0, [r7, #4]
 80032ba:	bf00      	nop
 80032bc:	370c      	adds	r7, #12
 80032be:	46bd      	mov	sp, r7
 80032c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032c4:	4770      	bx	lr
	...

080032c8 <__NVIC_SetPriorityGrouping>:
 80032c8:	b480      	push	{r7}
 80032ca:	b085      	sub	sp, #20
 80032cc:	af00      	add	r7, sp, #0
 80032ce:	6078      	str	r0, [r7, #4]
 80032d0:	687b      	ldr	r3, [r7, #4]
 80032d2:	f003 0307 	and.w	r3, r3, #7
 80032d6:	60fb      	str	r3, [r7, #12]
 80032d8:	4b0c      	ldr	r3, [pc, #48]	@ (800330c <__NVIC_SetPriorityGrouping+0x44>)
 80032da:	68db      	ldr	r3, [r3, #12]
 80032dc:	60bb      	str	r3, [r7, #8]
 80032de:	68ba      	ldr	r2, [r7, #8]
 80032e0:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80032e4:	4013      	ands	r3, r2
 80032e6:	60bb      	str	r3, [r7, #8]
 80032e8:	68fb      	ldr	r3, [r7, #12]
 80032ea:	021a      	lsls	r2, r3, #8
 80032ec:	68bb      	ldr	r3, [r7, #8]
 80032ee:	4313      	orrs	r3, r2
 80032f0:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80032f4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80032f8:	60bb      	str	r3, [r7, #8]
 80032fa:	4a04      	ldr	r2, [pc, #16]	@ (800330c <__NVIC_SetPriorityGrouping+0x44>)
 80032fc:	68bb      	ldr	r3, [r7, #8]
 80032fe:	60d3      	str	r3, [r2, #12]
 8003300:	bf00      	nop
 8003302:	3714      	adds	r7, #20
 8003304:	46bd      	mov	sp, r7
 8003306:	f85d 7b04 	ldr.w	r7, [sp], #4
 800330a:	4770      	bx	lr
 800330c:	e000ed00 	.word	0xe000ed00

08003310 <__NVIC_GetPriorityGrouping>:
 8003310:	b480      	push	{r7}
 8003312:	af00      	add	r7, sp, #0
 8003314:	4b04      	ldr	r3, [pc, #16]	@ (8003328 <__NVIC_GetPriorityGrouping+0x18>)
 8003316:	68db      	ldr	r3, [r3, #12]
 8003318:	0a1b      	lsrs	r3, r3, #8
 800331a:	f003 0307 	and.w	r3, r3, #7
 800331e:	4618      	mov	r0, r3
 8003320:	46bd      	mov	sp, r7
 8003322:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003326:	4770      	bx	lr
 8003328:	e000ed00 	.word	0xe000ed00

0800332c <__NVIC_EnableIRQ>:
 800332c:	b480      	push	{r7}
 800332e:	b083      	sub	sp, #12
 8003330:	af00      	add	r7, sp, #0
 8003332:	4603      	mov	r3, r0
 8003334:	71fb      	strb	r3, [r7, #7]
 8003336:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800333a:	2b00      	cmp	r3, #0
 800333c:	db0b      	blt.n	8003356 <__NVIC_EnableIRQ+0x2a>
 800333e:	79fb      	ldrb	r3, [r7, #7]
 8003340:	f003 021f 	and.w	r2, r3, #31
 8003344:	4907      	ldr	r1, [pc, #28]	@ (8003364 <__NVIC_EnableIRQ+0x38>)
 8003346:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800334a:	095b      	lsrs	r3, r3, #5
 800334c:	2001      	movs	r0, #1
 800334e:	fa00 f202 	lsl.w	r2, r0, r2
 8003352:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003356:	bf00      	nop
 8003358:	370c      	adds	r7, #12
 800335a:	46bd      	mov	sp, r7
 800335c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003360:	4770      	bx	lr
 8003362:	bf00      	nop
 8003364:	e000e100 	.word	0xe000e100

08003368 <__NVIC_SetPriority>:
 8003368:	b480      	push	{r7}
 800336a:	b083      	sub	sp, #12
 800336c:	af00      	add	r7, sp, #0
 800336e:	4603      	mov	r3, r0
 8003370:	6039      	str	r1, [r7, #0]
 8003372:	71fb      	strb	r3, [r7, #7]
 8003374:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003378:	2b00      	cmp	r3, #0
 800337a:	db0a      	blt.n	8003392 <__NVIC_SetPriority+0x2a>
 800337c:	683b      	ldr	r3, [r7, #0]
 800337e:	b2da      	uxtb	r2, r3
 8003380:	490c      	ldr	r1, [pc, #48]	@ (80033b4 <__NVIC_SetPriority+0x4c>)
 8003382:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003386:	0112      	lsls	r2, r2, #4
 8003388:	b2d2      	uxtb	r2, r2
 800338a:	440b      	add	r3, r1
 800338c:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8003390:	e00a      	b.n	80033a8 <__NVIC_SetPriority+0x40>
 8003392:	683b      	ldr	r3, [r7, #0]
 8003394:	b2da      	uxtb	r2, r3
 8003396:	4908      	ldr	r1, [pc, #32]	@ (80033b8 <__NVIC_SetPriority+0x50>)
 8003398:	79fb      	ldrb	r3, [r7, #7]
 800339a:	f003 030f 	and.w	r3, r3, #15
 800339e:	3b04      	subs	r3, #4
 80033a0:	0112      	lsls	r2, r2, #4
 80033a2:	b2d2      	uxtb	r2, r2
 80033a4:	440b      	add	r3, r1
 80033a6:	761a      	strb	r2, [r3, #24]
 80033a8:	bf00      	nop
 80033aa:	370c      	adds	r7, #12
 80033ac:	46bd      	mov	sp, r7
 80033ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033b2:	4770      	bx	lr
 80033b4:	e000e100 	.word	0xe000e100
 80033b8:	e000ed00 	.word	0xe000ed00

080033bc <NVIC_EncodePriority>:
 80033bc:	b480      	push	{r7}
 80033be:	b089      	sub	sp, #36	@ 0x24
 80033c0:	af00      	add	r7, sp, #0
 80033c2:	60f8      	str	r0, [r7, #12]
 80033c4:	60b9      	str	r1, [r7, #8]
 80033c6:	607a      	str	r2, [r7, #4]
 80033c8:	68fb      	ldr	r3, [r7, #12]
 80033ca:	f003 0307 	and.w	r3, r3, #7
 80033ce:	61fb      	str	r3, [r7, #28]
 80033d0:	69fb      	ldr	r3, [r7, #28]
 80033d2:	f1c3 0307 	rsb	r3, r3, #7
 80033d6:	2b04      	cmp	r3, #4
 80033d8:	bf28      	it	cs
 80033da:	2304      	movcs	r3, #4
 80033dc:	61bb      	str	r3, [r7, #24]
 80033de:	69fb      	ldr	r3, [r7, #28]
 80033e0:	3304      	adds	r3, #4
 80033e2:	2b06      	cmp	r3, #6
 80033e4:	d902      	bls.n	80033ec <NVIC_EncodePriority+0x30>
 80033e6:	69fb      	ldr	r3, [r7, #28]
 80033e8:	3b03      	subs	r3, #3
 80033ea:	e000      	b.n	80033ee <NVIC_EncodePriority+0x32>
 80033ec:	2300      	movs	r3, #0
 80033ee:	617b      	str	r3, [r7, #20]
 80033f0:	f04f 32ff 	mov.w	r2, #4294967295
 80033f4:	69bb      	ldr	r3, [r7, #24]
 80033f6:	fa02 f303 	lsl.w	r3, r2, r3
 80033fa:	43da      	mvns	r2, r3
 80033fc:	68bb      	ldr	r3, [r7, #8]
 80033fe:	401a      	ands	r2, r3
 8003400:	697b      	ldr	r3, [r7, #20]
 8003402:	409a      	lsls	r2, r3
 8003404:	f04f 31ff 	mov.w	r1, #4294967295
 8003408:	697b      	ldr	r3, [r7, #20]
 800340a:	fa01 f303 	lsl.w	r3, r1, r3
 800340e:	43d9      	mvns	r1, r3
 8003410:	687b      	ldr	r3, [r7, #4]
 8003412:	400b      	ands	r3, r1
 8003414:	4313      	orrs	r3, r2
 8003416:	4618      	mov	r0, r3
 8003418:	3724      	adds	r7, #36	@ 0x24
 800341a:	46bd      	mov	sp, r7
 800341c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003420:	4770      	bx	lr
	...

08003424 <SysTick_Config>:
 8003424:	b580      	push	{r7, lr}
 8003426:	b082      	sub	sp, #8
 8003428:	af00      	add	r7, sp, #0
 800342a:	6078      	str	r0, [r7, #4]
 800342c:	687b      	ldr	r3, [r7, #4]
 800342e:	3b01      	subs	r3, #1
 8003430:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003434:	d301      	bcc.n	800343a <SysTick_Config+0x16>
 8003436:	2301      	movs	r3, #1
 8003438:	e00f      	b.n	800345a <SysTick_Config+0x36>
 800343a:	4a0a      	ldr	r2, [pc, #40]	@ (8003464 <SysTick_Config+0x40>)
 800343c:	687b      	ldr	r3, [r7, #4]
 800343e:	3b01      	subs	r3, #1
 8003440:	6053      	str	r3, [r2, #4]
 8003442:	210f      	movs	r1, #15
 8003444:	f04f 30ff 	mov.w	r0, #4294967295
 8003448:	f7ff ff8e 	bl	8003368 <__NVIC_SetPriority>
 800344c:	4b05      	ldr	r3, [pc, #20]	@ (8003464 <SysTick_Config+0x40>)
 800344e:	2200      	movs	r2, #0
 8003450:	609a      	str	r2, [r3, #8]
 8003452:	4b04      	ldr	r3, [pc, #16]	@ (8003464 <SysTick_Config+0x40>)
 8003454:	2207      	movs	r2, #7
 8003456:	601a      	str	r2, [r3, #0]
 8003458:	2300      	movs	r3, #0
 800345a:	4618      	mov	r0, r3
 800345c:	3708      	adds	r7, #8
 800345e:	46bd      	mov	sp, r7
 8003460:	bd80      	pop	{r7, pc}
 8003462:	bf00      	nop
 8003464:	e000e010 	.word	0xe000e010

08003468 <HAL_NVIC_SetPriorityGrouping>:
 8003468:	b580      	push	{r7, lr}
 800346a:	b082      	sub	sp, #8
 800346c:	af00      	add	r7, sp, #0
 800346e:	6078      	str	r0, [r7, #4]
 8003470:	6878      	ldr	r0, [r7, #4]
 8003472:	f7ff ff29 	bl	80032c8 <__NVIC_SetPriorityGrouping>
 8003476:	bf00      	nop
 8003478:	3708      	adds	r7, #8
 800347a:	46bd      	mov	sp, r7
 800347c:	bd80      	pop	{r7, pc}

0800347e <HAL_NVIC_SetPriority>:
 800347e:	b580      	push	{r7, lr}
 8003480:	b086      	sub	sp, #24
 8003482:	af00      	add	r7, sp, #0
 8003484:	4603      	mov	r3, r0
 8003486:	60b9      	str	r1, [r7, #8]
 8003488:	607a      	str	r2, [r7, #4]
 800348a:	73fb      	strb	r3, [r7, #15]
 800348c:	2300      	movs	r3, #0
 800348e:	617b      	str	r3, [r7, #20]
 8003490:	f7ff ff3e 	bl	8003310 <__NVIC_GetPriorityGrouping>
 8003494:	6178      	str	r0, [r7, #20]
 8003496:	687a      	ldr	r2, [r7, #4]
 8003498:	68b9      	ldr	r1, [r7, #8]
 800349a:	6978      	ldr	r0, [r7, #20]
 800349c:	f7ff ff8e 	bl	80033bc <NVIC_EncodePriority>
 80034a0:	4602      	mov	r2, r0
 80034a2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80034a6:	4611      	mov	r1, r2
 80034a8:	4618      	mov	r0, r3
 80034aa:	f7ff ff5d 	bl	8003368 <__NVIC_SetPriority>
 80034ae:	bf00      	nop
 80034b0:	3718      	adds	r7, #24
 80034b2:	46bd      	mov	sp, r7
 80034b4:	bd80      	pop	{r7, pc}

080034b6 <HAL_NVIC_EnableIRQ>:
 80034b6:	b580      	push	{r7, lr}
 80034b8:	b082      	sub	sp, #8
 80034ba:	af00      	add	r7, sp, #0
 80034bc:	4603      	mov	r3, r0
 80034be:	71fb      	strb	r3, [r7, #7]
 80034c0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80034c4:	4618      	mov	r0, r3
 80034c6:	f7ff ff31 	bl	800332c <__NVIC_EnableIRQ>
 80034ca:	bf00      	nop
 80034cc:	3708      	adds	r7, #8
 80034ce:	46bd      	mov	sp, r7
 80034d0:	bd80      	pop	{r7, pc}

080034d2 <HAL_SYSTICK_Config>:
 80034d2:	b580      	push	{r7, lr}
 80034d4:	b082      	sub	sp, #8
 80034d6:	af00      	add	r7, sp, #0
 80034d8:	6078      	str	r0, [r7, #4]
 80034da:	6878      	ldr	r0, [r7, #4]
 80034dc:	f7ff ffa2 	bl	8003424 <SysTick_Config>
 80034e0:	4603      	mov	r3, r0
 80034e2:	4618      	mov	r0, r3
 80034e4:	3708      	adds	r7, #8
 80034e6:	46bd      	mov	sp, r7
 80034e8:	bd80      	pop	{r7, pc}
	...

080034ec <HAL_GPIO_Init>:
 80034ec:	b480      	push	{r7}
 80034ee:	b089      	sub	sp, #36	@ 0x24
 80034f0:	af00      	add	r7, sp, #0
 80034f2:	6078      	str	r0, [r7, #4]
 80034f4:	6039      	str	r1, [r7, #0]
 80034f6:	2300      	movs	r3, #0
 80034f8:	617b      	str	r3, [r7, #20]
 80034fa:	2300      	movs	r3, #0
 80034fc:	613b      	str	r3, [r7, #16]
 80034fe:	2300      	movs	r3, #0
 8003500:	61bb      	str	r3, [r7, #24]
 8003502:	2300      	movs	r3, #0
 8003504:	61fb      	str	r3, [r7, #28]
 8003506:	e165      	b.n	80037d4 <HAL_GPIO_Init+0x2e8>
 8003508:	2201      	movs	r2, #1
 800350a:	69fb      	ldr	r3, [r7, #28]
 800350c:	fa02 f303 	lsl.w	r3, r2, r3
 8003510:	617b      	str	r3, [r7, #20]
 8003512:	683b      	ldr	r3, [r7, #0]
 8003514:	681b      	ldr	r3, [r3, #0]
 8003516:	697a      	ldr	r2, [r7, #20]
 8003518:	4013      	ands	r3, r2
 800351a:	613b      	str	r3, [r7, #16]
 800351c:	693a      	ldr	r2, [r7, #16]
 800351e:	697b      	ldr	r3, [r7, #20]
 8003520:	429a      	cmp	r2, r3
 8003522:	f040 8154 	bne.w	80037ce <HAL_GPIO_Init+0x2e2>
 8003526:	683b      	ldr	r3, [r7, #0]
 8003528:	685b      	ldr	r3, [r3, #4]
 800352a:	f003 0303 	and.w	r3, r3, #3
 800352e:	2b01      	cmp	r3, #1
 8003530:	d005      	beq.n	800353e <HAL_GPIO_Init+0x52>
 8003532:	683b      	ldr	r3, [r7, #0]
 8003534:	685b      	ldr	r3, [r3, #4]
 8003536:	f003 0303 	and.w	r3, r3, #3
 800353a:	2b02      	cmp	r3, #2
 800353c:	d130      	bne.n	80035a0 <HAL_GPIO_Init+0xb4>
 800353e:	687b      	ldr	r3, [r7, #4]
 8003540:	689b      	ldr	r3, [r3, #8]
 8003542:	61bb      	str	r3, [r7, #24]
 8003544:	69fb      	ldr	r3, [r7, #28]
 8003546:	005b      	lsls	r3, r3, #1
 8003548:	2203      	movs	r2, #3
 800354a:	fa02 f303 	lsl.w	r3, r2, r3
 800354e:	43db      	mvns	r3, r3
 8003550:	69ba      	ldr	r2, [r7, #24]
 8003552:	4013      	ands	r3, r2
 8003554:	61bb      	str	r3, [r7, #24]
 8003556:	683b      	ldr	r3, [r7, #0]
 8003558:	68da      	ldr	r2, [r3, #12]
 800355a:	69fb      	ldr	r3, [r7, #28]
 800355c:	005b      	lsls	r3, r3, #1
 800355e:	fa02 f303 	lsl.w	r3, r2, r3
 8003562:	69ba      	ldr	r2, [r7, #24]
 8003564:	4313      	orrs	r3, r2
 8003566:	61bb      	str	r3, [r7, #24]
 8003568:	687b      	ldr	r3, [r7, #4]
 800356a:	69ba      	ldr	r2, [r7, #24]
 800356c:	609a      	str	r2, [r3, #8]
 800356e:	687b      	ldr	r3, [r7, #4]
 8003570:	685b      	ldr	r3, [r3, #4]
 8003572:	61bb      	str	r3, [r7, #24]
 8003574:	2201      	movs	r2, #1
 8003576:	69fb      	ldr	r3, [r7, #28]
 8003578:	fa02 f303 	lsl.w	r3, r2, r3
 800357c:	43db      	mvns	r3, r3
 800357e:	69ba      	ldr	r2, [r7, #24]
 8003580:	4013      	ands	r3, r2
 8003582:	61bb      	str	r3, [r7, #24]
 8003584:	683b      	ldr	r3, [r7, #0]
 8003586:	685b      	ldr	r3, [r3, #4]
 8003588:	091b      	lsrs	r3, r3, #4
 800358a:	f003 0201 	and.w	r2, r3, #1
 800358e:	69fb      	ldr	r3, [r7, #28]
 8003590:	fa02 f303 	lsl.w	r3, r2, r3
 8003594:	69ba      	ldr	r2, [r7, #24]
 8003596:	4313      	orrs	r3, r2
 8003598:	61bb      	str	r3, [r7, #24]
 800359a:	687b      	ldr	r3, [r7, #4]
 800359c:	69ba      	ldr	r2, [r7, #24]
 800359e:	605a      	str	r2, [r3, #4]
 80035a0:	683b      	ldr	r3, [r7, #0]
 80035a2:	685b      	ldr	r3, [r3, #4]
 80035a4:	f003 0303 	and.w	r3, r3, #3
 80035a8:	2b03      	cmp	r3, #3
 80035aa:	d017      	beq.n	80035dc <HAL_GPIO_Init+0xf0>
 80035ac:	687b      	ldr	r3, [r7, #4]
 80035ae:	68db      	ldr	r3, [r3, #12]
 80035b0:	61bb      	str	r3, [r7, #24]
 80035b2:	69fb      	ldr	r3, [r7, #28]
 80035b4:	005b      	lsls	r3, r3, #1
 80035b6:	2203      	movs	r2, #3
 80035b8:	fa02 f303 	lsl.w	r3, r2, r3
 80035bc:	43db      	mvns	r3, r3
 80035be:	69ba      	ldr	r2, [r7, #24]
 80035c0:	4013      	ands	r3, r2
 80035c2:	61bb      	str	r3, [r7, #24]
 80035c4:	683b      	ldr	r3, [r7, #0]
 80035c6:	689a      	ldr	r2, [r3, #8]
 80035c8:	69fb      	ldr	r3, [r7, #28]
 80035ca:	005b      	lsls	r3, r3, #1
 80035cc:	fa02 f303 	lsl.w	r3, r2, r3
 80035d0:	69ba      	ldr	r2, [r7, #24]
 80035d2:	4313      	orrs	r3, r2
 80035d4:	61bb      	str	r3, [r7, #24]
 80035d6:	687b      	ldr	r3, [r7, #4]
 80035d8:	69ba      	ldr	r2, [r7, #24]
 80035da:	60da      	str	r2, [r3, #12]
 80035dc:	683b      	ldr	r3, [r7, #0]
 80035de:	685b      	ldr	r3, [r3, #4]
 80035e0:	f003 0303 	and.w	r3, r3, #3
 80035e4:	2b02      	cmp	r3, #2
 80035e6:	d123      	bne.n	8003630 <HAL_GPIO_Init+0x144>
 80035e8:	69fb      	ldr	r3, [r7, #28]
 80035ea:	08da      	lsrs	r2, r3, #3
 80035ec:	687b      	ldr	r3, [r7, #4]
 80035ee:	3208      	adds	r2, #8
 80035f0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80035f4:	61bb      	str	r3, [r7, #24]
 80035f6:	69fb      	ldr	r3, [r7, #28]
 80035f8:	f003 0307 	and.w	r3, r3, #7
 80035fc:	009b      	lsls	r3, r3, #2
 80035fe:	220f      	movs	r2, #15
 8003600:	fa02 f303 	lsl.w	r3, r2, r3
 8003604:	43db      	mvns	r3, r3
 8003606:	69ba      	ldr	r2, [r7, #24]
 8003608:	4013      	ands	r3, r2
 800360a:	61bb      	str	r3, [r7, #24]
 800360c:	683b      	ldr	r3, [r7, #0]
 800360e:	691a      	ldr	r2, [r3, #16]
 8003610:	69fb      	ldr	r3, [r7, #28]
 8003612:	f003 0307 	and.w	r3, r3, #7
 8003616:	009b      	lsls	r3, r3, #2
 8003618:	fa02 f303 	lsl.w	r3, r2, r3
 800361c:	69ba      	ldr	r2, [r7, #24]
 800361e:	4313      	orrs	r3, r2
 8003620:	61bb      	str	r3, [r7, #24]
 8003622:	69fb      	ldr	r3, [r7, #28]
 8003624:	08da      	lsrs	r2, r3, #3
 8003626:	687b      	ldr	r3, [r7, #4]
 8003628:	3208      	adds	r2, #8
 800362a:	69b9      	ldr	r1, [r7, #24]
 800362c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003630:	687b      	ldr	r3, [r7, #4]
 8003632:	681b      	ldr	r3, [r3, #0]
 8003634:	61bb      	str	r3, [r7, #24]
 8003636:	69fb      	ldr	r3, [r7, #28]
 8003638:	005b      	lsls	r3, r3, #1
 800363a:	2203      	movs	r2, #3
 800363c:	fa02 f303 	lsl.w	r3, r2, r3
 8003640:	43db      	mvns	r3, r3
 8003642:	69ba      	ldr	r2, [r7, #24]
 8003644:	4013      	ands	r3, r2
 8003646:	61bb      	str	r3, [r7, #24]
 8003648:	683b      	ldr	r3, [r7, #0]
 800364a:	685b      	ldr	r3, [r3, #4]
 800364c:	f003 0203 	and.w	r2, r3, #3
 8003650:	69fb      	ldr	r3, [r7, #28]
 8003652:	005b      	lsls	r3, r3, #1
 8003654:	fa02 f303 	lsl.w	r3, r2, r3
 8003658:	69ba      	ldr	r2, [r7, #24]
 800365a:	4313      	orrs	r3, r2
 800365c:	61bb      	str	r3, [r7, #24]
 800365e:	687b      	ldr	r3, [r7, #4]
 8003660:	69ba      	ldr	r2, [r7, #24]
 8003662:	601a      	str	r2, [r3, #0]
 8003664:	683b      	ldr	r3, [r7, #0]
 8003666:	685b      	ldr	r3, [r3, #4]
 8003668:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 800366c:	2b00      	cmp	r3, #0
 800366e:	f000 80ae 	beq.w	80037ce <HAL_GPIO_Init+0x2e2>
 8003672:	2300      	movs	r3, #0
 8003674:	60fb      	str	r3, [r7, #12]
 8003676:	4b5d      	ldr	r3, [pc, #372]	@ (80037ec <HAL_GPIO_Init+0x300>)
 8003678:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800367a:	4a5c      	ldr	r2, [pc, #368]	@ (80037ec <HAL_GPIO_Init+0x300>)
 800367c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8003680:	6453      	str	r3, [r2, #68]	@ 0x44
 8003682:	4b5a      	ldr	r3, [pc, #360]	@ (80037ec <HAL_GPIO_Init+0x300>)
 8003684:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003686:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800368a:	60fb      	str	r3, [r7, #12]
 800368c:	68fb      	ldr	r3, [r7, #12]
 800368e:	4a58      	ldr	r2, [pc, #352]	@ (80037f0 <HAL_GPIO_Init+0x304>)
 8003690:	69fb      	ldr	r3, [r7, #28]
 8003692:	089b      	lsrs	r3, r3, #2
 8003694:	3302      	adds	r3, #2
 8003696:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800369a:	61bb      	str	r3, [r7, #24]
 800369c:	69fb      	ldr	r3, [r7, #28]
 800369e:	f003 0303 	and.w	r3, r3, #3
 80036a2:	009b      	lsls	r3, r3, #2
 80036a4:	220f      	movs	r2, #15
 80036a6:	fa02 f303 	lsl.w	r3, r2, r3
 80036aa:	43db      	mvns	r3, r3
 80036ac:	69ba      	ldr	r2, [r7, #24]
 80036ae:	4013      	ands	r3, r2
 80036b0:	61bb      	str	r3, [r7, #24]
 80036b2:	687b      	ldr	r3, [r7, #4]
 80036b4:	4a4f      	ldr	r2, [pc, #316]	@ (80037f4 <HAL_GPIO_Init+0x308>)
 80036b6:	4293      	cmp	r3, r2
 80036b8:	d025      	beq.n	8003706 <HAL_GPIO_Init+0x21a>
 80036ba:	687b      	ldr	r3, [r7, #4]
 80036bc:	4a4e      	ldr	r2, [pc, #312]	@ (80037f8 <HAL_GPIO_Init+0x30c>)
 80036be:	4293      	cmp	r3, r2
 80036c0:	d01f      	beq.n	8003702 <HAL_GPIO_Init+0x216>
 80036c2:	687b      	ldr	r3, [r7, #4]
 80036c4:	4a4d      	ldr	r2, [pc, #308]	@ (80037fc <HAL_GPIO_Init+0x310>)
 80036c6:	4293      	cmp	r3, r2
 80036c8:	d019      	beq.n	80036fe <HAL_GPIO_Init+0x212>
 80036ca:	687b      	ldr	r3, [r7, #4]
 80036cc:	4a4c      	ldr	r2, [pc, #304]	@ (8003800 <HAL_GPIO_Init+0x314>)
 80036ce:	4293      	cmp	r3, r2
 80036d0:	d013      	beq.n	80036fa <HAL_GPIO_Init+0x20e>
 80036d2:	687b      	ldr	r3, [r7, #4]
 80036d4:	4a4b      	ldr	r2, [pc, #300]	@ (8003804 <HAL_GPIO_Init+0x318>)
 80036d6:	4293      	cmp	r3, r2
 80036d8:	d00d      	beq.n	80036f6 <HAL_GPIO_Init+0x20a>
 80036da:	687b      	ldr	r3, [r7, #4]
 80036dc:	4a4a      	ldr	r2, [pc, #296]	@ (8003808 <HAL_GPIO_Init+0x31c>)
 80036de:	4293      	cmp	r3, r2
 80036e0:	d007      	beq.n	80036f2 <HAL_GPIO_Init+0x206>
 80036e2:	687b      	ldr	r3, [r7, #4]
 80036e4:	4a49      	ldr	r2, [pc, #292]	@ (800380c <HAL_GPIO_Init+0x320>)
 80036e6:	4293      	cmp	r3, r2
 80036e8:	d101      	bne.n	80036ee <HAL_GPIO_Init+0x202>
 80036ea:	2306      	movs	r3, #6
 80036ec:	e00c      	b.n	8003708 <HAL_GPIO_Init+0x21c>
 80036ee:	2307      	movs	r3, #7
 80036f0:	e00a      	b.n	8003708 <HAL_GPIO_Init+0x21c>
 80036f2:	2305      	movs	r3, #5
 80036f4:	e008      	b.n	8003708 <HAL_GPIO_Init+0x21c>
 80036f6:	2304      	movs	r3, #4
 80036f8:	e006      	b.n	8003708 <HAL_GPIO_Init+0x21c>
 80036fa:	2303      	movs	r3, #3
 80036fc:	e004      	b.n	8003708 <HAL_GPIO_Init+0x21c>
 80036fe:	2302      	movs	r3, #2
 8003700:	e002      	b.n	8003708 <HAL_GPIO_Init+0x21c>
 8003702:	2301      	movs	r3, #1
 8003704:	e000      	b.n	8003708 <HAL_GPIO_Init+0x21c>
 8003706:	2300      	movs	r3, #0
 8003708:	69fa      	ldr	r2, [r7, #28]
 800370a:	f002 0203 	and.w	r2, r2, #3
 800370e:	0092      	lsls	r2, r2, #2
 8003710:	4093      	lsls	r3, r2
 8003712:	69ba      	ldr	r2, [r7, #24]
 8003714:	4313      	orrs	r3, r2
 8003716:	61bb      	str	r3, [r7, #24]
 8003718:	4935      	ldr	r1, [pc, #212]	@ (80037f0 <HAL_GPIO_Init+0x304>)
 800371a:	69fb      	ldr	r3, [r7, #28]
 800371c:	089b      	lsrs	r3, r3, #2
 800371e:	3302      	adds	r3, #2
 8003720:	69ba      	ldr	r2, [r7, #24]
 8003722:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003726:	4b3a      	ldr	r3, [pc, #232]	@ (8003810 <HAL_GPIO_Init+0x324>)
 8003728:	689b      	ldr	r3, [r3, #8]
 800372a:	61bb      	str	r3, [r7, #24]
 800372c:	693b      	ldr	r3, [r7, #16]
 800372e:	43db      	mvns	r3, r3
 8003730:	69ba      	ldr	r2, [r7, #24]
 8003732:	4013      	ands	r3, r2
 8003734:	61bb      	str	r3, [r7, #24]
 8003736:	683b      	ldr	r3, [r7, #0]
 8003738:	685b      	ldr	r3, [r3, #4]
 800373a:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800373e:	2b00      	cmp	r3, #0
 8003740:	d003      	beq.n	800374a <HAL_GPIO_Init+0x25e>
 8003742:	69ba      	ldr	r2, [r7, #24]
 8003744:	693b      	ldr	r3, [r7, #16]
 8003746:	4313      	orrs	r3, r2
 8003748:	61bb      	str	r3, [r7, #24]
 800374a:	4a31      	ldr	r2, [pc, #196]	@ (8003810 <HAL_GPIO_Init+0x324>)
 800374c:	69bb      	ldr	r3, [r7, #24]
 800374e:	6093      	str	r3, [r2, #8]
 8003750:	4b2f      	ldr	r3, [pc, #188]	@ (8003810 <HAL_GPIO_Init+0x324>)
 8003752:	68db      	ldr	r3, [r3, #12]
 8003754:	61bb      	str	r3, [r7, #24]
 8003756:	693b      	ldr	r3, [r7, #16]
 8003758:	43db      	mvns	r3, r3
 800375a:	69ba      	ldr	r2, [r7, #24]
 800375c:	4013      	ands	r3, r2
 800375e:	61bb      	str	r3, [r7, #24]
 8003760:	683b      	ldr	r3, [r7, #0]
 8003762:	685b      	ldr	r3, [r3, #4]
 8003764:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8003768:	2b00      	cmp	r3, #0
 800376a:	d003      	beq.n	8003774 <HAL_GPIO_Init+0x288>
 800376c:	69ba      	ldr	r2, [r7, #24]
 800376e:	693b      	ldr	r3, [r7, #16]
 8003770:	4313      	orrs	r3, r2
 8003772:	61bb      	str	r3, [r7, #24]
 8003774:	4a26      	ldr	r2, [pc, #152]	@ (8003810 <HAL_GPIO_Init+0x324>)
 8003776:	69bb      	ldr	r3, [r7, #24]
 8003778:	60d3      	str	r3, [r2, #12]
 800377a:	4b25      	ldr	r3, [pc, #148]	@ (8003810 <HAL_GPIO_Init+0x324>)
 800377c:	685b      	ldr	r3, [r3, #4]
 800377e:	61bb      	str	r3, [r7, #24]
 8003780:	693b      	ldr	r3, [r7, #16]
 8003782:	43db      	mvns	r3, r3
 8003784:	69ba      	ldr	r2, [r7, #24]
 8003786:	4013      	ands	r3, r2
 8003788:	61bb      	str	r3, [r7, #24]
 800378a:	683b      	ldr	r3, [r7, #0]
 800378c:	685b      	ldr	r3, [r3, #4]
 800378e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003792:	2b00      	cmp	r3, #0
 8003794:	d003      	beq.n	800379e <HAL_GPIO_Init+0x2b2>
 8003796:	69ba      	ldr	r2, [r7, #24]
 8003798:	693b      	ldr	r3, [r7, #16]
 800379a:	4313      	orrs	r3, r2
 800379c:	61bb      	str	r3, [r7, #24]
 800379e:	4a1c      	ldr	r2, [pc, #112]	@ (8003810 <HAL_GPIO_Init+0x324>)
 80037a0:	69bb      	ldr	r3, [r7, #24]
 80037a2:	6053      	str	r3, [r2, #4]
 80037a4:	4b1a      	ldr	r3, [pc, #104]	@ (8003810 <HAL_GPIO_Init+0x324>)
 80037a6:	681b      	ldr	r3, [r3, #0]
 80037a8:	61bb      	str	r3, [r7, #24]
 80037aa:	693b      	ldr	r3, [r7, #16]
 80037ac:	43db      	mvns	r3, r3
 80037ae:	69ba      	ldr	r2, [r7, #24]
 80037b0:	4013      	ands	r3, r2
 80037b2:	61bb      	str	r3, [r7, #24]
 80037b4:	683b      	ldr	r3, [r7, #0]
 80037b6:	685b      	ldr	r3, [r3, #4]
 80037b8:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80037bc:	2b00      	cmp	r3, #0
 80037be:	d003      	beq.n	80037c8 <HAL_GPIO_Init+0x2dc>
 80037c0:	69ba      	ldr	r2, [r7, #24]
 80037c2:	693b      	ldr	r3, [r7, #16]
 80037c4:	4313      	orrs	r3, r2
 80037c6:	61bb      	str	r3, [r7, #24]
 80037c8:	4a11      	ldr	r2, [pc, #68]	@ (8003810 <HAL_GPIO_Init+0x324>)
 80037ca:	69bb      	ldr	r3, [r7, #24]
 80037cc:	6013      	str	r3, [r2, #0]
 80037ce:	69fb      	ldr	r3, [r7, #28]
 80037d0:	3301      	adds	r3, #1
 80037d2:	61fb      	str	r3, [r7, #28]
 80037d4:	69fb      	ldr	r3, [r7, #28]
 80037d6:	2b0f      	cmp	r3, #15
 80037d8:	f67f ae96 	bls.w	8003508 <HAL_GPIO_Init+0x1c>
 80037dc:	bf00      	nop
 80037de:	bf00      	nop
 80037e0:	3724      	adds	r7, #36	@ 0x24
 80037e2:	46bd      	mov	sp, r7
 80037e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037e8:	4770      	bx	lr
 80037ea:	bf00      	nop
 80037ec:	40023800 	.word	0x40023800
 80037f0:	40013800 	.word	0x40013800
 80037f4:	40020000 	.word	0x40020000
 80037f8:	40020400 	.word	0x40020400
 80037fc:	40020800 	.word	0x40020800
 8003800:	40020c00 	.word	0x40020c00
 8003804:	40021000 	.word	0x40021000
 8003808:	40021400 	.word	0x40021400
 800380c:	40021800 	.word	0x40021800
 8003810:	40013c00 	.word	0x40013c00

08003814 <HAL_GPIO_WritePin>:
 8003814:	b480      	push	{r7}
 8003816:	b083      	sub	sp, #12
 8003818:	af00      	add	r7, sp, #0
 800381a:	6078      	str	r0, [r7, #4]
 800381c:	460b      	mov	r3, r1
 800381e:	807b      	strh	r3, [r7, #2]
 8003820:	4613      	mov	r3, r2
 8003822:	707b      	strb	r3, [r7, #1]
 8003824:	787b      	ldrb	r3, [r7, #1]
 8003826:	2b00      	cmp	r3, #0
 8003828:	d003      	beq.n	8003832 <HAL_GPIO_WritePin+0x1e>
 800382a:	887a      	ldrh	r2, [r7, #2]
 800382c:	687b      	ldr	r3, [r7, #4]
 800382e:	619a      	str	r2, [r3, #24]
 8003830:	e003      	b.n	800383a <HAL_GPIO_WritePin+0x26>
 8003832:	887b      	ldrh	r3, [r7, #2]
 8003834:	041a      	lsls	r2, r3, #16
 8003836:	687b      	ldr	r3, [r7, #4]
 8003838:	619a      	str	r2, [r3, #24]
 800383a:	bf00      	nop
 800383c:	370c      	adds	r7, #12
 800383e:	46bd      	mov	sp, r7
 8003840:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003844:	4770      	bx	lr

08003846 <HAL_GPIO_TogglePin>:
 8003846:	b480      	push	{r7}
 8003848:	b085      	sub	sp, #20
 800384a:	af00      	add	r7, sp, #0
 800384c:	6078      	str	r0, [r7, #4]
 800384e:	460b      	mov	r3, r1
 8003850:	807b      	strh	r3, [r7, #2]
 8003852:	687b      	ldr	r3, [r7, #4]
 8003854:	695b      	ldr	r3, [r3, #20]
 8003856:	60fb      	str	r3, [r7, #12]
 8003858:	887a      	ldrh	r2, [r7, #2]
 800385a:	68fb      	ldr	r3, [r7, #12]
 800385c:	4013      	ands	r3, r2
 800385e:	041a      	lsls	r2, r3, #16
 8003860:	68fb      	ldr	r3, [r7, #12]
 8003862:	43d9      	mvns	r1, r3
 8003864:	887b      	ldrh	r3, [r7, #2]
 8003866:	400b      	ands	r3, r1
 8003868:	431a      	orrs	r2, r3
 800386a:	687b      	ldr	r3, [r7, #4]
 800386c:	619a      	str	r2, [r3, #24]
 800386e:	bf00      	nop
 8003870:	3714      	adds	r7, #20
 8003872:	46bd      	mov	sp, r7
 8003874:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003878:	4770      	bx	lr
	...

0800387c <HAL_GPIO_EXTI_IRQHandler>:
 800387c:	b580      	push	{r7, lr}
 800387e:	b082      	sub	sp, #8
 8003880:	af00      	add	r7, sp, #0
 8003882:	4603      	mov	r3, r0
 8003884:	80fb      	strh	r3, [r7, #6]
 8003886:	4b08      	ldr	r3, [pc, #32]	@ (80038a8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8003888:	695a      	ldr	r2, [r3, #20]
 800388a:	88fb      	ldrh	r3, [r7, #6]
 800388c:	4013      	ands	r3, r2
 800388e:	2b00      	cmp	r3, #0
 8003890:	d006      	beq.n	80038a0 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8003892:	4a05      	ldr	r2, [pc, #20]	@ (80038a8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8003894:	88fb      	ldrh	r3, [r7, #6]
 8003896:	6153      	str	r3, [r2, #20]
 8003898:	88fb      	ldrh	r3, [r7, #6]
 800389a:	4618      	mov	r0, r3
 800389c:	f7fe f9de 	bl	8001c5c <HAL_GPIO_EXTI_Callback>
 80038a0:	bf00      	nop
 80038a2:	3708      	adds	r7, #8
 80038a4:	46bd      	mov	sp, r7
 80038a6:	bd80      	pop	{r7, pc}
 80038a8:	40013c00 	.word	0x40013c00

080038ac <HAL_RCC_ClockConfig>:
 80038ac:	b580      	push	{r7, lr}
 80038ae:	b084      	sub	sp, #16
 80038b0:	af00      	add	r7, sp, #0
 80038b2:	6078      	str	r0, [r7, #4]
 80038b4:	6039      	str	r1, [r7, #0]
 80038b6:	687b      	ldr	r3, [r7, #4]
 80038b8:	2b00      	cmp	r3, #0
 80038ba:	d101      	bne.n	80038c0 <HAL_RCC_ClockConfig+0x14>
 80038bc:	2301      	movs	r3, #1
 80038be:	e0cc      	b.n	8003a5a <HAL_RCC_ClockConfig+0x1ae>
 80038c0:	4b68      	ldr	r3, [pc, #416]	@ (8003a64 <HAL_RCC_ClockConfig+0x1b8>)
 80038c2:	681b      	ldr	r3, [r3, #0]
 80038c4:	f003 030f 	and.w	r3, r3, #15
 80038c8:	683a      	ldr	r2, [r7, #0]
 80038ca:	429a      	cmp	r2, r3
 80038cc:	d90c      	bls.n	80038e8 <HAL_RCC_ClockConfig+0x3c>
 80038ce:	4b65      	ldr	r3, [pc, #404]	@ (8003a64 <HAL_RCC_ClockConfig+0x1b8>)
 80038d0:	683a      	ldr	r2, [r7, #0]
 80038d2:	b2d2      	uxtb	r2, r2
 80038d4:	701a      	strb	r2, [r3, #0]
 80038d6:	4b63      	ldr	r3, [pc, #396]	@ (8003a64 <HAL_RCC_ClockConfig+0x1b8>)
 80038d8:	681b      	ldr	r3, [r3, #0]
 80038da:	f003 030f 	and.w	r3, r3, #15
 80038de:	683a      	ldr	r2, [r7, #0]
 80038e0:	429a      	cmp	r2, r3
 80038e2:	d001      	beq.n	80038e8 <HAL_RCC_ClockConfig+0x3c>
 80038e4:	2301      	movs	r3, #1
 80038e6:	e0b8      	b.n	8003a5a <HAL_RCC_ClockConfig+0x1ae>
 80038e8:	687b      	ldr	r3, [r7, #4]
 80038ea:	681b      	ldr	r3, [r3, #0]
 80038ec:	f003 0302 	and.w	r3, r3, #2
 80038f0:	2b00      	cmp	r3, #0
 80038f2:	d020      	beq.n	8003936 <HAL_RCC_ClockConfig+0x8a>
 80038f4:	687b      	ldr	r3, [r7, #4]
 80038f6:	681b      	ldr	r3, [r3, #0]
 80038f8:	f003 0304 	and.w	r3, r3, #4
 80038fc:	2b00      	cmp	r3, #0
 80038fe:	d005      	beq.n	800390c <HAL_RCC_ClockConfig+0x60>
 8003900:	4b59      	ldr	r3, [pc, #356]	@ (8003a68 <HAL_RCC_ClockConfig+0x1bc>)
 8003902:	689b      	ldr	r3, [r3, #8]
 8003904:	4a58      	ldr	r2, [pc, #352]	@ (8003a68 <HAL_RCC_ClockConfig+0x1bc>)
 8003906:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 800390a:	6093      	str	r3, [r2, #8]
 800390c:	687b      	ldr	r3, [r7, #4]
 800390e:	681b      	ldr	r3, [r3, #0]
 8003910:	f003 0308 	and.w	r3, r3, #8
 8003914:	2b00      	cmp	r3, #0
 8003916:	d005      	beq.n	8003924 <HAL_RCC_ClockConfig+0x78>
 8003918:	4b53      	ldr	r3, [pc, #332]	@ (8003a68 <HAL_RCC_ClockConfig+0x1bc>)
 800391a:	689b      	ldr	r3, [r3, #8]
 800391c:	4a52      	ldr	r2, [pc, #328]	@ (8003a68 <HAL_RCC_ClockConfig+0x1bc>)
 800391e:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8003922:	6093      	str	r3, [r2, #8]
 8003924:	4b50      	ldr	r3, [pc, #320]	@ (8003a68 <HAL_RCC_ClockConfig+0x1bc>)
 8003926:	689b      	ldr	r3, [r3, #8]
 8003928:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 800392c:	687b      	ldr	r3, [r7, #4]
 800392e:	689b      	ldr	r3, [r3, #8]
 8003930:	494d      	ldr	r1, [pc, #308]	@ (8003a68 <HAL_RCC_ClockConfig+0x1bc>)
 8003932:	4313      	orrs	r3, r2
 8003934:	608b      	str	r3, [r1, #8]
 8003936:	687b      	ldr	r3, [r7, #4]
 8003938:	681b      	ldr	r3, [r3, #0]
 800393a:	f003 0301 	and.w	r3, r3, #1
 800393e:	2b00      	cmp	r3, #0
 8003940:	d044      	beq.n	80039cc <HAL_RCC_ClockConfig+0x120>
 8003942:	687b      	ldr	r3, [r7, #4]
 8003944:	685b      	ldr	r3, [r3, #4]
 8003946:	2b01      	cmp	r3, #1
 8003948:	d107      	bne.n	800395a <HAL_RCC_ClockConfig+0xae>
 800394a:	4b47      	ldr	r3, [pc, #284]	@ (8003a68 <HAL_RCC_ClockConfig+0x1bc>)
 800394c:	681b      	ldr	r3, [r3, #0]
 800394e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003952:	2b00      	cmp	r3, #0
 8003954:	d119      	bne.n	800398a <HAL_RCC_ClockConfig+0xde>
 8003956:	2301      	movs	r3, #1
 8003958:	e07f      	b.n	8003a5a <HAL_RCC_ClockConfig+0x1ae>
 800395a:	687b      	ldr	r3, [r7, #4]
 800395c:	685b      	ldr	r3, [r3, #4]
 800395e:	2b02      	cmp	r3, #2
 8003960:	d003      	beq.n	800396a <HAL_RCC_ClockConfig+0xbe>
 8003962:	687b      	ldr	r3, [r7, #4]
 8003964:	685b      	ldr	r3, [r3, #4]
 8003966:	2b03      	cmp	r3, #3
 8003968:	d107      	bne.n	800397a <HAL_RCC_ClockConfig+0xce>
 800396a:	4b3f      	ldr	r3, [pc, #252]	@ (8003a68 <HAL_RCC_ClockConfig+0x1bc>)
 800396c:	681b      	ldr	r3, [r3, #0]
 800396e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003972:	2b00      	cmp	r3, #0
 8003974:	d109      	bne.n	800398a <HAL_RCC_ClockConfig+0xde>
 8003976:	2301      	movs	r3, #1
 8003978:	e06f      	b.n	8003a5a <HAL_RCC_ClockConfig+0x1ae>
 800397a:	4b3b      	ldr	r3, [pc, #236]	@ (8003a68 <HAL_RCC_ClockConfig+0x1bc>)
 800397c:	681b      	ldr	r3, [r3, #0]
 800397e:	f003 0302 	and.w	r3, r3, #2
 8003982:	2b00      	cmp	r3, #0
 8003984:	d101      	bne.n	800398a <HAL_RCC_ClockConfig+0xde>
 8003986:	2301      	movs	r3, #1
 8003988:	e067      	b.n	8003a5a <HAL_RCC_ClockConfig+0x1ae>
 800398a:	4b37      	ldr	r3, [pc, #220]	@ (8003a68 <HAL_RCC_ClockConfig+0x1bc>)
 800398c:	689b      	ldr	r3, [r3, #8]
 800398e:	f023 0203 	bic.w	r2, r3, #3
 8003992:	687b      	ldr	r3, [r7, #4]
 8003994:	685b      	ldr	r3, [r3, #4]
 8003996:	4934      	ldr	r1, [pc, #208]	@ (8003a68 <HAL_RCC_ClockConfig+0x1bc>)
 8003998:	4313      	orrs	r3, r2
 800399a:	608b      	str	r3, [r1, #8]
 800399c:	f7fe fdfa 	bl	8002594 <HAL_GetTick>
 80039a0:	60f8      	str	r0, [r7, #12]
 80039a2:	e00a      	b.n	80039ba <HAL_RCC_ClockConfig+0x10e>
 80039a4:	f7fe fdf6 	bl	8002594 <HAL_GetTick>
 80039a8:	4602      	mov	r2, r0
 80039aa:	68fb      	ldr	r3, [r7, #12]
 80039ac:	1ad3      	subs	r3, r2, r3
 80039ae:	f241 3288 	movw	r2, #5000	@ 0x1388
 80039b2:	4293      	cmp	r3, r2
 80039b4:	d901      	bls.n	80039ba <HAL_RCC_ClockConfig+0x10e>
 80039b6:	2303      	movs	r3, #3
 80039b8:	e04f      	b.n	8003a5a <HAL_RCC_ClockConfig+0x1ae>
 80039ba:	4b2b      	ldr	r3, [pc, #172]	@ (8003a68 <HAL_RCC_ClockConfig+0x1bc>)
 80039bc:	689b      	ldr	r3, [r3, #8]
 80039be:	f003 020c 	and.w	r2, r3, #12
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	685b      	ldr	r3, [r3, #4]
 80039c6:	009b      	lsls	r3, r3, #2
 80039c8:	429a      	cmp	r2, r3
 80039ca:	d1eb      	bne.n	80039a4 <HAL_RCC_ClockConfig+0xf8>
 80039cc:	4b25      	ldr	r3, [pc, #148]	@ (8003a64 <HAL_RCC_ClockConfig+0x1b8>)
 80039ce:	681b      	ldr	r3, [r3, #0]
 80039d0:	f003 030f 	and.w	r3, r3, #15
 80039d4:	683a      	ldr	r2, [r7, #0]
 80039d6:	429a      	cmp	r2, r3
 80039d8:	d20c      	bcs.n	80039f4 <HAL_RCC_ClockConfig+0x148>
 80039da:	4b22      	ldr	r3, [pc, #136]	@ (8003a64 <HAL_RCC_ClockConfig+0x1b8>)
 80039dc:	683a      	ldr	r2, [r7, #0]
 80039de:	b2d2      	uxtb	r2, r2
 80039e0:	701a      	strb	r2, [r3, #0]
 80039e2:	4b20      	ldr	r3, [pc, #128]	@ (8003a64 <HAL_RCC_ClockConfig+0x1b8>)
 80039e4:	681b      	ldr	r3, [r3, #0]
 80039e6:	f003 030f 	and.w	r3, r3, #15
 80039ea:	683a      	ldr	r2, [r7, #0]
 80039ec:	429a      	cmp	r2, r3
 80039ee:	d001      	beq.n	80039f4 <HAL_RCC_ClockConfig+0x148>
 80039f0:	2301      	movs	r3, #1
 80039f2:	e032      	b.n	8003a5a <HAL_RCC_ClockConfig+0x1ae>
 80039f4:	687b      	ldr	r3, [r7, #4]
 80039f6:	681b      	ldr	r3, [r3, #0]
 80039f8:	f003 0304 	and.w	r3, r3, #4
 80039fc:	2b00      	cmp	r3, #0
 80039fe:	d008      	beq.n	8003a12 <HAL_RCC_ClockConfig+0x166>
 8003a00:	4b19      	ldr	r3, [pc, #100]	@ (8003a68 <HAL_RCC_ClockConfig+0x1bc>)
 8003a02:	689b      	ldr	r3, [r3, #8]
 8003a04:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8003a08:	687b      	ldr	r3, [r7, #4]
 8003a0a:	68db      	ldr	r3, [r3, #12]
 8003a0c:	4916      	ldr	r1, [pc, #88]	@ (8003a68 <HAL_RCC_ClockConfig+0x1bc>)
 8003a0e:	4313      	orrs	r3, r2
 8003a10:	608b      	str	r3, [r1, #8]
 8003a12:	687b      	ldr	r3, [r7, #4]
 8003a14:	681b      	ldr	r3, [r3, #0]
 8003a16:	f003 0308 	and.w	r3, r3, #8
 8003a1a:	2b00      	cmp	r3, #0
 8003a1c:	d009      	beq.n	8003a32 <HAL_RCC_ClockConfig+0x186>
 8003a1e:	4b12      	ldr	r3, [pc, #72]	@ (8003a68 <HAL_RCC_ClockConfig+0x1bc>)
 8003a20:	689b      	ldr	r3, [r3, #8]
 8003a22:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8003a26:	687b      	ldr	r3, [r7, #4]
 8003a28:	691b      	ldr	r3, [r3, #16]
 8003a2a:	00db      	lsls	r3, r3, #3
 8003a2c:	490e      	ldr	r1, [pc, #56]	@ (8003a68 <HAL_RCC_ClockConfig+0x1bc>)
 8003a2e:	4313      	orrs	r3, r2
 8003a30:	608b      	str	r3, [r1, #8]
 8003a32:	f000 f855 	bl	8003ae0 <HAL_RCC_GetSysClockFreq>
 8003a36:	4602      	mov	r2, r0
 8003a38:	4b0b      	ldr	r3, [pc, #44]	@ (8003a68 <HAL_RCC_ClockConfig+0x1bc>)
 8003a3a:	689b      	ldr	r3, [r3, #8]
 8003a3c:	091b      	lsrs	r3, r3, #4
 8003a3e:	f003 030f 	and.w	r3, r3, #15
 8003a42:	490a      	ldr	r1, [pc, #40]	@ (8003a6c <HAL_RCC_ClockConfig+0x1c0>)
 8003a44:	5ccb      	ldrb	r3, [r1, r3]
 8003a46:	fa22 f303 	lsr.w	r3, r2, r3
 8003a4a:	4a09      	ldr	r2, [pc, #36]	@ (8003a70 <HAL_RCC_ClockConfig+0x1c4>)
 8003a4c:	6013      	str	r3, [r2, #0]
 8003a4e:	4b09      	ldr	r3, [pc, #36]	@ (8003a74 <HAL_RCC_ClockConfig+0x1c8>)
 8003a50:	681b      	ldr	r3, [r3, #0]
 8003a52:	4618      	mov	r0, r3
 8003a54:	f7fe fd5a 	bl	800250c <HAL_InitTick>
 8003a58:	2300      	movs	r3, #0
 8003a5a:	4618      	mov	r0, r3
 8003a5c:	3710      	adds	r7, #16
 8003a5e:	46bd      	mov	sp, r7
 8003a60:	bd80      	pop	{r7, pc}
 8003a62:	bf00      	nop
 8003a64:	40023c00 	.word	0x40023c00
 8003a68:	40023800 	.word	0x40023800
 8003a6c:	08008ad8 	.word	0x08008ad8
 8003a70:	20000008 	.word	0x20000008
 8003a74:	2000000c 	.word	0x2000000c

08003a78 <HAL_RCC_GetHCLKFreq>:
 8003a78:	b480      	push	{r7}
 8003a7a:	af00      	add	r7, sp, #0
 8003a7c:	4b03      	ldr	r3, [pc, #12]	@ (8003a8c <HAL_RCC_GetHCLKFreq+0x14>)
 8003a7e:	681b      	ldr	r3, [r3, #0]
 8003a80:	4618      	mov	r0, r3
 8003a82:	46bd      	mov	sp, r7
 8003a84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a88:	4770      	bx	lr
 8003a8a:	bf00      	nop
 8003a8c:	20000008 	.word	0x20000008

08003a90 <HAL_RCC_GetPCLK1Freq>:
 8003a90:	b580      	push	{r7, lr}
 8003a92:	af00      	add	r7, sp, #0
 8003a94:	f7ff fff0 	bl	8003a78 <HAL_RCC_GetHCLKFreq>
 8003a98:	4602      	mov	r2, r0
 8003a9a:	4b05      	ldr	r3, [pc, #20]	@ (8003ab0 <HAL_RCC_GetPCLK1Freq+0x20>)
 8003a9c:	689b      	ldr	r3, [r3, #8]
 8003a9e:	0a9b      	lsrs	r3, r3, #10
 8003aa0:	f003 0307 	and.w	r3, r3, #7
 8003aa4:	4903      	ldr	r1, [pc, #12]	@ (8003ab4 <HAL_RCC_GetPCLK1Freq+0x24>)
 8003aa6:	5ccb      	ldrb	r3, [r1, r3]
 8003aa8:	fa22 f303 	lsr.w	r3, r2, r3
 8003aac:	4618      	mov	r0, r3
 8003aae:	bd80      	pop	{r7, pc}
 8003ab0:	40023800 	.word	0x40023800
 8003ab4:	08008ae8 	.word	0x08008ae8

08003ab8 <HAL_RCC_GetPCLK2Freq>:
 8003ab8:	b580      	push	{r7, lr}
 8003aba:	af00      	add	r7, sp, #0
 8003abc:	f7ff ffdc 	bl	8003a78 <HAL_RCC_GetHCLKFreq>
 8003ac0:	4602      	mov	r2, r0
 8003ac2:	4b05      	ldr	r3, [pc, #20]	@ (8003ad8 <HAL_RCC_GetPCLK2Freq+0x20>)
 8003ac4:	689b      	ldr	r3, [r3, #8]
 8003ac6:	0b5b      	lsrs	r3, r3, #13
 8003ac8:	f003 0307 	and.w	r3, r3, #7
 8003acc:	4903      	ldr	r1, [pc, #12]	@ (8003adc <HAL_RCC_GetPCLK2Freq+0x24>)
 8003ace:	5ccb      	ldrb	r3, [r1, r3]
 8003ad0:	fa22 f303 	lsr.w	r3, r2, r3
 8003ad4:	4618      	mov	r0, r3
 8003ad6:	bd80      	pop	{r7, pc}
 8003ad8:	40023800 	.word	0x40023800
 8003adc:	08008ae8 	.word	0x08008ae8

08003ae0 <HAL_RCC_GetSysClockFreq>:
 8003ae0:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8003ae4:	b0ae      	sub	sp, #184	@ 0xb8
 8003ae6:	af00      	add	r7, sp, #0
 8003ae8:	2300      	movs	r3, #0
 8003aea:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8003aee:	2300      	movs	r3, #0
 8003af0:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8003af4:	2300      	movs	r3, #0
 8003af6:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8003afa:	2300      	movs	r3, #0
 8003afc:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8003b00:	2300      	movs	r3, #0
 8003b02:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8003b06:	4bcb      	ldr	r3, [pc, #812]	@ (8003e34 <HAL_RCC_GetSysClockFreq+0x354>)
 8003b08:	689b      	ldr	r3, [r3, #8]
 8003b0a:	f003 030c 	and.w	r3, r3, #12
 8003b0e:	2b0c      	cmp	r3, #12
 8003b10:	f200 8204 	bhi.w	8003f1c <HAL_RCC_GetSysClockFreq+0x43c>
 8003b14:	a201      	add	r2, pc, #4	@ (adr r2, 8003b1c <HAL_RCC_GetSysClockFreq+0x3c>)
 8003b16:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003b1a:	bf00      	nop
 8003b1c:	08003b51 	.word	0x08003b51
 8003b20:	08003f1d 	.word	0x08003f1d
 8003b24:	08003f1d 	.word	0x08003f1d
 8003b28:	08003f1d 	.word	0x08003f1d
 8003b2c:	08003b59 	.word	0x08003b59
 8003b30:	08003f1d 	.word	0x08003f1d
 8003b34:	08003f1d 	.word	0x08003f1d
 8003b38:	08003f1d 	.word	0x08003f1d
 8003b3c:	08003b61 	.word	0x08003b61
 8003b40:	08003f1d 	.word	0x08003f1d
 8003b44:	08003f1d 	.word	0x08003f1d
 8003b48:	08003f1d 	.word	0x08003f1d
 8003b4c:	08003d51 	.word	0x08003d51
 8003b50:	4bb9      	ldr	r3, [pc, #740]	@ (8003e38 <HAL_RCC_GetSysClockFreq+0x358>)
 8003b52:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8003b56:	e1e5      	b.n	8003f24 <HAL_RCC_GetSysClockFreq+0x444>
 8003b58:	4bb7      	ldr	r3, [pc, #732]	@ (8003e38 <HAL_RCC_GetSysClockFreq+0x358>)
 8003b5a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8003b5e:	e1e1      	b.n	8003f24 <HAL_RCC_GetSysClockFreq+0x444>
 8003b60:	4bb4      	ldr	r3, [pc, #720]	@ (8003e34 <HAL_RCC_GetSysClockFreq+0x354>)
 8003b62:	685b      	ldr	r3, [r3, #4]
 8003b64:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8003b68:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8003b6c:	4bb1      	ldr	r3, [pc, #708]	@ (8003e34 <HAL_RCC_GetSysClockFreq+0x354>)
 8003b6e:	685b      	ldr	r3, [r3, #4]
 8003b70:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003b74:	2b00      	cmp	r3, #0
 8003b76:	d071      	beq.n	8003c5c <HAL_RCC_GetSysClockFreq+0x17c>
 8003b78:	4bae      	ldr	r3, [pc, #696]	@ (8003e34 <HAL_RCC_GetSysClockFreq+0x354>)
 8003b7a:	685b      	ldr	r3, [r3, #4]
 8003b7c:	099b      	lsrs	r3, r3, #6
 8003b7e:	2200      	movs	r2, #0
 8003b80:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8003b84:	f8c7 209c 	str.w	r2, [r7, #156]	@ 0x9c
 8003b88:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8003b8c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003b90:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8003b94:	2300      	movs	r3, #0
 8003b96:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8003b9a:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8003b9e:	4622      	mov	r2, r4
 8003ba0:	462b      	mov	r3, r5
 8003ba2:	f04f 0000 	mov.w	r0, #0
 8003ba6:	f04f 0100 	mov.w	r1, #0
 8003baa:	0159      	lsls	r1, r3, #5
 8003bac:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8003bb0:	0150      	lsls	r0, r2, #5
 8003bb2:	4602      	mov	r2, r0
 8003bb4:	460b      	mov	r3, r1
 8003bb6:	4621      	mov	r1, r4
 8003bb8:	1a51      	subs	r1, r2, r1
 8003bba:	6439      	str	r1, [r7, #64]	@ 0x40
 8003bbc:	4629      	mov	r1, r5
 8003bbe:	eb63 0301 	sbc.w	r3, r3, r1
 8003bc2:	647b      	str	r3, [r7, #68]	@ 0x44
 8003bc4:	f04f 0200 	mov.w	r2, #0
 8003bc8:	f04f 0300 	mov.w	r3, #0
 8003bcc:	e9d7 8910 	ldrd	r8, r9, [r7, #64]	@ 0x40
 8003bd0:	4649      	mov	r1, r9
 8003bd2:	018b      	lsls	r3, r1, #6
 8003bd4:	4641      	mov	r1, r8
 8003bd6:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8003bda:	4641      	mov	r1, r8
 8003bdc:	018a      	lsls	r2, r1, #6
 8003bde:	4641      	mov	r1, r8
 8003be0:	1a51      	subs	r1, r2, r1
 8003be2:	63b9      	str	r1, [r7, #56]	@ 0x38
 8003be4:	4649      	mov	r1, r9
 8003be6:	eb63 0301 	sbc.w	r3, r3, r1
 8003bea:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003bec:	f04f 0200 	mov.w	r2, #0
 8003bf0:	f04f 0300 	mov.w	r3, #0
 8003bf4:	e9d7 890e 	ldrd	r8, r9, [r7, #56]	@ 0x38
 8003bf8:	4649      	mov	r1, r9
 8003bfa:	00cb      	lsls	r3, r1, #3
 8003bfc:	4641      	mov	r1, r8
 8003bfe:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8003c02:	4641      	mov	r1, r8
 8003c04:	00ca      	lsls	r2, r1, #3
 8003c06:	4610      	mov	r0, r2
 8003c08:	4619      	mov	r1, r3
 8003c0a:	4603      	mov	r3, r0
 8003c0c:	4622      	mov	r2, r4
 8003c0e:	189b      	adds	r3, r3, r2
 8003c10:	633b      	str	r3, [r7, #48]	@ 0x30
 8003c12:	462b      	mov	r3, r5
 8003c14:	460a      	mov	r2, r1
 8003c16:	eb42 0303 	adc.w	r3, r2, r3
 8003c1a:	637b      	str	r3, [r7, #52]	@ 0x34
 8003c1c:	f04f 0200 	mov.w	r2, #0
 8003c20:	f04f 0300 	mov.w	r3, #0
 8003c24:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 8003c28:	4629      	mov	r1, r5
 8003c2a:	028b      	lsls	r3, r1, #10
 8003c2c:	4621      	mov	r1, r4
 8003c2e:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8003c32:	4621      	mov	r1, r4
 8003c34:	028a      	lsls	r2, r1, #10
 8003c36:	4610      	mov	r0, r2
 8003c38:	4619      	mov	r1, r3
 8003c3a:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8003c3e:	2200      	movs	r2, #0
 8003c40:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8003c44:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8003c48:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 8003c4c:	f7fd f81c 	bl	8000c88 <__aeabi_uldivmod>
 8003c50:	4602      	mov	r2, r0
 8003c52:	460b      	mov	r3, r1
 8003c54:	4613      	mov	r3, r2
 8003c56:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8003c5a:	e067      	b.n	8003d2c <HAL_RCC_GetSysClockFreq+0x24c>
 8003c5c:	4b75      	ldr	r3, [pc, #468]	@ (8003e34 <HAL_RCC_GetSysClockFreq+0x354>)
 8003c5e:	685b      	ldr	r3, [r3, #4]
 8003c60:	099b      	lsrs	r3, r3, #6
 8003c62:	2200      	movs	r2, #0
 8003c64:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8003c68:	f8c7 2084 	str.w	r2, [r7, #132]	@ 0x84
 8003c6c:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8003c70:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003c74:	67bb      	str	r3, [r7, #120]	@ 0x78
 8003c76:	2300      	movs	r3, #0
 8003c78:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8003c7a:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	@ 0x78
 8003c7e:	4622      	mov	r2, r4
 8003c80:	462b      	mov	r3, r5
 8003c82:	f04f 0000 	mov.w	r0, #0
 8003c86:	f04f 0100 	mov.w	r1, #0
 8003c8a:	0159      	lsls	r1, r3, #5
 8003c8c:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8003c90:	0150      	lsls	r0, r2, #5
 8003c92:	4602      	mov	r2, r0
 8003c94:	460b      	mov	r3, r1
 8003c96:	4621      	mov	r1, r4
 8003c98:	1a51      	subs	r1, r2, r1
 8003c9a:	62b9      	str	r1, [r7, #40]	@ 0x28
 8003c9c:	4629      	mov	r1, r5
 8003c9e:	eb63 0301 	sbc.w	r3, r3, r1
 8003ca2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003ca4:	f04f 0200 	mov.w	r2, #0
 8003ca8:	f04f 0300 	mov.w	r3, #0
 8003cac:	e9d7 890a 	ldrd	r8, r9, [r7, #40]	@ 0x28
 8003cb0:	4649      	mov	r1, r9
 8003cb2:	018b      	lsls	r3, r1, #6
 8003cb4:	4641      	mov	r1, r8
 8003cb6:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8003cba:	4641      	mov	r1, r8
 8003cbc:	018a      	lsls	r2, r1, #6
 8003cbe:	4641      	mov	r1, r8
 8003cc0:	ebb2 0a01 	subs.w	sl, r2, r1
 8003cc4:	4649      	mov	r1, r9
 8003cc6:	eb63 0b01 	sbc.w	fp, r3, r1
 8003cca:	f04f 0200 	mov.w	r2, #0
 8003cce:	f04f 0300 	mov.w	r3, #0
 8003cd2:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8003cd6:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8003cda:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8003cde:	4692      	mov	sl, r2
 8003ce0:	469b      	mov	fp, r3
 8003ce2:	4623      	mov	r3, r4
 8003ce4:	eb1a 0303 	adds.w	r3, sl, r3
 8003ce8:	623b      	str	r3, [r7, #32]
 8003cea:	462b      	mov	r3, r5
 8003cec:	eb4b 0303 	adc.w	r3, fp, r3
 8003cf0:	627b      	str	r3, [r7, #36]	@ 0x24
 8003cf2:	f04f 0200 	mov.w	r2, #0
 8003cf6:	f04f 0300 	mov.w	r3, #0
 8003cfa:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 8003cfe:	4629      	mov	r1, r5
 8003d00:	028b      	lsls	r3, r1, #10
 8003d02:	4621      	mov	r1, r4
 8003d04:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8003d08:	4621      	mov	r1, r4
 8003d0a:	028a      	lsls	r2, r1, #10
 8003d0c:	4610      	mov	r0, r2
 8003d0e:	4619      	mov	r1, r3
 8003d10:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8003d14:	2200      	movs	r2, #0
 8003d16:	673b      	str	r3, [r7, #112]	@ 0x70
 8003d18:	677a      	str	r2, [r7, #116]	@ 0x74
 8003d1a:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 8003d1e:	f7fc ffb3 	bl	8000c88 <__aeabi_uldivmod>
 8003d22:	4602      	mov	r2, r0
 8003d24:	460b      	mov	r3, r1
 8003d26:	4613      	mov	r3, r2
 8003d28:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8003d2c:	4b41      	ldr	r3, [pc, #260]	@ (8003e34 <HAL_RCC_GetSysClockFreq+0x354>)
 8003d2e:	685b      	ldr	r3, [r3, #4]
 8003d30:	0c1b      	lsrs	r3, r3, #16
 8003d32:	f003 0303 	and.w	r3, r3, #3
 8003d36:	3301      	adds	r3, #1
 8003d38:	005b      	lsls	r3, r3, #1
 8003d3a:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8003d3e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8003d42:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8003d46:	fbb2 f3f3 	udiv	r3, r2, r3
 8003d4a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8003d4e:	e0e9      	b.n	8003f24 <HAL_RCC_GetSysClockFreq+0x444>
 8003d50:	4b38      	ldr	r3, [pc, #224]	@ (8003e34 <HAL_RCC_GetSysClockFreq+0x354>)
 8003d52:	685b      	ldr	r3, [r3, #4]
 8003d54:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8003d58:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8003d5c:	4b35      	ldr	r3, [pc, #212]	@ (8003e34 <HAL_RCC_GetSysClockFreq+0x354>)
 8003d5e:	685b      	ldr	r3, [r3, #4]
 8003d60:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003d64:	2b00      	cmp	r3, #0
 8003d66:	d069      	beq.n	8003e3c <HAL_RCC_GetSysClockFreq+0x35c>
 8003d68:	4b32      	ldr	r3, [pc, #200]	@ (8003e34 <HAL_RCC_GetSysClockFreq+0x354>)
 8003d6a:	685b      	ldr	r3, [r3, #4]
 8003d6c:	099b      	lsrs	r3, r3, #6
 8003d6e:	2200      	movs	r2, #0
 8003d70:	66bb      	str	r3, [r7, #104]	@ 0x68
 8003d72:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8003d74:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8003d76:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003d7a:	663b      	str	r3, [r7, #96]	@ 0x60
 8003d7c:	2300      	movs	r3, #0
 8003d7e:	667b      	str	r3, [r7, #100]	@ 0x64
 8003d80:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 8003d84:	4622      	mov	r2, r4
 8003d86:	462b      	mov	r3, r5
 8003d88:	f04f 0000 	mov.w	r0, #0
 8003d8c:	f04f 0100 	mov.w	r1, #0
 8003d90:	0159      	lsls	r1, r3, #5
 8003d92:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8003d96:	0150      	lsls	r0, r2, #5
 8003d98:	4602      	mov	r2, r0
 8003d9a:	460b      	mov	r3, r1
 8003d9c:	4621      	mov	r1, r4
 8003d9e:	1a51      	subs	r1, r2, r1
 8003da0:	61b9      	str	r1, [r7, #24]
 8003da2:	4629      	mov	r1, r5
 8003da4:	eb63 0301 	sbc.w	r3, r3, r1
 8003da8:	61fb      	str	r3, [r7, #28]
 8003daa:	f04f 0200 	mov.w	r2, #0
 8003dae:	f04f 0300 	mov.w	r3, #0
 8003db2:	e9d7 ab06 	ldrd	sl, fp, [r7, #24]
 8003db6:	4659      	mov	r1, fp
 8003db8:	018b      	lsls	r3, r1, #6
 8003dba:	4651      	mov	r1, sl
 8003dbc:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8003dc0:	4651      	mov	r1, sl
 8003dc2:	018a      	lsls	r2, r1, #6
 8003dc4:	4651      	mov	r1, sl
 8003dc6:	ebb2 0801 	subs.w	r8, r2, r1
 8003dca:	4659      	mov	r1, fp
 8003dcc:	eb63 0901 	sbc.w	r9, r3, r1
 8003dd0:	f04f 0200 	mov.w	r2, #0
 8003dd4:	f04f 0300 	mov.w	r3, #0
 8003dd8:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8003ddc:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8003de0:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8003de4:	4690      	mov	r8, r2
 8003de6:	4699      	mov	r9, r3
 8003de8:	4623      	mov	r3, r4
 8003dea:	eb18 0303 	adds.w	r3, r8, r3
 8003dee:	613b      	str	r3, [r7, #16]
 8003df0:	462b      	mov	r3, r5
 8003df2:	eb49 0303 	adc.w	r3, r9, r3
 8003df6:	617b      	str	r3, [r7, #20]
 8003df8:	f04f 0200 	mov.w	r2, #0
 8003dfc:	f04f 0300 	mov.w	r3, #0
 8003e00:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 8003e04:	4629      	mov	r1, r5
 8003e06:	028b      	lsls	r3, r1, #10
 8003e08:	4621      	mov	r1, r4
 8003e0a:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8003e0e:	4621      	mov	r1, r4
 8003e10:	028a      	lsls	r2, r1, #10
 8003e12:	4610      	mov	r0, r2
 8003e14:	4619      	mov	r1, r3
 8003e16:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8003e1a:	2200      	movs	r2, #0
 8003e1c:	65bb      	str	r3, [r7, #88]	@ 0x58
 8003e1e:	65fa      	str	r2, [r7, #92]	@ 0x5c
 8003e20:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8003e24:	f7fc ff30 	bl	8000c88 <__aeabi_uldivmod>
 8003e28:	4602      	mov	r2, r0
 8003e2a:	460b      	mov	r3, r1
 8003e2c:	4613      	mov	r3, r2
 8003e2e:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8003e32:	e063      	b.n	8003efc <HAL_RCC_GetSysClockFreq+0x41c>
 8003e34:	40023800 	.word	0x40023800
 8003e38:	00f42400 	.word	0x00f42400
 8003e3c:	4b3d      	ldr	r3, [pc, #244]	@ (8003f34 <HAL_RCC_GetSysClockFreq+0x454>)
 8003e3e:	685b      	ldr	r3, [r3, #4]
 8003e40:	099b      	lsrs	r3, r3, #6
 8003e42:	2200      	movs	r2, #0
 8003e44:	4618      	mov	r0, r3
 8003e46:	4611      	mov	r1, r2
 8003e48:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8003e4c:	653b      	str	r3, [r7, #80]	@ 0x50
 8003e4e:	2300      	movs	r3, #0
 8003e50:	657b      	str	r3, [r7, #84]	@ 0x54
 8003e52:	e9d7 8914 	ldrd	r8, r9, [r7, #80]	@ 0x50
 8003e56:	4642      	mov	r2, r8
 8003e58:	464b      	mov	r3, r9
 8003e5a:	f04f 0000 	mov.w	r0, #0
 8003e5e:	f04f 0100 	mov.w	r1, #0
 8003e62:	0159      	lsls	r1, r3, #5
 8003e64:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8003e68:	0150      	lsls	r0, r2, #5
 8003e6a:	4602      	mov	r2, r0
 8003e6c:	460b      	mov	r3, r1
 8003e6e:	4641      	mov	r1, r8
 8003e70:	1a51      	subs	r1, r2, r1
 8003e72:	60b9      	str	r1, [r7, #8]
 8003e74:	4649      	mov	r1, r9
 8003e76:	eb63 0301 	sbc.w	r3, r3, r1
 8003e7a:	60fb      	str	r3, [r7, #12]
 8003e7c:	f04f 0200 	mov.w	r2, #0
 8003e80:	f04f 0300 	mov.w	r3, #0
 8003e84:	e9d7 ab02 	ldrd	sl, fp, [r7, #8]
 8003e88:	4659      	mov	r1, fp
 8003e8a:	018b      	lsls	r3, r1, #6
 8003e8c:	4651      	mov	r1, sl
 8003e8e:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8003e92:	4651      	mov	r1, sl
 8003e94:	018a      	lsls	r2, r1, #6
 8003e96:	4651      	mov	r1, sl
 8003e98:	1a54      	subs	r4, r2, r1
 8003e9a:	4659      	mov	r1, fp
 8003e9c:	eb63 0501 	sbc.w	r5, r3, r1
 8003ea0:	f04f 0200 	mov.w	r2, #0
 8003ea4:	f04f 0300 	mov.w	r3, #0
 8003ea8:	00eb      	lsls	r3, r5, #3
 8003eaa:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8003eae:	00e2      	lsls	r2, r4, #3
 8003eb0:	4614      	mov	r4, r2
 8003eb2:	461d      	mov	r5, r3
 8003eb4:	4643      	mov	r3, r8
 8003eb6:	18e3      	adds	r3, r4, r3
 8003eb8:	603b      	str	r3, [r7, #0]
 8003eba:	464b      	mov	r3, r9
 8003ebc:	eb45 0303 	adc.w	r3, r5, r3
 8003ec0:	607b      	str	r3, [r7, #4]
 8003ec2:	f04f 0200 	mov.w	r2, #0
 8003ec6:	f04f 0300 	mov.w	r3, #0
 8003eca:	e9d7 4500 	ldrd	r4, r5, [r7]
 8003ece:	4629      	mov	r1, r5
 8003ed0:	028b      	lsls	r3, r1, #10
 8003ed2:	4621      	mov	r1, r4
 8003ed4:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8003ed8:	4621      	mov	r1, r4
 8003eda:	028a      	lsls	r2, r1, #10
 8003edc:	4610      	mov	r0, r2
 8003ede:	4619      	mov	r1, r3
 8003ee0:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8003ee4:	2200      	movs	r2, #0
 8003ee6:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003ee8:	64fa      	str	r2, [r7, #76]	@ 0x4c
 8003eea:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8003eee:	f7fc fecb 	bl	8000c88 <__aeabi_uldivmod>
 8003ef2:	4602      	mov	r2, r0
 8003ef4:	460b      	mov	r3, r1
 8003ef6:	4613      	mov	r3, r2
 8003ef8:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8003efc:	4b0d      	ldr	r3, [pc, #52]	@ (8003f34 <HAL_RCC_GetSysClockFreq+0x454>)
 8003efe:	685b      	ldr	r3, [r3, #4]
 8003f00:	0f1b      	lsrs	r3, r3, #28
 8003f02:	f003 0307 	and.w	r3, r3, #7
 8003f06:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8003f0a:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8003f0e:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8003f12:	fbb2 f3f3 	udiv	r3, r2, r3
 8003f16:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8003f1a:	e003      	b.n	8003f24 <HAL_RCC_GetSysClockFreq+0x444>
 8003f1c:	4b06      	ldr	r3, [pc, #24]	@ (8003f38 <HAL_RCC_GetSysClockFreq+0x458>)
 8003f1e:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8003f22:	bf00      	nop
 8003f24:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 8003f28:	4618      	mov	r0, r3
 8003f2a:	37b8      	adds	r7, #184	@ 0xb8
 8003f2c:	46bd      	mov	sp, r7
 8003f2e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8003f32:	bf00      	nop
 8003f34:	40023800 	.word	0x40023800
 8003f38:	00f42400 	.word	0x00f42400

08003f3c <HAL_RCC_OscConfig>:
 8003f3c:	b580      	push	{r7, lr}
 8003f3e:	b086      	sub	sp, #24
 8003f40:	af00      	add	r7, sp, #0
 8003f42:	6078      	str	r0, [r7, #4]
 8003f44:	687b      	ldr	r3, [r7, #4]
 8003f46:	2b00      	cmp	r3, #0
 8003f48:	d101      	bne.n	8003f4e <HAL_RCC_OscConfig+0x12>
 8003f4a:	2301      	movs	r3, #1
 8003f4c:	e28d      	b.n	800446a <HAL_RCC_OscConfig+0x52e>
 8003f4e:	687b      	ldr	r3, [r7, #4]
 8003f50:	681b      	ldr	r3, [r3, #0]
 8003f52:	f003 0301 	and.w	r3, r3, #1
 8003f56:	2b00      	cmp	r3, #0
 8003f58:	f000 8083 	beq.w	8004062 <HAL_RCC_OscConfig+0x126>
 8003f5c:	4b94      	ldr	r3, [pc, #592]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 8003f5e:	689b      	ldr	r3, [r3, #8]
 8003f60:	f003 030c 	and.w	r3, r3, #12
 8003f64:	2b04      	cmp	r3, #4
 8003f66:	d019      	beq.n	8003f9c <HAL_RCC_OscConfig+0x60>
 8003f68:	4b91      	ldr	r3, [pc, #580]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 8003f6a:	689b      	ldr	r3, [r3, #8]
 8003f6c:	f003 030c 	and.w	r3, r3, #12
 8003f70:	2b08      	cmp	r3, #8
 8003f72:	d106      	bne.n	8003f82 <HAL_RCC_OscConfig+0x46>
 8003f74:	4b8e      	ldr	r3, [pc, #568]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 8003f76:	685b      	ldr	r3, [r3, #4]
 8003f78:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003f7c:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8003f80:	d00c      	beq.n	8003f9c <HAL_RCC_OscConfig+0x60>
 8003f82:	4b8b      	ldr	r3, [pc, #556]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 8003f84:	689b      	ldr	r3, [r3, #8]
 8003f86:	f003 030c 	and.w	r3, r3, #12
 8003f8a:	2b0c      	cmp	r3, #12
 8003f8c:	d112      	bne.n	8003fb4 <HAL_RCC_OscConfig+0x78>
 8003f8e:	4b88      	ldr	r3, [pc, #544]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 8003f90:	685b      	ldr	r3, [r3, #4]
 8003f92:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003f96:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8003f9a:	d10b      	bne.n	8003fb4 <HAL_RCC_OscConfig+0x78>
 8003f9c:	4b84      	ldr	r3, [pc, #528]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 8003f9e:	681b      	ldr	r3, [r3, #0]
 8003fa0:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003fa4:	2b00      	cmp	r3, #0
 8003fa6:	d05b      	beq.n	8004060 <HAL_RCC_OscConfig+0x124>
 8003fa8:	687b      	ldr	r3, [r7, #4]
 8003faa:	685b      	ldr	r3, [r3, #4]
 8003fac:	2b00      	cmp	r3, #0
 8003fae:	d157      	bne.n	8004060 <HAL_RCC_OscConfig+0x124>
 8003fb0:	2301      	movs	r3, #1
 8003fb2:	e25a      	b.n	800446a <HAL_RCC_OscConfig+0x52e>
 8003fb4:	687b      	ldr	r3, [r7, #4]
 8003fb6:	685b      	ldr	r3, [r3, #4]
 8003fb8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003fbc:	d106      	bne.n	8003fcc <HAL_RCC_OscConfig+0x90>
 8003fbe:	4b7c      	ldr	r3, [pc, #496]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 8003fc0:	681b      	ldr	r3, [r3, #0]
 8003fc2:	4a7b      	ldr	r2, [pc, #492]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 8003fc4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003fc8:	6013      	str	r3, [r2, #0]
 8003fca:	e01d      	b.n	8004008 <HAL_RCC_OscConfig+0xcc>
 8003fcc:	687b      	ldr	r3, [r7, #4]
 8003fce:	685b      	ldr	r3, [r3, #4]
 8003fd0:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8003fd4:	d10c      	bne.n	8003ff0 <HAL_RCC_OscConfig+0xb4>
 8003fd6:	4b76      	ldr	r3, [pc, #472]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 8003fd8:	681b      	ldr	r3, [r3, #0]
 8003fda:	4a75      	ldr	r2, [pc, #468]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 8003fdc:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8003fe0:	6013      	str	r3, [r2, #0]
 8003fe2:	4b73      	ldr	r3, [pc, #460]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 8003fe4:	681b      	ldr	r3, [r3, #0]
 8003fe6:	4a72      	ldr	r2, [pc, #456]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 8003fe8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003fec:	6013      	str	r3, [r2, #0]
 8003fee:	e00b      	b.n	8004008 <HAL_RCC_OscConfig+0xcc>
 8003ff0:	4b6f      	ldr	r3, [pc, #444]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 8003ff2:	681b      	ldr	r3, [r3, #0]
 8003ff4:	4a6e      	ldr	r2, [pc, #440]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 8003ff6:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8003ffa:	6013      	str	r3, [r2, #0]
 8003ffc:	4b6c      	ldr	r3, [pc, #432]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 8003ffe:	681b      	ldr	r3, [r3, #0]
 8004000:	4a6b      	ldr	r2, [pc, #428]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 8004002:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8004006:	6013      	str	r3, [r2, #0]
 8004008:	687b      	ldr	r3, [r7, #4]
 800400a:	685b      	ldr	r3, [r3, #4]
 800400c:	2b00      	cmp	r3, #0
 800400e:	d013      	beq.n	8004038 <HAL_RCC_OscConfig+0xfc>
 8004010:	f7fe fac0 	bl	8002594 <HAL_GetTick>
 8004014:	6138      	str	r0, [r7, #16]
 8004016:	e008      	b.n	800402a <HAL_RCC_OscConfig+0xee>
 8004018:	f7fe fabc 	bl	8002594 <HAL_GetTick>
 800401c:	4602      	mov	r2, r0
 800401e:	693b      	ldr	r3, [r7, #16]
 8004020:	1ad3      	subs	r3, r2, r3
 8004022:	2b64      	cmp	r3, #100	@ 0x64
 8004024:	d901      	bls.n	800402a <HAL_RCC_OscConfig+0xee>
 8004026:	2303      	movs	r3, #3
 8004028:	e21f      	b.n	800446a <HAL_RCC_OscConfig+0x52e>
 800402a:	4b61      	ldr	r3, [pc, #388]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 800402c:	681b      	ldr	r3, [r3, #0]
 800402e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004032:	2b00      	cmp	r3, #0
 8004034:	d0f0      	beq.n	8004018 <HAL_RCC_OscConfig+0xdc>
 8004036:	e014      	b.n	8004062 <HAL_RCC_OscConfig+0x126>
 8004038:	f7fe faac 	bl	8002594 <HAL_GetTick>
 800403c:	6138      	str	r0, [r7, #16]
 800403e:	e008      	b.n	8004052 <HAL_RCC_OscConfig+0x116>
 8004040:	f7fe faa8 	bl	8002594 <HAL_GetTick>
 8004044:	4602      	mov	r2, r0
 8004046:	693b      	ldr	r3, [r7, #16]
 8004048:	1ad3      	subs	r3, r2, r3
 800404a:	2b64      	cmp	r3, #100	@ 0x64
 800404c:	d901      	bls.n	8004052 <HAL_RCC_OscConfig+0x116>
 800404e:	2303      	movs	r3, #3
 8004050:	e20b      	b.n	800446a <HAL_RCC_OscConfig+0x52e>
 8004052:	4b57      	ldr	r3, [pc, #348]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 8004054:	681b      	ldr	r3, [r3, #0]
 8004056:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800405a:	2b00      	cmp	r3, #0
 800405c:	d1f0      	bne.n	8004040 <HAL_RCC_OscConfig+0x104>
 800405e:	e000      	b.n	8004062 <HAL_RCC_OscConfig+0x126>
 8004060:	bf00      	nop
 8004062:	687b      	ldr	r3, [r7, #4]
 8004064:	681b      	ldr	r3, [r3, #0]
 8004066:	f003 0302 	and.w	r3, r3, #2
 800406a:	2b00      	cmp	r3, #0
 800406c:	d06f      	beq.n	800414e <HAL_RCC_OscConfig+0x212>
 800406e:	4b50      	ldr	r3, [pc, #320]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 8004070:	689b      	ldr	r3, [r3, #8]
 8004072:	f003 030c 	and.w	r3, r3, #12
 8004076:	2b00      	cmp	r3, #0
 8004078:	d017      	beq.n	80040aa <HAL_RCC_OscConfig+0x16e>
 800407a:	4b4d      	ldr	r3, [pc, #308]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 800407c:	689b      	ldr	r3, [r3, #8]
 800407e:	f003 030c 	and.w	r3, r3, #12
 8004082:	2b08      	cmp	r3, #8
 8004084:	d105      	bne.n	8004092 <HAL_RCC_OscConfig+0x156>
 8004086:	4b4a      	ldr	r3, [pc, #296]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 8004088:	685b      	ldr	r3, [r3, #4]
 800408a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800408e:	2b00      	cmp	r3, #0
 8004090:	d00b      	beq.n	80040aa <HAL_RCC_OscConfig+0x16e>
 8004092:	4b47      	ldr	r3, [pc, #284]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 8004094:	689b      	ldr	r3, [r3, #8]
 8004096:	f003 030c 	and.w	r3, r3, #12
 800409a:	2b0c      	cmp	r3, #12
 800409c:	d11c      	bne.n	80040d8 <HAL_RCC_OscConfig+0x19c>
 800409e:	4b44      	ldr	r3, [pc, #272]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 80040a0:	685b      	ldr	r3, [r3, #4]
 80040a2:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80040a6:	2b00      	cmp	r3, #0
 80040a8:	d116      	bne.n	80040d8 <HAL_RCC_OscConfig+0x19c>
 80040aa:	4b41      	ldr	r3, [pc, #260]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 80040ac:	681b      	ldr	r3, [r3, #0]
 80040ae:	f003 0302 	and.w	r3, r3, #2
 80040b2:	2b00      	cmp	r3, #0
 80040b4:	d005      	beq.n	80040c2 <HAL_RCC_OscConfig+0x186>
 80040b6:	687b      	ldr	r3, [r7, #4]
 80040b8:	68db      	ldr	r3, [r3, #12]
 80040ba:	2b01      	cmp	r3, #1
 80040bc:	d001      	beq.n	80040c2 <HAL_RCC_OscConfig+0x186>
 80040be:	2301      	movs	r3, #1
 80040c0:	e1d3      	b.n	800446a <HAL_RCC_OscConfig+0x52e>
 80040c2:	4b3b      	ldr	r3, [pc, #236]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 80040c4:	681b      	ldr	r3, [r3, #0]
 80040c6:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80040ca:	687b      	ldr	r3, [r7, #4]
 80040cc:	691b      	ldr	r3, [r3, #16]
 80040ce:	00db      	lsls	r3, r3, #3
 80040d0:	4937      	ldr	r1, [pc, #220]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 80040d2:	4313      	orrs	r3, r2
 80040d4:	600b      	str	r3, [r1, #0]
 80040d6:	e03a      	b.n	800414e <HAL_RCC_OscConfig+0x212>
 80040d8:	687b      	ldr	r3, [r7, #4]
 80040da:	68db      	ldr	r3, [r3, #12]
 80040dc:	2b00      	cmp	r3, #0
 80040de:	d020      	beq.n	8004122 <HAL_RCC_OscConfig+0x1e6>
 80040e0:	4b34      	ldr	r3, [pc, #208]	@ (80041b4 <HAL_RCC_OscConfig+0x278>)
 80040e2:	2201      	movs	r2, #1
 80040e4:	601a      	str	r2, [r3, #0]
 80040e6:	f7fe fa55 	bl	8002594 <HAL_GetTick>
 80040ea:	6138      	str	r0, [r7, #16]
 80040ec:	e008      	b.n	8004100 <HAL_RCC_OscConfig+0x1c4>
 80040ee:	f7fe fa51 	bl	8002594 <HAL_GetTick>
 80040f2:	4602      	mov	r2, r0
 80040f4:	693b      	ldr	r3, [r7, #16]
 80040f6:	1ad3      	subs	r3, r2, r3
 80040f8:	2b02      	cmp	r3, #2
 80040fa:	d901      	bls.n	8004100 <HAL_RCC_OscConfig+0x1c4>
 80040fc:	2303      	movs	r3, #3
 80040fe:	e1b4      	b.n	800446a <HAL_RCC_OscConfig+0x52e>
 8004100:	4b2b      	ldr	r3, [pc, #172]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 8004102:	681b      	ldr	r3, [r3, #0]
 8004104:	f003 0302 	and.w	r3, r3, #2
 8004108:	2b00      	cmp	r3, #0
 800410a:	d0f0      	beq.n	80040ee <HAL_RCC_OscConfig+0x1b2>
 800410c:	4b28      	ldr	r3, [pc, #160]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 800410e:	681b      	ldr	r3, [r3, #0]
 8004110:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8004114:	687b      	ldr	r3, [r7, #4]
 8004116:	691b      	ldr	r3, [r3, #16]
 8004118:	00db      	lsls	r3, r3, #3
 800411a:	4925      	ldr	r1, [pc, #148]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 800411c:	4313      	orrs	r3, r2
 800411e:	600b      	str	r3, [r1, #0]
 8004120:	e015      	b.n	800414e <HAL_RCC_OscConfig+0x212>
 8004122:	4b24      	ldr	r3, [pc, #144]	@ (80041b4 <HAL_RCC_OscConfig+0x278>)
 8004124:	2200      	movs	r2, #0
 8004126:	601a      	str	r2, [r3, #0]
 8004128:	f7fe fa34 	bl	8002594 <HAL_GetTick>
 800412c:	6138      	str	r0, [r7, #16]
 800412e:	e008      	b.n	8004142 <HAL_RCC_OscConfig+0x206>
 8004130:	f7fe fa30 	bl	8002594 <HAL_GetTick>
 8004134:	4602      	mov	r2, r0
 8004136:	693b      	ldr	r3, [r7, #16]
 8004138:	1ad3      	subs	r3, r2, r3
 800413a:	2b02      	cmp	r3, #2
 800413c:	d901      	bls.n	8004142 <HAL_RCC_OscConfig+0x206>
 800413e:	2303      	movs	r3, #3
 8004140:	e193      	b.n	800446a <HAL_RCC_OscConfig+0x52e>
 8004142:	4b1b      	ldr	r3, [pc, #108]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 8004144:	681b      	ldr	r3, [r3, #0]
 8004146:	f003 0302 	and.w	r3, r3, #2
 800414a:	2b00      	cmp	r3, #0
 800414c:	d1f0      	bne.n	8004130 <HAL_RCC_OscConfig+0x1f4>
 800414e:	687b      	ldr	r3, [r7, #4]
 8004150:	681b      	ldr	r3, [r3, #0]
 8004152:	f003 0308 	and.w	r3, r3, #8
 8004156:	2b00      	cmp	r3, #0
 8004158:	d036      	beq.n	80041c8 <HAL_RCC_OscConfig+0x28c>
 800415a:	687b      	ldr	r3, [r7, #4]
 800415c:	695b      	ldr	r3, [r3, #20]
 800415e:	2b00      	cmp	r3, #0
 8004160:	d016      	beq.n	8004190 <HAL_RCC_OscConfig+0x254>
 8004162:	4b15      	ldr	r3, [pc, #84]	@ (80041b8 <HAL_RCC_OscConfig+0x27c>)
 8004164:	2201      	movs	r2, #1
 8004166:	601a      	str	r2, [r3, #0]
 8004168:	f7fe fa14 	bl	8002594 <HAL_GetTick>
 800416c:	6138      	str	r0, [r7, #16]
 800416e:	e008      	b.n	8004182 <HAL_RCC_OscConfig+0x246>
 8004170:	f7fe fa10 	bl	8002594 <HAL_GetTick>
 8004174:	4602      	mov	r2, r0
 8004176:	693b      	ldr	r3, [r7, #16]
 8004178:	1ad3      	subs	r3, r2, r3
 800417a:	2b02      	cmp	r3, #2
 800417c:	d901      	bls.n	8004182 <HAL_RCC_OscConfig+0x246>
 800417e:	2303      	movs	r3, #3
 8004180:	e173      	b.n	800446a <HAL_RCC_OscConfig+0x52e>
 8004182:	4b0b      	ldr	r3, [pc, #44]	@ (80041b0 <HAL_RCC_OscConfig+0x274>)
 8004184:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004186:	f003 0302 	and.w	r3, r3, #2
 800418a:	2b00      	cmp	r3, #0
 800418c:	d0f0      	beq.n	8004170 <HAL_RCC_OscConfig+0x234>
 800418e:	e01b      	b.n	80041c8 <HAL_RCC_OscConfig+0x28c>
 8004190:	4b09      	ldr	r3, [pc, #36]	@ (80041b8 <HAL_RCC_OscConfig+0x27c>)
 8004192:	2200      	movs	r2, #0
 8004194:	601a      	str	r2, [r3, #0]
 8004196:	f7fe f9fd 	bl	8002594 <HAL_GetTick>
 800419a:	6138      	str	r0, [r7, #16]
 800419c:	e00e      	b.n	80041bc <HAL_RCC_OscConfig+0x280>
 800419e:	f7fe f9f9 	bl	8002594 <HAL_GetTick>
 80041a2:	4602      	mov	r2, r0
 80041a4:	693b      	ldr	r3, [r7, #16]
 80041a6:	1ad3      	subs	r3, r2, r3
 80041a8:	2b02      	cmp	r3, #2
 80041aa:	d907      	bls.n	80041bc <HAL_RCC_OscConfig+0x280>
 80041ac:	2303      	movs	r3, #3
 80041ae:	e15c      	b.n	800446a <HAL_RCC_OscConfig+0x52e>
 80041b0:	40023800 	.word	0x40023800
 80041b4:	42470000 	.word	0x42470000
 80041b8:	42470e80 	.word	0x42470e80
 80041bc:	4b8a      	ldr	r3, [pc, #552]	@ (80043e8 <HAL_RCC_OscConfig+0x4ac>)
 80041be:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80041c0:	f003 0302 	and.w	r3, r3, #2
 80041c4:	2b00      	cmp	r3, #0
 80041c6:	d1ea      	bne.n	800419e <HAL_RCC_OscConfig+0x262>
 80041c8:	687b      	ldr	r3, [r7, #4]
 80041ca:	681b      	ldr	r3, [r3, #0]
 80041cc:	f003 0304 	and.w	r3, r3, #4
 80041d0:	2b00      	cmp	r3, #0
 80041d2:	f000 8097 	beq.w	8004304 <HAL_RCC_OscConfig+0x3c8>
 80041d6:	2300      	movs	r3, #0
 80041d8:	75fb      	strb	r3, [r7, #23]
 80041da:	4b83      	ldr	r3, [pc, #524]	@ (80043e8 <HAL_RCC_OscConfig+0x4ac>)
 80041dc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80041de:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80041e2:	2b00      	cmp	r3, #0
 80041e4:	d10f      	bne.n	8004206 <HAL_RCC_OscConfig+0x2ca>
 80041e6:	2300      	movs	r3, #0
 80041e8:	60bb      	str	r3, [r7, #8]
 80041ea:	4b7f      	ldr	r3, [pc, #508]	@ (80043e8 <HAL_RCC_OscConfig+0x4ac>)
 80041ec:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80041ee:	4a7e      	ldr	r2, [pc, #504]	@ (80043e8 <HAL_RCC_OscConfig+0x4ac>)
 80041f0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80041f4:	6413      	str	r3, [r2, #64]	@ 0x40
 80041f6:	4b7c      	ldr	r3, [pc, #496]	@ (80043e8 <HAL_RCC_OscConfig+0x4ac>)
 80041f8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80041fa:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80041fe:	60bb      	str	r3, [r7, #8]
 8004200:	68bb      	ldr	r3, [r7, #8]
 8004202:	2301      	movs	r3, #1
 8004204:	75fb      	strb	r3, [r7, #23]
 8004206:	4b79      	ldr	r3, [pc, #484]	@ (80043ec <HAL_RCC_OscConfig+0x4b0>)
 8004208:	681b      	ldr	r3, [r3, #0]
 800420a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800420e:	2b00      	cmp	r3, #0
 8004210:	d118      	bne.n	8004244 <HAL_RCC_OscConfig+0x308>
 8004212:	4b76      	ldr	r3, [pc, #472]	@ (80043ec <HAL_RCC_OscConfig+0x4b0>)
 8004214:	681b      	ldr	r3, [r3, #0]
 8004216:	4a75      	ldr	r2, [pc, #468]	@ (80043ec <HAL_RCC_OscConfig+0x4b0>)
 8004218:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800421c:	6013      	str	r3, [r2, #0]
 800421e:	f7fe f9b9 	bl	8002594 <HAL_GetTick>
 8004222:	6138      	str	r0, [r7, #16]
 8004224:	e008      	b.n	8004238 <HAL_RCC_OscConfig+0x2fc>
 8004226:	f7fe f9b5 	bl	8002594 <HAL_GetTick>
 800422a:	4602      	mov	r2, r0
 800422c:	693b      	ldr	r3, [r7, #16]
 800422e:	1ad3      	subs	r3, r2, r3
 8004230:	2b02      	cmp	r3, #2
 8004232:	d901      	bls.n	8004238 <HAL_RCC_OscConfig+0x2fc>
 8004234:	2303      	movs	r3, #3
 8004236:	e118      	b.n	800446a <HAL_RCC_OscConfig+0x52e>
 8004238:	4b6c      	ldr	r3, [pc, #432]	@ (80043ec <HAL_RCC_OscConfig+0x4b0>)
 800423a:	681b      	ldr	r3, [r3, #0]
 800423c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004240:	2b00      	cmp	r3, #0
 8004242:	d0f0      	beq.n	8004226 <HAL_RCC_OscConfig+0x2ea>
 8004244:	687b      	ldr	r3, [r7, #4]
 8004246:	689b      	ldr	r3, [r3, #8]
 8004248:	2b01      	cmp	r3, #1
 800424a:	d106      	bne.n	800425a <HAL_RCC_OscConfig+0x31e>
 800424c:	4b66      	ldr	r3, [pc, #408]	@ (80043e8 <HAL_RCC_OscConfig+0x4ac>)
 800424e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004250:	4a65      	ldr	r2, [pc, #404]	@ (80043e8 <HAL_RCC_OscConfig+0x4ac>)
 8004252:	f043 0301 	orr.w	r3, r3, #1
 8004256:	6713      	str	r3, [r2, #112]	@ 0x70
 8004258:	e01c      	b.n	8004294 <HAL_RCC_OscConfig+0x358>
 800425a:	687b      	ldr	r3, [r7, #4]
 800425c:	689b      	ldr	r3, [r3, #8]
 800425e:	2b05      	cmp	r3, #5
 8004260:	d10c      	bne.n	800427c <HAL_RCC_OscConfig+0x340>
 8004262:	4b61      	ldr	r3, [pc, #388]	@ (80043e8 <HAL_RCC_OscConfig+0x4ac>)
 8004264:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004266:	4a60      	ldr	r2, [pc, #384]	@ (80043e8 <HAL_RCC_OscConfig+0x4ac>)
 8004268:	f043 0304 	orr.w	r3, r3, #4
 800426c:	6713      	str	r3, [r2, #112]	@ 0x70
 800426e:	4b5e      	ldr	r3, [pc, #376]	@ (80043e8 <HAL_RCC_OscConfig+0x4ac>)
 8004270:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004272:	4a5d      	ldr	r2, [pc, #372]	@ (80043e8 <HAL_RCC_OscConfig+0x4ac>)
 8004274:	f043 0301 	orr.w	r3, r3, #1
 8004278:	6713      	str	r3, [r2, #112]	@ 0x70
 800427a:	e00b      	b.n	8004294 <HAL_RCC_OscConfig+0x358>
 800427c:	4b5a      	ldr	r3, [pc, #360]	@ (80043e8 <HAL_RCC_OscConfig+0x4ac>)
 800427e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004280:	4a59      	ldr	r2, [pc, #356]	@ (80043e8 <HAL_RCC_OscConfig+0x4ac>)
 8004282:	f023 0301 	bic.w	r3, r3, #1
 8004286:	6713      	str	r3, [r2, #112]	@ 0x70
 8004288:	4b57      	ldr	r3, [pc, #348]	@ (80043e8 <HAL_RCC_OscConfig+0x4ac>)
 800428a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800428c:	4a56      	ldr	r2, [pc, #344]	@ (80043e8 <HAL_RCC_OscConfig+0x4ac>)
 800428e:	f023 0304 	bic.w	r3, r3, #4
 8004292:	6713      	str	r3, [r2, #112]	@ 0x70
 8004294:	687b      	ldr	r3, [r7, #4]
 8004296:	689b      	ldr	r3, [r3, #8]
 8004298:	2b00      	cmp	r3, #0
 800429a:	d015      	beq.n	80042c8 <HAL_RCC_OscConfig+0x38c>
 800429c:	f7fe f97a 	bl	8002594 <HAL_GetTick>
 80042a0:	6138      	str	r0, [r7, #16]
 80042a2:	e00a      	b.n	80042ba <HAL_RCC_OscConfig+0x37e>
 80042a4:	f7fe f976 	bl	8002594 <HAL_GetTick>
 80042a8:	4602      	mov	r2, r0
 80042aa:	693b      	ldr	r3, [r7, #16]
 80042ac:	1ad3      	subs	r3, r2, r3
 80042ae:	f241 3288 	movw	r2, #5000	@ 0x1388
 80042b2:	4293      	cmp	r3, r2
 80042b4:	d901      	bls.n	80042ba <HAL_RCC_OscConfig+0x37e>
 80042b6:	2303      	movs	r3, #3
 80042b8:	e0d7      	b.n	800446a <HAL_RCC_OscConfig+0x52e>
 80042ba:	4b4b      	ldr	r3, [pc, #300]	@ (80043e8 <HAL_RCC_OscConfig+0x4ac>)
 80042bc:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80042be:	f003 0302 	and.w	r3, r3, #2
 80042c2:	2b00      	cmp	r3, #0
 80042c4:	d0ee      	beq.n	80042a4 <HAL_RCC_OscConfig+0x368>
 80042c6:	e014      	b.n	80042f2 <HAL_RCC_OscConfig+0x3b6>
 80042c8:	f7fe f964 	bl	8002594 <HAL_GetTick>
 80042cc:	6138      	str	r0, [r7, #16]
 80042ce:	e00a      	b.n	80042e6 <HAL_RCC_OscConfig+0x3aa>
 80042d0:	f7fe f960 	bl	8002594 <HAL_GetTick>
 80042d4:	4602      	mov	r2, r0
 80042d6:	693b      	ldr	r3, [r7, #16]
 80042d8:	1ad3      	subs	r3, r2, r3
 80042da:	f241 3288 	movw	r2, #5000	@ 0x1388
 80042de:	4293      	cmp	r3, r2
 80042e0:	d901      	bls.n	80042e6 <HAL_RCC_OscConfig+0x3aa>
 80042e2:	2303      	movs	r3, #3
 80042e4:	e0c1      	b.n	800446a <HAL_RCC_OscConfig+0x52e>
 80042e6:	4b40      	ldr	r3, [pc, #256]	@ (80043e8 <HAL_RCC_OscConfig+0x4ac>)
 80042e8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80042ea:	f003 0302 	and.w	r3, r3, #2
 80042ee:	2b00      	cmp	r3, #0
 80042f0:	d1ee      	bne.n	80042d0 <HAL_RCC_OscConfig+0x394>
 80042f2:	7dfb      	ldrb	r3, [r7, #23]
 80042f4:	2b01      	cmp	r3, #1
 80042f6:	d105      	bne.n	8004304 <HAL_RCC_OscConfig+0x3c8>
 80042f8:	4b3b      	ldr	r3, [pc, #236]	@ (80043e8 <HAL_RCC_OscConfig+0x4ac>)
 80042fa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80042fc:	4a3a      	ldr	r2, [pc, #232]	@ (80043e8 <HAL_RCC_OscConfig+0x4ac>)
 80042fe:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8004302:	6413      	str	r3, [r2, #64]	@ 0x40
 8004304:	687b      	ldr	r3, [r7, #4]
 8004306:	699b      	ldr	r3, [r3, #24]
 8004308:	2b00      	cmp	r3, #0
 800430a:	f000 80ad 	beq.w	8004468 <HAL_RCC_OscConfig+0x52c>
 800430e:	4b36      	ldr	r3, [pc, #216]	@ (80043e8 <HAL_RCC_OscConfig+0x4ac>)
 8004310:	689b      	ldr	r3, [r3, #8]
 8004312:	f003 030c 	and.w	r3, r3, #12
 8004316:	2b08      	cmp	r3, #8
 8004318:	d060      	beq.n	80043dc <HAL_RCC_OscConfig+0x4a0>
 800431a:	687b      	ldr	r3, [r7, #4]
 800431c:	699b      	ldr	r3, [r3, #24]
 800431e:	2b02      	cmp	r3, #2
 8004320:	d145      	bne.n	80043ae <HAL_RCC_OscConfig+0x472>
 8004322:	4b33      	ldr	r3, [pc, #204]	@ (80043f0 <HAL_RCC_OscConfig+0x4b4>)
 8004324:	2200      	movs	r2, #0
 8004326:	601a      	str	r2, [r3, #0]
 8004328:	f7fe f934 	bl	8002594 <HAL_GetTick>
 800432c:	6138      	str	r0, [r7, #16]
 800432e:	e008      	b.n	8004342 <HAL_RCC_OscConfig+0x406>
 8004330:	f7fe f930 	bl	8002594 <HAL_GetTick>
 8004334:	4602      	mov	r2, r0
 8004336:	693b      	ldr	r3, [r7, #16]
 8004338:	1ad3      	subs	r3, r2, r3
 800433a:	2b02      	cmp	r3, #2
 800433c:	d901      	bls.n	8004342 <HAL_RCC_OscConfig+0x406>
 800433e:	2303      	movs	r3, #3
 8004340:	e093      	b.n	800446a <HAL_RCC_OscConfig+0x52e>
 8004342:	4b29      	ldr	r3, [pc, #164]	@ (80043e8 <HAL_RCC_OscConfig+0x4ac>)
 8004344:	681b      	ldr	r3, [r3, #0]
 8004346:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800434a:	2b00      	cmp	r3, #0
 800434c:	d1f0      	bne.n	8004330 <HAL_RCC_OscConfig+0x3f4>
 800434e:	687b      	ldr	r3, [r7, #4]
 8004350:	69da      	ldr	r2, [r3, #28]
 8004352:	687b      	ldr	r3, [r7, #4]
 8004354:	6a1b      	ldr	r3, [r3, #32]
 8004356:	431a      	orrs	r2, r3
 8004358:	687b      	ldr	r3, [r7, #4]
 800435a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800435c:	019b      	lsls	r3, r3, #6
 800435e:	431a      	orrs	r2, r3
 8004360:	687b      	ldr	r3, [r7, #4]
 8004362:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004364:	085b      	lsrs	r3, r3, #1
 8004366:	3b01      	subs	r3, #1
 8004368:	041b      	lsls	r3, r3, #16
 800436a:	431a      	orrs	r2, r3
 800436c:	687b      	ldr	r3, [r7, #4]
 800436e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004370:	061b      	lsls	r3, r3, #24
 8004372:	431a      	orrs	r2, r3
 8004374:	687b      	ldr	r3, [r7, #4]
 8004376:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004378:	071b      	lsls	r3, r3, #28
 800437a:	491b      	ldr	r1, [pc, #108]	@ (80043e8 <HAL_RCC_OscConfig+0x4ac>)
 800437c:	4313      	orrs	r3, r2
 800437e:	604b      	str	r3, [r1, #4]
 8004380:	4b1b      	ldr	r3, [pc, #108]	@ (80043f0 <HAL_RCC_OscConfig+0x4b4>)
 8004382:	2201      	movs	r2, #1
 8004384:	601a      	str	r2, [r3, #0]
 8004386:	f7fe f905 	bl	8002594 <HAL_GetTick>
 800438a:	6138      	str	r0, [r7, #16]
 800438c:	e008      	b.n	80043a0 <HAL_RCC_OscConfig+0x464>
 800438e:	f7fe f901 	bl	8002594 <HAL_GetTick>
 8004392:	4602      	mov	r2, r0
 8004394:	693b      	ldr	r3, [r7, #16]
 8004396:	1ad3      	subs	r3, r2, r3
 8004398:	2b02      	cmp	r3, #2
 800439a:	d901      	bls.n	80043a0 <HAL_RCC_OscConfig+0x464>
 800439c:	2303      	movs	r3, #3
 800439e:	e064      	b.n	800446a <HAL_RCC_OscConfig+0x52e>
 80043a0:	4b11      	ldr	r3, [pc, #68]	@ (80043e8 <HAL_RCC_OscConfig+0x4ac>)
 80043a2:	681b      	ldr	r3, [r3, #0]
 80043a4:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80043a8:	2b00      	cmp	r3, #0
 80043aa:	d0f0      	beq.n	800438e <HAL_RCC_OscConfig+0x452>
 80043ac:	e05c      	b.n	8004468 <HAL_RCC_OscConfig+0x52c>
 80043ae:	4b10      	ldr	r3, [pc, #64]	@ (80043f0 <HAL_RCC_OscConfig+0x4b4>)
 80043b0:	2200      	movs	r2, #0
 80043b2:	601a      	str	r2, [r3, #0]
 80043b4:	f7fe f8ee 	bl	8002594 <HAL_GetTick>
 80043b8:	6138      	str	r0, [r7, #16]
 80043ba:	e008      	b.n	80043ce <HAL_RCC_OscConfig+0x492>
 80043bc:	f7fe f8ea 	bl	8002594 <HAL_GetTick>
 80043c0:	4602      	mov	r2, r0
 80043c2:	693b      	ldr	r3, [r7, #16]
 80043c4:	1ad3      	subs	r3, r2, r3
 80043c6:	2b02      	cmp	r3, #2
 80043c8:	d901      	bls.n	80043ce <HAL_RCC_OscConfig+0x492>
 80043ca:	2303      	movs	r3, #3
 80043cc:	e04d      	b.n	800446a <HAL_RCC_OscConfig+0x52e>
 80043ce:	4b06      	ldr	r3, [pc, #24]	@ (80043e8 <HAL_RCC_OscConfig+0x4ac>)
 80043d0:	681b      	ldr	r3, [r3, #0]
 80043d2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80043d6:	2b00      	cmp	r3, #0
 80043d8:	d1f0      	bne.n	80043bc <HAL_RCC_OscConfig+0x480>
 80043da:	e045      	b.n	8004468 <HAL_RCC_OscConfig+0x52c>
 80043dc:	687b      	ldr	r3, [r7, #4]
 80043de:	699b      	ldr	r3, [r3, #24]
 80043e0:	2b01      	cmp	r3, #1
 80043e2:	d107      	bne.n	80043f4 <HAL_RCC_OscConfig+0x4b8>
 80043e4:	2301      	movs	r3, #1
 80043e6:	e040      	b.n	800446a <HAL_RCC_OscConfig+0x52e>
 80043e8:	40023800 	.word	0x40023800
 80043ec:	40007000 	.word	0x40007000
 80043f0:	42470060 	.word	0x42470060
 80043f4:	4b1f      	ldr	r3, [pc, #124]	@ (8004474 <HAL_RCC_OscConfig+0x538>)
 80043f6:	685b      	ldr	r3, [r3, #4]
 80043f8:	60fb      	str	r3, [r7, #12]
 80043fa:	687b      	ldr	r3, [r7, #4]
 80043fc:	699b      	ldr	r3, [r3, #24]
 80043fe:	2b01      	cmp	r3, #1
 8004400:	d030      	beq.n	8004464 <HAL_RCC_OscConfig+0x528>
 8004402:	68fb      	ldr	r3, [r7, #12]
 8004404:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8004408:	687b      	ldr	r3, [r7, #4]
 800440a:	69db      	ldr	r3, [r3, #28]
 800440c:	429a      	cmp	r2, r3
 800440e:	d129      	bne.n	8004464 <HAL_RCC_OscConfig+0x528>
 8004410:	68fb      	ldr	r3, [r7, #12]
 8004412:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8004416:	687b      	ldr	r3, [r7, #4]
 8004418:	6a1b      	ldr	r3, [r3, #32]
 800441a:	429a      	cmp	r2, r3
 800441c:	d122      	bne.n	8004464 <HAL_RCC_OscConfig+0x528>
 800441e:	68fa      	ldr	r2, [r7, #12]
 8004420:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8004424:	4013      	ands	r3, r2
 8004426:	687a      	ldr	r2, [r7, #4]
 8004428:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 800442a:	0192      	lsls	r2, r2, #6
 800442c:	4293      	cmp	r3, r2
 800442e:	d119      	bne.n	8004464 <HAL_RCC_OscConfig+0x528>
 8004430:	68fb      	ldr	r3, [r7, #12]
 8004432:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8004436:	687b      	ldr	r3, [r7, #4]
 8004438:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800443a:	085b      	lsrs	r3, r3, #1
 800443c:	3b01      	subs	r3, #1
 800443e:	041b      	lsls	r3, r3, #16
 8004440:	429a      	cmp	r2, r3
 8004442:	d10f      	bne.n	8004464 <HAL_RCC_OscConfig+0x528>
 8004444:	68fb      	ldr	r3, [r7, #12]
 8004446:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 800444a:	687b      	ldr	r3, [r7, #4]
 800444c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800444e:	061b      	lsls	r3, r3, #24
 8004450:	429a      	cmp	r2, r3
 8004452:	d107      	bne.n	8004464 <HAL_RCC_OscConfig+0x528>
 8004454:	68fb      	ldr	r3, [r7, #12]
 8004456:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 800445a:	687b      	ldr	r3, [r7, #4]
 800445c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800445e:	071b      	lsls	r3, r3, #28
 8004460:	429a      	cmp	r2, r3
 8004462:	d001      	beq.n	8004468 <HAL_RCC_OscConfig+0x52c>
 8004464:	2301      	movs	r3, #1
 8004466:	e000      	b.n	800446a <HAL_RCC_OscConfig+0x52e>
 8004468:	2300      	movs	r3, #0
 800446a:	4618      	mov	r0, r3
 800446c:	3718      	adds	r7, #24
 800446e:	46bd      	mov	sp, r7
 8004470:	bd80      	pop	{r7, pc}
 8004472:	bf00      	nop
 8004474:	40023800 	.word	0x40023800

08004478 <HAL_TIM_Base_Init>:
 8004478:	b580      	push	{r7, lr}
 800447a:	b082      	sub	sp, #8
 800447c:	af00      	add	r7, sp, #0
 800447e:	6078      	str	r0, [r7, #4]
 8004480:	687b      	ldr	r3, [r7, #4]
 8004482:	2b00      	cmp	r3, #0
 8004484:	d101      	bne.n	800448a <HAL_TIM_Base_Init+0x12>
 8004486:	2301      	movs	r3, #1
 8004488:	e041      	b.n	800450e <HAL_TIM_Base_Init+0x96>
 800448a:	687b      	ldr	r3, [r7, #4]
 800448c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004490:	b2db      	uxtb	r3, r3
 8004492:	2b00      	cmp	r3, #0
 8004494:	d106      	bne.n	80044a4 <HAL_TIM_Base_Init+0x2c>
 8004496:	687b      	ldr	r3, [r7, #4]
 8004498:	2200      	movs	r2, #0
 800449a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800449e:	6878      	ldr	r0, [r7, #4]
 80044a0:	f7fd fd74 	bl	8001f8c <HAL_TIM_Base_MspInit>
 80044a4:	687b      	ldr	r3, [r7, #4]
 80044a6:	2202      	movs	r2, #2
 80044a8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80044ac:	687b      	ldr	r3, [r7, #4]
 80044ae:	681a      	ldr	r2, [r3, #0]
 80044b0:	687b      	ldr	r3, [r7, #4]
 80044b2:	3304      	adds	r3, #4
 80044b4:	4619      	mov	r1, r3
 80044b6:	4610      	mov	r0, r2
 80044b8:	f000 fc66 	bl	8004d88 <TIM_Base_SetConfig>
 80044bc:	687b      	ldr	r3, [r7, #4]
 80044be:	2201      	movs	r2, #1
 80044c0:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80044c4:	687b      	ldr	r3, [r7, #4]
 80044c6:	2201      	movs	r2, #1
 80044c8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80044cc:	687b      	ldr	r3, [r7, #4]
 80044ce:	2201      	movs	r2, #1
 80044d0:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80044d4:	687b      	ldr	r3, [r7, #4]
 80044d6:	2201      	movs	r2, #1
 80044d8:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80044dc:	687b      	ldr	r3, [r7, #4]
 80044de:	2201      	movs	r2, #1
 80044e0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80044e4:	687b      	ldr	r3, [r7, #4]
 80044e6:	2201      	movs	r2, #1
 80044e8:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80044ec:	687b      	ldr	r3, [r7, #4]
 80044ee:	2201      	movs	r2, #1
 80044f0:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80044f4:	687b      	ldr	r3, [r7, #4]
 80044f6:	2201      	movs	r2, #1
 80044f8:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80044fc:	687b      	ldr	r3, [r7, #4]
 80044fe:	2201      	movs	r2, #1
 8004500:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8004504:	687b      	ldr	r3, [r7, #4]
 8004506:	2201      	movs	r2, #1
 8004508:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800450c:	2300      	movs	r3, #0
 800450e:	4618      	mov	r0, r3
 8004510:	3708      	adds	r7, #8
 8004512:	46bd      	mov	sp, r7
 8004514:	bd80      	pop	{r7, pc}

08004516 <HAL_TIM_PWM_Init>:
 8004516:	b580      	push	{r7, lr}
 8004518:	b082      	sub	sp, #8
 800451a:	af00      	add	r7, sp, #0
 800451c:	6078      	str	r0, [r7, #4]
 800451e:	687b      	ldr	r3, [r7, #4]
 8004520:	2b00      	cmp	r3, #0
 8004522:	d101      	bne.n	8004528 <HAL_TIM_PWM_Init+0x12>
 8004524:	2301      	movs	r3, #1
 8004526:	e041      	b.n	80045ac <HAL_TIM_PWM_Init+0x96>
 8004528:	687b      	ldr	r3, [r7, #4]
 800452a:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800452e:	b2db      	uxtb	r3, r3
 8004530:	2b00      	cmp	r3, #0
 8004532:	d106      	bne.n	8004542 <HAL_TIM_PWM_Init+0x2c>
 8004534:	687b      	ldr	r3, [r7, #4]
 8004536:	2200      	movs	r2, #0
 8004538:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800453c:	6878      	ldr	r0, [r7, #4]
 800453e:	f000 f839 	bl	80045b4 <HAL_TIM_PWM_MspInit>
 8004542:	687b      	ldr	r3, [r7, #4]
 8004544:	2202      	movs	r2, #2
 8004546:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800454a:	687b      	ldr	r3, [r7, #4]
 800454c:	681a      	ldr	r2, [r3, #0]
 800454e:	687b      	ldr	r3, [r7, #4]
 8004550:	3304      	adds	r3, #4
 8004552:	4619      	mov	r1, r3
 8004554:	4610      	mov	r0, r2
 8004556:	f000 fc17 	bl	8004d88 <TIM_Base_SetConfig>
 800455a:	687b      	ldr	r3, [r7, #4]
 800455c:	2201      	movs	r2, #1
 800455e:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8004562:	687b      	ldr	r3, [r7, #4]
 8004564:	2201      	movs	r2, #1
 8004566:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800456a:	687b      	ldr	r3, [r7, #4]
 800456c:	2201      	movs	r2, #1
 800456e:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004572:	687b      	ldr	r3, [r7, #4]
 8004574:	2201      	movs	r2, #1
 8004576:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800457a:	687b      	ldr	r3, [r7, #4]
 800457c:	2201      	movs	r2, #1
 800457e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004582:	687b      	ldr	r3, [r7, #4]
 8004584:	2201      	movs	r2, #1
 8004586:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800458a:	687b      	ldr	r3, [r7, #4]
 800458c:	2201      	movs	r2, #1
 800458e:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8004592:	687b      	ldr	r3, [r7, #4]
 8004594:	2201      	movs	r2, #1
 8004596:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800459a:	687b      	ldr	r3, [r7, #4]
 800459c:	2201      	movs	r2, #1
 800459e:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80045a2:	687b      	ldr	r3, [r7, #4]
 80045a4:	2201      	movs	r2, #1
 80045a6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80045aa:	2300      	movs	r3, #0
 80045ac:	4618      	mov	r0, r3
 80045ae:	3708      	adds	r7, #8
 80045b0:	46bd      	mov	sp, r7
 80045b2:	bd80      	pop	{r7, pc}

080045b4 <HAL_TIM_PWM_MspInit>:
 80045b4:	b480      	push	{r7}
 80045b6:	b083      	sub	sp, #12
 80045b8:	af00      	add	r7, sp, #0
 80045ba:	6078      	str	r0, [r7, #4]
 80045bc:	bf00      	nop
 80045be:	370c      	adds	r7, #12
 80045c0:	46bd      	mov	sp, r7
 80045c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045c6:	4770      	bx	lr

080045c8 <HAL_TIM_Encoder_Init>:
 80045c8:	b580      	push	{r7, lr}
 80045ca:	b086      	sub	sp, #24
 80045cc:	af00      	add	r7, sp, #0
 80045ce:	6078      	str	r0, [r7, #4]
 80045d0:	6039      	str	r1, [r7, #0]
 80045d2:	687b      	ldr	r3, [r7, #4]
 80045d4:	2b00      	cmp	r3, #0
 80045d6:	d101      	bne.n	80045dc <HAL_TIM_Encoder_Init+0x14>
 80045d8:	2301      	movs	r3, #1
 80045da:	e097      	b.n	800470c <HAL_TIM_Encoder_Init+0x144>
 80045dc:	687b      	ldr	r3, [r7, #4]
 80045de:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80045e2:	b2db      	uxtb	r3, r3
 80045e4:	2b00      	cmp	r3, #0
 80045e6:	d106      	bne.n	80045f6 <HAL_TIM_Encoder_Init+0x2e>
 80045e8:	687b      	ldr	r3, [r7, #4]
 80045ea:	2200      	movs	r2, #0
 80045ec:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80045f0:	6878      	ldr	r0, [r7, #4]
 80045f2:	f7fd fd27 	bl	8002044 <HAL_TIM_Encoder_MspInit>
 80045f6:	687b      	ldr	r3, [r7, #4]
 80045f8:	2202      	movs	r2, #2
 80045fa:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80045fe:	687b      	ldr	r3, [r7, #4]
 8004600:	681b      	ldr	r3, [r3, #0]
 8004602:	689b      	ldr	r3, [r3, #8]
 8004604:	687a      	ldr	r2, [r7, #4]
 8004606:	6812      	ldr	r2, [r2, #0]
 8004608:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800460c:	f023 0307 	bic.w	r3, r3, #7
 8004610:	6093      	str	r3, [r2, #8]
 8004612:	687b      	ldr	r3, [r7, #4]
 8004614:	681a      	ldr	r2, [r3, #0]
 8004616:	687b      	ldr	r3, [r7, #4]
 8004618:	3304      	adds	r3, #4
 800461a:	4619      	mov	r1, r3
 800461c:	4610      	mov	r0, r2
 800461e:	f000 fbb3 	bl	8004d88 <TIM_Base_SetConfig>
 8004622:	687b      	ldr	r3, [r7, #4]
 8004624:	681b      	ldr	r3, [r3, #0]
 8004626:	689b      	ldr	r3, [r3, #8]
 8004628:	617b      	str	r3, [r7, #20]
 800462a:	687b      	ldr	r3, [r7, #4]
 800462c:	681b      	ldr	r3, [r3, #0]
 800462e:	699b      	ldr	r3, [r3, #24]
 8004630:	613b      	str	r3, [r7, #16]
 8004632:	687b      	ldr	r3, [r7, #4]
 8004634:	681b      	ldr	r3, [r3, #0]
 8004636:	6a1b      	ldr	r3, [r3, #32]
 8004638:	60fb      	str	r3, [r7, #12]
 800463a:	683b      	ldr	r3, [r7, #0]
 800463c:	681b      	ldr	r3, [r3, #0]
 800463e:	697a      	ldr	r2, [r7, #20]
 8004640:	4313      	orrs	r3, r2
 8004642:	617b      	str	r3, [r7, #20]
 8004644:	693b      	ldr	r3, [r7, #16]
 8004646:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800464a:	f023 0303 	bic.w	r3, r3, #3
 800464e:	613b      	str	r3, [r7, #16]
 8004650:	683b      	ldr	r3, [r7, #0]
 8004652:	689a      	ldr	r2, [r3, #8]
 8004654:	683b      	ldr	r3, [r7, #0]
 8004656:	699b      	ldr	r3, [r3, #24]
 8004658:	021b      	lsls	r3, r3, #8
 800465a:	4313      	orrs	r3, r2
 800465c:	693a      	ldr	r2, [r7, #16]
 800465e:	4313      	orrs	r3, r2
 8004660:	613b      	str	r3, [r7, #16]
 8004662:	693b      	ldr	r3, [r7, #16]
 8004664:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
 8004668:	f023 030c 	bic.w	r3, r3, #12
 800466c:	613b      	str	r3, [r7, #16]
 800466e:	693b      	ldr	r3, [r7, #16]
 8004670:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8004674:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8004678:	613b      	str	r3, [r7, #16]
 800467a:	683b      	ldr	r3, [r7, #0]
 800467c:	68da      	ldr	r2, [r3, #12]
 800467e:	683b      	ldr	r3, [r7, #0]
 8004680:	69db      	ldr	r3, [r3, #28]
 8004682:	021b      	lsls	r3, r3, #8
 8004684:	4313      	orrs	r3, r2
 8004686:	693a      	ldr	r2, [r7, #16]
 8004688:	4313      	orrs	r3, r2
 800468a:	613b      	str	r3, [r7, #16]
 800468c:	683b      	ldr	r3, [r7, #0]
 800468e:	691b      	ldr	r3, [r3, #16]
 8004690:	011a      	lsls	r2, r3, #4
 8004692:	683b      	ldr	r3, [r7, #0]
 8004694:	6a1b      	ldr	r3, [r3, #32]
 8004696:	031b      	lsls	r3, r3, #12
 8004698:	4313      	orrs	r3, r2
 800469a:	693a      	ldr	r2, [r7, #16]
 800469c:	4313      	orrs	r3, r2
 800469e:	613b      	str	r3, [r7, #16]
 80046a0:	68fb      	ldr	r3, [r7, #12]
 80046a2:	f023 0322 	bic.w	r3, r3, #34	@ 0x22
 80046a6:	60fb      	str	r3, [r7, #12]
 80046a8:	68fb      	ldr	r3, [r7, #12]
 80046aa:	f023 0388 	bic.w	r3, r3, #136	@ 0x88
 80046ae:	60fb      	str	r3, [r7, #12]
 80046b0:	683b      	ldr	r3, [r7, #0]
 80046b2:	685a      	ldr	r2, [r3, #4]
 80046b4:	683b      	ldr	r3, [r7, #0]
 80046b6:	695b      	ldr	r3, [r3, #20]
 80046b8:	011b      	lsls	r3, r3, #4
 80046ba:	4313      	orrs	r3, r2
 80046bc:	68fa      	ldr	r2, [r7, #12]
 80046be:	4313      	orrs	r3, r2
 80046c0:	60fb      	str	r3, [r7, #12]
 80046c2:	687b      	ldr	r3, [r7, #4]
 80046c4:	681b      	ldr	r3, [r3, #0]
 80046c6:	697a      	ldr	r2, [r7, #20]
 80046c8:	609a      	str	r2, [r3, #8]
 80046ca:	687b      	ldr	r3, [r7, #4]
 80046cc:	681b      	ldr	r3, [r3, #0]
 80046ce:	693a      	ldr	r2, [r7, #16]
 80046d0:	619a      	str	r2, [r3, #24]
 80046d2:	687b      	ldr	r3, [r7, #4]
 80046d4:	681b      	ldr	r3, [r3, #0]
 80046d6:	68fa      	ldr	r2, [r7, #12]
 80046d8:	621a      	str	r2, [r3, #32]
 80046da:	687b      	ldr	r3, [r7, #4]
 80046dc:	2201      	movs	r2, #1
 80046de:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80046e2:	687b      	ldr	r3, [r7, #4]
 80046e4:	2201      	movs	r2, #1
 80046e6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80046ea:	687b      	ldr	r3, [r7, #4]
 80046ec:	2201      	movs	r2, #1
 80046ee:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80046f2:	687b      	ldr	r3, [r7, #4]
 80046f4:	2201      	movs	r2, #1
 80046f6:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80046fa:	687b      	ldr	r3, [r7, #4]
 80046fc:	2201      	movs	r2, #1
 80046fe:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8004702:	687b      	ldr	r3, [r7, #4]
 8004704:	2201      	movs	r2, #1
 8004706:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800470a:	2300      	movs	r3, #0
 800470c:	4618      	mov	r0, r3
 800470e:	3718      	adds	r7, #24
 8004710:	46bd      	mov	sp, r7
 8004712:	bd80      	pop	{r7, pc}

08004714 <HAL_TIM_Encoder_Start>:
 8004714:	b580      	push	{r7, lr}
 8004716:	b084      	sub	sp, #16
 8004718:	af00      	add	r7, sp, #0
 800471a:	6078      	str	r0, [r7, #4]
 800471c:	6039      	str	r1, [r7, #0]
 800471e:	687b      	ldr	r3, [r7, #4]
 8004720:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8004724:	73fb      	strb	r3, [r7, #15]
 8004726:	687b      	ldr	r3, [r7, #4]
 8004728:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 800472c:	73bb      	strb	r3, [r7, #14]
 800472e:	687b      	ldr	r3, [r7, #4]
 8004730:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8004734:	737b      	strb	r3, [r7, #13]
 8004736:	687b      	ldr	r3, [r7, #4]
 8004738:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 800473c:	733b      	strb	r3, [r7, #12]
 800473e:	683b      	ldr	r3, [r7, #0]
 8004740:	2b00      	cmp	r3, #0
 8004742:	d110      	bne.n	8004766 <HAL_TIM_Encoder_Start+0x52>
 8004744:	7bfb      	ldrb	r3, [r7, #15]
 8004746:	2b01      	cmp	r3, #1
 8004748:	d102      	bne.n	8004750 <HAL_TIM_Encoder_Start+0x3c>
 800474a:	7b7b      	ldrb	r3, [r7, #13]
 800474c:	2b01      	cmp	r3, #1
 800474e:	d001      	beq.n	8004754 <HAL_TIM_Encoder_Start+0x40>
 8004750:	2301      	movs	r3, #1
 8004752:	e069      	b.n	8004828 <HAL_TIM_Encoder_Start+0x114>
 8004754:	687b      	ldr	r3, [r7, #4]
 8004756:	2202      	movs	r2, #2
 8004758:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800475c:	687b      	ldr	r3, [r7, #4]
 800475e:	2202      	movs	r2, #2
 8004760:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004764:	e031      	b.n	80047ca <HAL_TIM_Encoder_Start+0xb6>
 8004766:	683b      	ldr	r3, [r7, #0]
 8004768:	2b04      	cmp	r3, #4
 800476a:	d110      	bne.n	800478e <HAL_TIM_Encoder_Start+0x7a>
 800476c:	7bbb      	ldrb	r3, [r7, #14]
 800476e:	2b01      	cmp	r3, #1
 8004770:	d102      	bne.n	8004778 <HAL_TIM_Encoder_Start+0x64>
 8004772:	7b3b      	ldrb	r3, [r7, #12]
 8004774:	2b01      	cmp	r3, #1
 8004776:	d001      	beq.n	800477c <HAL_TIM_Encoder_Start+0x68>
 8004778:	2301      	movs	r3, #1
 800477a:	e055      	b.n	8004828 <HAL_TIM_Encoder_Start+0x114>
 800477c:	687b      	ldr	r3, [r7, #4]
 800477e:	2202      	movs	r2, #2
 8004780:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004784:	687b      	ldr	r3, [r7, #4]
 8004786:	2202      	movs	r2, #2
 8004788:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800478c:	e01d      	b.n	80047ca <HAL_TIM_Encoder_Start+0xb6>
 800478e:	7bfb      	ldrb	r3, [r7, #15]
 8004790:	2b01      	cmp	r3, #1
 8004792:	d108      	bne.n	80047a6 <HAL_TIM_Encoder_Start+0x92>
 8004794:	7bbb      	ldrb	r3, [r7, #14]
 8004796:	2b01      	cmp	r3, #1
 8004798:	d105      	bne.n	80047a6 <HAL_TIM_Encoder_Start+0x92>
 800479a:	7b7b      	ldrb	r3, [r7, #13]
 800479c:	2b01      	cmp	r3, #1
 800479e:	d102      	bne.n	80047a6 <HAL_TIM_Encoder_Start+0x92>
 80047a0:	7b3b      	ldrb	r3, [r7, #12]
 80047a2:	2b01      	cmp	r3, #1
 80047a4:	d001      	beq.n	80047aa <HAL_TIM_Encoder_Start+0x96>
 80047a6:	2301      	movs	r3, #1
 80047a8:	e03e      	b.n	8004828 <HAL_TIM_Encoder_Start+0x114>
 80047aa:	687b      	ldr	r3, [r7, #4]
 80047ac:	2202      	movs	r2, #2
 80047ae:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80047b2:	687b      	ldr	r3, [r7, #4]
 80047b4:	2202      	movs	r2, #2
 80047b6:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80047ba:	687b      	ldr	r3, [r7, #4]
 80047bc:	2202      	movs	r2, #2
 80047be:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80047c2:	687b      	ldr	r3, [r7, #4]
 80047c4:	2202      	movs	r2, #2
 80047c6:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80047ca:	683b      	ldr	r3, [r7, #0]
 80047cc:	2b00      	cmp	r3, #0
 80047ce:	d003      	beq.n	80047d8 <HAL_TIM_Encoder_Start+0xc4>
 80047d0:	683b      	ldr	r3, [r7, #0]
 80047d2:	2b04      	cmp	r3, #4
 80047d4:	d008      	beq.n	80047e8 <HAL_TIM_Encoder_Start+0xd4>
 80047d6:	e00f      	b.n	80047f8 <HAL_TIM_Encoder_Start+0xe4>
 80047d8:	687b      	ldr	r3, [r7, #4]
 80047da:	681b      	ldr	r3, [r3, #0]
 80047dc:	2201      	movs	r2, #1
 80047de:	2100      	movs	r1, #0
 80047e0:	4618      	mov	r0, r3
 80047e2:	f000 fdc1 	bl	8005368 <TIM_CCxChannelCmd>
 80047e6:	e016      	b.n	8004816 <HAL_TIM_Encoder_Start+0x102>
 80047e8:	687b      	ldr	r3, [r7, #4]
 80047ea:	681b      	ldr	r3, [r3, #0]
 80047ec:	2201      	movs	r2, #1
 80047ee:	2104      	movs	r1, #4
 80047f0:	4618      	mov	r0, r3
 80047f2:	f000 fdb9 	bl	8005368 <TIM_CCxChannelCmd>
 80047f6:	e00e      	b.n	8004816 <HAL_TIM_Encoder_Start+0x102>
 80047f8:	687b      	ldr	r3, [r7, #4]
 80047fa:	681b      	ldr	r3, [r3, #0]
 80047fc:	2201      	movs	r2, #1
 80047fe:	2100      	movs	r1, #0
 8004800:	4618      	mov	r0, r3
 8004802:	f000 fdb1 	bl	8005368 <TIM_CCxChannelCmd>
 8004806:	687b      	ldr	r3, [r7, #4]
 8004808:	681b      	ldr	r3, [r3, #0]
 800480a:	2201      	movs	r2, #1
 800480c:	2104      	movs	r1, #4
 800480e:	4618      	mov	r0, r3
 8004810:	f000 fdaa 	bl	8005368 <TIM_CCxChannelCmd>
 8004814:	bf00      	nop
 8004816:	687b      	ldr	r3, [r7, #4]
 8004818:	681b      	ldr	r3, [r3, #0]
 800481a:	681a      	ldr	r2, [r3, #0]
 800481c:	687b      	ldr	r3, [r7, #4]
 800481e:	681b      	ldr	r3, [r3, #0]
 8004820:	f042 0201 	orr.w	r2, r2, #1
 8004824:	601a      	str	r2, [r3, #0]
 8004826:	2300      	movs	r3, #0
 8004828:	4618      	mov	r0, r3
 800482a:	3710      	adds	r7, #16
 800482c:	46bd      	mov	sp, r7
 800482e:	bd80      	pop	{r7, pc}

08004830 <HAL_TIM_IRQHandler>:
 8004830:	b580      	push	{r7, lr}
 8004832:	b084      	sub	sp, #16
 8004834:	af00      	add	r7, sp, #0
 8004836:	6078      	str	r0, [r7, #4]
 8004838:	687b      	ldr	r3, [r7, #4]
 800483a:	681b      	ldr	r3, [r3, #0]
 800483c:	68db      	ldr	r3, [r3, #12]
 800483e:	60fb      	str	r3, [r7, #12]
 8004840:	687b      	ldr	r3, [r7, #4]
 8004842:	681b      	ldr	r3, [r3, #0]
 8004844:	691b      	ldr	r3, [r3, #16]
 8004846:	60bb      	str	r3, [r7, #8]
 8004848:	68bb      	ldr	r3, [r7, #8]
 800484a:	f003 0302 	and.w	r3, r3, #2
 800484e:	2b00      	cmp	r3, #0
 8004850:	d020      	beq.n	8004894 <HAL_TIM_IRQHandler+0x64>
 8004852:	68fb      	ldr	r3, [r7, #12]
 8004854:	f003 0302 	and.w	r3, r3, #2
 8004858:	2b00      	cmp	r3, #0
 800485a:	d01b      	beq.n	8004894 <HAL_TIM_IRQHandler+0x64>
 800485c:	687b      	ldr	r3, [r7, #4]
 800485e:	681b      	ldr	r3, [r3, #0]
 8004860:	f06f 0202 	mvn.w	r2, #2
 8004864:	611a      	str	r2, [r3, #16]
 8004866:	687b      	ldr	r3, [r7, #4]
 8004868:	2201      	movs	r2, #1
 800486a:	771a      	strb	r2, [r3, #28]
 800486c:	687b      	ldr	r3, [r7, #4]
 800486e:	681b      	ldr	r3, [r3, #0]
 8004870:	699b      	ldr	r3, [r3, #24]
 8004872:	f003 0303 	and.w	r3, r3, #3
 8004876:	2b00      	cmp	r3, #0
 8004878:	d003      	beq.n	8004882 <HAL_TIM_IRQHandler+0x52>
 800487a:	6878      	ldr	r0, [r7, #4]
 800487c:	f000 fa65 	bl	8004d4a <HAL_TIM_IC_CaptureCallback>
 8004880:	e005      	b.n	800488e <HAL_TIM_IRQHandler+0x5e>
 8004882:	6878      	ldr	r0, [r7, #4]
 8004884:	f000 fa57 	bl	8004d36 <HAL_TIM_OC_DelayElapsedCallback>
 8004888:	6878      	ldr	r0, [r7, #4]
 800488a:	f000 fa68 	bl	8004d5e <HAL_TIM_PWM_PulseFinishedCallback>
 800488e:	687b      	ldr	r3, [r7, #4]
 8004890:	2200      	movs	r2, #0
 8004892:	771a      	strb	r2, [r3, #28]
 8004894:	68bb      	ldr	r3, [r7, #8]
 8004896:	f003 0304 	and.w	r3, r3, #4
 800489a:	2b00      	cmp	r3, #0
 800489c:	d020      	beq.n	80048e0 <HAL_TIM_IRQHandler+0xb0>
 800489e:	68fb      	ldr	r3, [r7, #12]
 80048a0:	f003 0304 	and.w	r3, r3, #4
 80048a4:	2b00      	cmp	r3, #0
 80048a6:	d01b      	beq.n	80048e0 <HAL_TIM_IRQHandler+0xb0>
 80048a8:	687b      	ldr	r3, [r7, #4]
 80048aa:	681b      	ldr	r3, [r3, #0]
 80048ac:	f06f 0204 	mvn.w	r2, #4
 80048b0:	611a      	str	r2, [r3, #16]
 80048b2:	687b      	ldr	r3, [r7, #4]
 80048b4:	2202      	movs	r2, #2
 80048b6:	771a      	strb	r2, [r3, #28]
 80048b8:	687b      	ldr	r3, [r7, #4]
 80048ba:	681b      	ldr	r3, [r3, #0]
 80048bc:	699b      	ldr	r3, [r3, #24]
 80048be:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80048c2:	2b00      	cmp	r3, #0
 80048c4:	d003      	beq.n	80048ce <HAL_TIM_IRQHandler+0x9e>
 80048c6:	6878      	ldr	r0, [r7, #4]
 80048c8:	f000 fa3f 	bl	8004d4a <HAL_TIM_IC_CaptureCallback>
 80048cc:	e005      	b.n	80048da <HAL_TIM_IRQHandler+0xaa>
 80048ce:	6878      	ldr	r0, [r7, #4]
 80048d0:	f000 fa31 	bl	8004d36 <HAL_TIM_OC_DelayElapsedCallback>
 80048d4:	6878      	ldr	r0, [r7, #4]
 80048d6:	f000 fa42 	bl	8004d5e <HAL_TIM_PWM_PulseFinishedCallback>
 80048da:	687b      	ldr	r3, [r7, #4]
 80048dc:	2200      	movs	r2, #0
 80048de:	771a      	strb	r2, [r3, #28]
 80048e0:	68bb      	ldr	r3, [r7, #8]
 80048e2:	f003 0308 	and.w	r3, r3, #8
 80048e6:	2b00      	cmp	r3, #0
 80048e8:	d020      	beq.n	800492c <HAL_TIM_IRQHandler+0xfc>
 80048ea:	68fb      	ldr	r3, [r7, #12]
 80048ec:	f003 0308 	and.w	r3, r3, #8
 80048f0:	2b00      	cmp	r3, #0
 80048f2:	d01b      	beq.n	800492c <HAL_TIM_IRQHandler+0xfc>
 80048f4:	687b      	ldr	r3, [r7, #4]
 80048f6:	681b      	ldr	r3, [r3, #0]
 80048f8:	f06f 0208 	mvn.w	r2, #8
 80048fc:	611a      	str	r2, [r3, #16]
 80048fe:	687b      	ldr	r3, [r7, #4]
 8004900:	2204      	movs	r2, #4
 8004902:	771a      	strb	r2, [r3, #28]
 8004904:	687b      	ldr	r3, [r7, #4]
 8004906:	681b      	ldr	r3, [r3, #0]
 8004908:	69db      	ldr	r3, [r3, #28]
 800490a:	f003 0303 	and.w	r3, r3, #3
 800490e:	2b00      	cmp	r3, #0
 8004910:	d003      	beq.n	800491a <HAL_TIM_IRQHandler+0xea>
 8004912:	6878      	ldr	r0, [r7, #4]
 8004914:	f000 fa19 	bl	8004d4a <HAL_TIM_IC_CaptureCallback>
 8004918:	e005      	b.n	8004926 <HAL_TIM_IRQHandler+0xf6>
 800491a:	6878      	ldr	r0, [r7, #4]
 800491c:	f000 fa0b 	bl	8004d36 <HAL_TIM_OC_DelayElapsedCallback>
 8004920:	6878      	ldr	r0, [r7, #4]
 8004922:	f000 fa1c 	bl	8004d5e <HAL_TIM_PWM_PulseFinishedCallback>
 8004926:	687b      	ldr	r3, [r7, #4]
 8004928:	2200      	movs	r2, #0
 800492a:	771a      	strb	r2, [r3, #28]
 800492c:	68bb      	ldr	r3, [r7, #8]
 800492e:	f003 0310 	and.w	r3, r3, #16
 8004932:	2b00      	cmp	r3, #0
 8004934:	d020      	beq.n	8004978 <HAL_TIM_IRQHandler+0x148>
 8004936:	68fb      	ldr	r3, [r7, #12]
 8004938:	f003 0310 	and.w	r3, r3, #16
 800493c:	2b00      	cmp	r3, #0
 800493e:	d01b      	beq.n	8004978 <HAL_TIM_IRQHandler+0x148>
 8004940:	687b      	ldr	r3, [r7, #4]
 8004942:	681b      	ldr	r3, [r3, #0]
 8004944:	f06f 0210 	mvn.w	r2, #16
 8004948:	611a      	str	r2, [r3, #16]
 800494a:	687b      	ldr	r3, [r7, #4]
 800494c:	2208      	movs	r2, #8
 800494e:	771a      	strb	r2, [r3, #28]
 8004950:	687b      	ldr	r3, [r7, #4]
 8004952:	681b      	ldr	r3, [r3, #0]
 8004954:	69db      	ldr	r3, [r3, #28]
 8004956:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800495a:	2b00      	cmp	r3, #0
 800495c:	d003      	beq.n	8004966 <HAL_TIM_IRQHandler+0x136>
 800495e:	6878      	ldr	r0, [r7, #4]
 8004960:	f000 f9f3 	bl	8004d4a <HAL_TIM_IC_CaptureCallback>
 8004964:	e005      	b.n	8004972 <HAL_TIM_IRQHandler+0x142>
 8004966:	6878      	ldr	r0, [r7, #4]
 8004968:	f000 f9e5 	bl	8004d36 <HAL_TIM_OC_DelayElapsedCallback>
 800496c:	6878      	ldr	r0, [r7, #4]
 800496e:	f000 f9f6 	bl	8004d5e <HAL_TIM_PWM_PulseFinishedCallback>
 8004972:	687b      	ldr	r3, [r7, #4]
 8004974:	2200      	movs	r2, #0
 8004976:	771a      	strb	r2, [r3, #28]
 8004978:	68bb      	ldr	r3, [r7, #8]
 800497a:	f003 0301 	and.w	r3, r3, #1
 800497e:	2b00      	cmp	r3, #0
 8004980:	d00c      	beq.n	800499c <HAL_TIM_IRQHandler+0x16c>
 8004982:	68fb      	ldr	r3, [r7, #12]
 8004984:	f003 0301 	and.w	r3, r3, #1
 8004988:	2b00      	cmp	r3, #0
 800498a:	d007      	beq.n	800499c <HAL_TIM_IRQHandler+0x16c>
 800498c:	687b      	ldr	r3, [r7, #4]
 800498e:	681b      	ldr	r3, [r3, #0]
 8004990:	f06f 0201 	mvn.w	r2, #1
 8004994:	611a      	str	r2, [r3, #16]
 8004996:	6878      	ldr	r0, [r7, #4]
 8004998:	f000 f9c3 	bl	8004d22 <HAL_TIM_PeriodElapsedCallback>
 800499c:	68bb      	ldr	r3, [r7, #8]
 800499e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80049a2:	2b00      	cmp	r3, #0
 80049a4:	d00c      	beq.n	80049c0 <HAL_TIM_IRQHandler+0x190>
 80049a6:	68fb      	ldr	r3, [r7, #12]
 80049a8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80049ac:	2b00      	cmp	r3, #0
 80049ae:	d007      	beq.n	80049c0 <HAL_TIM_IRQHandler+0x190>
 80049b0:	687b      	ldr	r3, [r7, #4]
 80049b2:	681b      	ldr	r3, [r3, #0]
 80049b4:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 80049b8:	611a      	str	r2, [r3, #16]
 80049ba:	6878      	ldr	r0, [r7, #4]
 80049bc:	f000 fe8c 	bl	80056d8 <HAL_TIMEx_BreakCallback>
 80049c0:	68bb      	ldr	r3, [r7, #8]
 80049c2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80049c6:	2b00      	cmp	r3, #0
 80049c8:	d00c      	beq.n	80049e4 <HAL_TIM_IRQHandler+0x1b4>
 80049ca:	68fb      	ldr	r3, [r7, #12]
 80049cc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80049d0:	2b00      	cmp	r3, #0
 80049d2:	d007      	beq.n	80049e4 <HAL_TIM_IRQHandler+0x1b4>
 80049d4:	687b      	ldr	r3, [r7, #4]
 80049d6:	681b      	ldr	r3, [r3, #0]
 80049d8:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 80049dc:	611a      	str	r2, [r3, #16]
 80049de:	6878      	ldr	r0, [r7, #4]
 80049e0:	f000 f9c7 	bl	8004d72 <HAL_TIM_TriggerCallback>
 80049e4:	68bb      	ldr	r3, [r7, #8]
 80049e6:	f003 0320 	and.w	r3, r3, #32
 80049ea:	2b00      	cmp	r3, #0
 80049ec:	d00c      	beq.n	8004a08 <HAL_TIM_IRQHandler+0x1d8>
 80049ee:	68fb      	ldr	r3, [r7, #12]
 80049f0:	f003 0320 	and.w	r3, r3, #32
 80049f4:	2b00      	cmp	r3, #0
 80049f6:	d007      	beq.n	8004a08 <HAL_TIM_IRQHandler+0x1d8>
 80049f8:	687b      	ldr	r3, [r7, #4]
 80049fa:	681b      	ldr	r3, [r3, #0]
 80049fc:	f06f 0220 	mvn.w	r2, #32
 8004a00:	611a      	str	r2, [r3, #16]
 8004a02:	6878      	ldr	r0, [r7, #4]
 8004a04:	f000 fe5e 	bl	80056c4 <HAL_TIMEx_CommutCallback>
 8004a08:	bf00      	nop
 8004a0a:	3710      	adds	r7, #16
 8004a0c:	46bd      	mov	sp, r7
 8004a0e:	bd80      	pop	{r7, pc}

08004a10 <HAL_TIM_PWM_ConfigChannel>:
 8004a10:	b580      	push	{r7, lr}
 8004a12:	b086      	sub	sp, #24
 8004a14:	af00      	add	r7, sp, #0
 8004a16:	60f8      	str	r0, [r7, #12]
 8004a18:	60b9      	str	r1, [r7, #8]
 8004a1a:	607a      	str	r2, [r7, #4]
 8004a1c:	2300      	movs	r3, #0
 8004a1e:	75fb      	strb	r3, [r7, #23]
 8004a20:	68fb      	ldr	r3, [r7, #12]
 8004a22:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004a26:	2b01      	cmp	r3, #1
 8004a28:	d101      	bne.n	8004a2e <HAL_TIM_PWM_ConfigChannel+0x1e>
 8004a2a:	2302      	movs	r3, #2
 8004a2c:	e0ae      	b.n	8004b8c <HAL_TIM_PWM_ConfigChannel+0x17c>
 8004a2e:	68fb      	ldr	r3, [r7, #12]
 8004a30:	2201      	movs	r2, #1
 8004a32:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004a36:	687b      	ldr	r3, [r7, #4]
 8004a38:	2b0c      	cmp	r3, #12
 8004a3a:	f200 809f 	bhi.w	8004b7c <HAL_TIM_PWM_ConfigChannel+0x16c>
 8004a3e:	a201      	add	r2, pc, #4	@ (adr r2, 8004a44 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8004a40:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004a44:	08004a79 	.word	0x08004a79
 8004a48:	08004b7d 	.word	0x08004b7d
 8004a4c:	08004b7d 	.word	0x08004b7d
 8004a50:	08004b7d 	.word	0x08004b7d
 8004a54:	08004ab9 	.word	0x08004ab9
 8004a58:	08004b7d 	.word	0x08004b7d
 8004a5c:	08004b7d 	.word	0x08004b7d
 8004a60:	08004b7d 	.word	0x08004b7d
 8004a64:	08004afb 	.word	0x08004afb
 8004a68:	08004b7d 	.word	0x08004b7d
 8004a6c:	08004b7d 	.word	0x08004b7d
 8004a70:	08004b7d 	.word	0x08004b7d
 8004a74:	08004b3b 	.word	0x08004b3b
 8004a78:	68fb      	ldr	r3, [r7, #12]
 8004a7a:	681b      	ldr	r3, [r3, #0]
 8004a7c:	68b9      	ldr	r1, [r7, #8]
 8004a7e:	4618      	mov	r0, r3
 8004a80:	f000 fa28 	bl	8004ed4 <TIM_OC1_SetConfig>
 8004a84:	68fb      	ldr	r3, [r7, #12]
 8004a86:	681b      	ldr	r3, [r3, #0]
 8004a88:	699a      	ldr	r2, [r3, #24]
 8004a8a:	68fb      	ldr	r3, [r7, #12]
 8004a8c:	681b      	ldr	r3, [r3, #0]
 8004a8e:	f042 0208 	orr.w	r2, r2, #8
 8004a92:	619a      	str	r2, [r3, #24]
 8004a94:	68fb      	ldr	r3, [r7, #12]
 8004a96:	681b      	ldr	r3, [r3, #0]
 8004a98:	699a      	ldr	r2, [r3, #24]
 8004a9a:	68fb      	ldr	r3, [r7, #12]
 8004a9c:	681b      	ldr	r3, [r3, #0]
 8004a9e:	f022 0204 	bic.w	r2, r2, #4
 8004aa2:	619a      	str	r2, [r3, #24]
 8004aa4:	68fb      	ldr	r3, [r7, #12]
 8004aa6:	681b      	ldr	r3, [r3, #0]
 8004aa8:	6999      	ldr	r1, [r3, #24]
 8004aaa:	68bb      	ldr	r3, [r7, #8]
 8004aac:	691a      	ldr	r2, [r3, #16]
 8004aae:	68fb      	ldr	r3, [r7, #12]
 8004ab0:	681b      	ldr	r3, [r3, #0]
 8004ab2:	430a      	orrs	r2, r1
 8004ab4:	619a      	str	r2, [r3, #24]
 8004ab6:	e064      	b.n	8004b82 <HAL_TIM_PWM_ConfigChannel+0x172>
 8004ab8:	68fb      	ldr	r3, [r7, #12]
 8004aba:	681b      	ldr	r3, [r3, #0]
 8004abc:	68b9      	ldr	r1, [r7, #8]
 8004abe:	4618      	mov	r0, r3
 8004ac0:	f000 fa78 	bl	8004fb4 <TIM_OC2_SetConfig>
 8004ac4:	68fb      	ldr	r3, [r7, #12]
 8004ac6:	681b      	ldr	r3, [r3, #0]
 8004ac8:	699a      	ldr	r2, [r3, #24]
 8004aca:	68fb      	ldr	r3, [r7, #12]
 8004acc:	681b      	ldr	r3, [r3, #0]
 8004ace:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004ad2:	619a      	str	r2, [r3, #24]
 8004ad4:	68fb      	ldr	r3, [r7, #12]
 8004ad6:	681b      	ldr	r3, [r3, #0]
 8004ad8:	699a      	ldr	r2, [r3, #24]
 8004ada:	68fb      	ldr	r3, [r7, #12]
 8004adc:	681b      	ldr	r3, [r3, #0]
 8004ade:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004ae2:	619a      	str	r2, [r3, #24]
 8004ae4:	68fb      	ldr	r3, [r7, #12]
 8004ae6:	681b      	ldr	r3, [r3, #0]
 8004ae8:	6999      	ldr	r1, [r3, #24]
 8004aea:	68bb      	ldr	r3, [r7, #8]
 8004aec:	691b      	ldr	r3, [r3, #16]
 8004aee:	021a      	lsls	r2, r3, #8
 8004af0:	68fb      	ldr	r3, [r7, #12]
 8004af2:	681b      	ldr	r3, [r3, #0]
 8004af4:	430a      	orrs	r2, r1
 8004af6:	619a      	str	r2, [r3, #24]
 8004af8:	e043      	b.n	8004b82 <HAL_TIM_PWM_ConfigChannel+0x172>
 8004afa:	68fb      	ldr	r3, [r7, #12]
 8004afc:	681b      	ldr	r3, [r3, #0]
 8004afe:	68b9      	ldr	r1, [r7, #8]
 8004b00:	4618      	mov	r0, r3
 8004b02:	f000 facd 	bl	80050a0 <TIM_OC3_SetConfig>
 8004b06:	68fb      	ldr	r3, [r7, #12]
 8004b08:	681b      	ldr	r3, [r3, #0]
 8004b0a:	69da      	ldr	r2, [r3, #28]
 8004b0c:	68fb      	ldr	r3, [r7, #12]
 8004b0e:	681b      	ldr	r3, [r3, #0]
 8004b10:	f042 0208 	orr.w	r2, r2, #8
 8004b14:	61da      	str	r2, [r3, #28]
 8004b16:	68fb      	ldr	r3, [r7, #12]
 8004b18:	681b      	ldr	r3, [r3, #0]
 8004b1a:	69da      	ldr	r2, [r3, #28]
 8004b1c:	68fb      	ldr	r3, [r7, #12]
 8004b1e:	681b      	ldr	r3, [r3, #0]
 8004b20:	f022 0204 	bic.w	r2, r2, #4
 8004b24:	61da      	str	r2, [r3, #28]
 8004b26:	68fb      	ldr	r3, [r7, #12]
 8004b28:	681b      	ldr	r3, [r3, #0]
 8004b2a:	69d9      	ldr	r1, [r3, #28]
 8004b2c:	68bb      	ldr	r3, [r7, #8]
 8004b2e:	691a      	ldr	r2, [r3, #16]
 8004b30:	68fb      	ldr	r3, [r7, #12]
 8004b32:	681b      	ldr	r3, [r3, #0]
 8004b34:	430a      	orrs	r2, r1
 8004b36:	61da      	str	r2, [r3, #28]
 8004b38:	e023      	b.n	8004b82 <HAL_TIM_PWM_ConfigChannel+0x172>
 8004b3a:	68fb      	ldr	r3, [r7, #12]
 8004b3c:	681b      	ldr	r3, [r3, #0]
 8004b3e:	68b9      	ldr	r1, [r7, #8]
 8004b40:	4618      	mov	r0, r3
 8004b42:	f000 fb21 	bl	8005188 <TIM_OC4_SetConfig>
 8004b46:	68fb      	ldr	r3, [r7, #12]
 8004b48:	681b      	ldr	r3, [r3, #0]
 8004b4a:	69da      	ldr	r2, [r3, #28]
 8004b4c:	68fb      	ldr	r3, [r7, #12]
 8004b4e:	681b      	ldr	r3, [r3, #0]
 8004b50:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004b54:	61da      	str	r2, [r3, #28]
 8004b56:	68fb      	ldr	r3, [r7, #12]
 8004b58:	681b      	ldr	r3, [r3, #0]
 8004b5a:	69da      	ldr	r2, [r3, #28]
 8004b5c:	68fb      	ldr	r3, [r7, #12]
 8004b5e:	681b      	ldr	r3, [r3, #0]
 8004b60:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004b64:	61da      	str	r2, [r3, #28]
 8004b66:	68fb      	ldr	r3, [r7, #12]
 8004b68:	681b      	ldr	r3, [r3, #0]
 8004b6a:	69d9      	ldr	r1, [r3, #28]
 8004b6c:	68bb      	ldr	r3, [r7, #8]
 8004b6e:	691b      	ldr	r3, [r3, #16]
 8004b70:	021a      	lsls	r2, r3, #8
 8004b72:	68fb      	ldr	r3, [r7, #12]
 8004b74:	681b      	ldr	r3, [r3, #0]
 8004b76:	430a      	orrs	r2, r1
 8004b78:	61da      	str	r2, [r3, #28]
 8004b7a:	e002      	b.n	8004b82 <HAL_TIM_PWM_ConfigChannel+0x172>
 8004b7c:	2301      	movs	r3, #1
 8004b7e:	75fb      	strb	r3, [r7, #23]
 8004b80:	bf00      	nop
 8004b82:	68fb      	ldr	r3, [r7, #12]
 8004b84:	2200      	movs	r2, #0
 8004b86:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004b8a:	7dfb      	ldrb	r3, [r7, #23]
 8004b8c:	4618      	mov	r0, r3
 8004b8e:	3718      	adds	r7, #24
 8004b90:	46bd      	mov	sp, r7
 8004b92:	bd80      	pop	{r7, pc}

08004b94 <HAL_TIM_ConfigClockSource>:
 8004b94:	b580      	push	{r7, lr}
 8004b96:	b084      	sub	sp, #16
 8004b98:	af00      	add	r7, sp, #0
 8004b9a:	6078      	str	r0, [r7, #4]
 8004b9c:	6039      	str	r1, [r7, #0]
 8004b9e:	2300      	movs	r3, #0
 8004ba0:	73fb      	strb	r3, [r7, #15]
 8004ba2:	687b      	ldr	r3, [r7, #4]
 8004ba4:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004ba8:	2b01      	cmp	r3, #1
 8004baa:	d101      	bne.n	8004bb0 <HAL_TIM_ConfigClockSource+0x1c>
 8004bac:	2302      	movs	r3, #2
 8004bae:	e0b4      	b.n	8004d1a <HAL_TIM_ConfigClockSource+0x186>
 8004bb0:	687b      	ldr	r3, [r7, #4]
 8004bb2:	2201      	movs	r2, #1
 8004bb4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004bb8:	687b      	ldr	r3, [r7, #4]
 8004bba:	2202      	movs	r2, #2
 8004bbc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004bc0:	687b      	ldr	r3, [r7, #4]
 8004bc2:	681b      	ldr	r3, [r3, #0]
 8004bc4:	689b      	ldr	r3, [r3, #8]
 8004bc6:	60bb      	str	r3, [r7, #8]
 8004bc8:	68bb      	ldr	r3, [r7, #8]
 8004bca:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8004bce:	60bb      	str	r3, [r7, #8]
 8004bd0:	68bb      	ldr	r3, [r7, #8]
 8004bd2:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8004bd6:	60bb      	str	r3, [r7, #8]
 8004bd8:	687b      	ldr	r3, [r7, #4]
 8004bda:	681b      	ldr	r3, [r3, #0]
 8004bdc:	68ba      	ldr	r2, [r7, #8]
 8004bde:	609a      	str	r2, [r3, #8]
 8004be0:	683b      	ldr	r3, [r7, #0]
 8004be2:	681b      	ldr	r3, [r3, #0]
 8004be4:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8004be8:	d03e      	beq.n	8004c68 <HAL_TIM_ConfigClockSource+0xd4>
 8004bea:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8004bee:	f200 8087 	bhi.w	8004d00 <HAL_TIM_ConfigClockSource+0x16c>
 8004bf2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004bf6:	f000 8086 	beq.w	8004d06 <HAL_TIM_ConfigClockSource+0x172>
 8004bfa:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004bfe:	d87f      	bhi.n	8004d00 <HAL_TIM_ConfigClockSource+0x16c>
 8004c00:	2b70      	cmp	r3, #112	@ 0x70
 8004c02:	d01a      	beq.n	8004c3a <HAL_TIM_ConfigClockSource+0xa6>
 8004c04:	2b70      	cmp	r3, #112	@ 0x70
 8004c06:	d87b      	bhi.n	8004d00 <HAL_TIM_ConfigClockSource+0x16c>
 8004c08:	2b60      	cmp	r3, #96	@ 0x60
 8004c0a:	d050      	beq.n	8004cae <HAL_TIM_ConfigClockSource+0x11a>
 8004c0c:	2b60      	cmp	r3, #96	@ 0x60
 8004c0e:	d877      	bhi.n	8004d00 <HAL_TIM_ConfigClockSource+0x16c>
 8004c10:	2b50      	cmp	r3, #80	@ 0x50
 8004c12:	d03c      	beq.n	8004c8e <HAL_TIM_ConfigClockSource+0xfa>
 8004c14:	2b50      	cmp	r3, #80	@ 0x50
 8004c16:	d873      	bhi.n	8004d00 <HAL_TIM_ConfigClockSource+0x16c>
 8004c18:	2b40      	cmp	r3, #64	@ 0x40
 8004c1a:	d058      	beq.n	8004cce <HAL_TIM_ConfigClockSource+0x13a>
 8004c1c:	2b40      	cmp	r3, #64	@ 0x40
 8004c1e:	d86f      	bhi.n	8004d00 <HAL_TIM_ConfigClockSource+0x16c>
 8004c20:	2b30      	cmp	r3, #48	@ 0x30
 8004c22:	d064      	beq.n	8004cee <HAL_TIM_ConfigClockSource+0x15a>
 8004c24:	2b30      	cmp	r3, #48	@ 0x30
 8004c26:	d86b      	bhi.n	8004d00 <HAL_TIM_ConfigClockSource+0x16c>
 8004c28:	2b20      	cmp	r3, #32
 8004c2a:	d060      	beq.n	8004cee <HAL_TIM_ConfigClockSource+0x15a>
 8004c2c:	2b20      	cmp	r3, #32
 8004c2e:	d867      	bhi.n	8004d00 <HAL_TIM_ConfigClockSource+0x16c>
 8004c30:	2b00      	cmp	r3, #0
 8004c32:	d05c      	beq.n	8004cee <HAL_TIM_ConfigClockSource+0x15a>
 8004c34:	2b10      	cmp	r3, #16
 8004c36:	d05a      	beq.n	8004cee <HAL_TIM_ConfigClockSource+0x15a>
 8004c38:	e062      	b.n	8004d00 <HAL_TIM_ConfigClockSource+0x16c>
 8004c3a:	687b      	ldr	r3, [r7, #4]
 8004c3c:	6818      	ldr	r0, [r3, #0]
 8004c3e:	683b      	ldr	r3, [r7, #0]
 8004c40:	6899      	ldr	r1, [r3, #8]
 8004c42:	683b      	ldr	r3, [r7, #0]
 8004c44:	685a      	ldr	r2, [r3, #4]
 8004c46:	683b      	ldr	r3, [r7, #0]
 8004c48:	68db      	ldr	r3, [r3, #12]
 8004c4a:	f000 fb6d 	bl	8005328 <TIM_ETR_SetConfig>
 8004c4e:	687b      	ldr	r3, [r7, #4]
 8004c50:	681b      	ldr	r3, [r3, #0]
 8004c52:	689b      	ldr	r3, [r3, #8]
 8004c54:	60bb      	str	r3, [r7, #8]
 8004c56:	68bb      	ldr	r3, [r7, #8]
 8004c58:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8004c5c:	60bb      	str	r3, [r7, #8]
 8004c5e:	687b      	ldr	r3, [r7, #4]
 8004c60:	681b      	ldr	r3, [r3, #0]
 8004c62:	68ba      	ldr	r2, [r7, #8]
 8004c64:	609a      	str	r2, [r3, #8]
 8004c66:	e04f      	b.n	8004d08 <HAL_TIM_ConfigClockSource+0x174>
 8004c68:	687b      	ldr	r3, [r7, #4]
 8004c6a:	6818      	ldr	r0, [r3, #0]
 8004c6c:	683b      	ldr	r3, [r7, #0]
 8004c6e:	6899      	ldr	r1, [r3, #8]
 8004c70:	683b      	ldr	r3, [r7, #0]
 8004c72:	685a      	ldr	r2, [r3, #4]
 8004c74:	683b      	ldr	r3, [r7, #0]
 8004c76:	68db      	ldr	r3, [r3, #12]
 8004c78:	f000 fb56 	bl	8005328 <TIM_ETR_SetConfig>
 8004c7c:	687b      	ldr	r3, [r7, #4]
 8004c7e:	681b      	ldr	r3, [r3, #0]
 8004c80:	689a      	ldr	r2, [r3, #8]
 8004c82:	687b      	ldr	r3, [r7, #4]
 8004c84:	681b      	ldr	r3, [r3, #0]
 8004c86:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8004c8a:	609a      	str	r2, [r3, #8]
 8004c8c:	e03c      	b.n	8004d08 <HAL_TIM_ConfigClockSource+0x174>
 8004c8e:	687b      	ldr	r3, [r7, #4]
 8004c90:	6818      	ldr	r0, [r3, #0]
 8004c92:	683b      	ldr	r3, [r7, #0]
 8004c94:	6859      	ldr	r1, [r3, #4]
 8004c96:	683b      	ldr	r3, [r7, #0]
 8004c98:	68db      	ldr	r3, [r3, #12]
 8004c9a:	461a      	mov	r2, r3
 8004c9c:	f000 faca 	bl	8005234 <TIM_TI1_ConfigInputStage>
 8004ca0:	687b      	ldr	r3, [r7, #4]
 8004ca2:	681b      	ldr	r3, [r3, #0]
 8004ca4:	2150      	movs	r1, #80	@ 0x50
 8004ca6:	4618      	mov	r0, r3
 8004ca8:	f000 fb23 	bl	80052f2 <TIM_ITRx_SetConfig>
 8004cac:	e02c      	b.n	8004d08 <HAL_TIM_ConfigClockSource+0x174>
 8004cae:	687b      	ldr	r3, [r7, #4]
 8004cb0:	6818      	ldr	r0, [r3, #0]
 8004cb2:	683b      	ldr	r3, [r7, #0]
 8004cb4:	6859      	ldr	r1, [r3, #4]
 8004cb6:	683b      	ldr	r3, [r7, #0]
 8004cb8:	68db      	ldr	r3, [r3, #12]
 8004cba:	461a      	mov	r2, r3
 8004cbc:	f000 fae9 	bl	8005292 <TIM_TI2_ConfigInputStage>
 8004cc0:	687b      	ldr	r3, [r7, #4]
 8004cc2:	681b      	ldr	r3, [r3, #0]
 8004cc4:	2160      	movs	r1, #96	@ 0x60
 8004cc6:	4618      	mov	r0, r3
 8004cc8:	f000 fb13 	bl	80052f2 <TIM_ITRx_SetConfig>
 8004ccc:	e01c      	b.n	8004d08 <HAL_TIM_ConfigClockSource+0x174>
 8004cce:	687b      	ldr	r3, [r7, #4]
 8004cd0:	6818      	ldr	r0, [r3, #0]
 8004cd2:	683b      	ldr	r3, [r7, #0]
 8004cd4:	6859      	ldr	r1, [r3, #4]
 8004cd6:	683b      	ldr	r3, [r7, #0]
 8004cd8:	68db      	ldr	r3, [r3, #12]
 8004cda:	461a      	mov	r2, r3
 8004cdc:	f000 faaa 	bl	8005234 <TIM_TI1_ConfigInputStage>
 8004ce0:	687b      	ldr	r3, [r7, #4]
 8004ce2:	681b      	ldr	r3, [r3, #0]
 8004ce4:	2140      	movs	r1, #64	@ 0x40
 8004ce6:	4618      	mov	r0, r3
 8004ce8:	f000 fb03 	bl	80052f2 <TIM_ITRx_SetConfig>
 8004cec:	e00c      	b.n	8004d08 <HAL_TIM_ConfigClockSource+0x174>
 8004cee:	687b      	ldr	r3, [r7, #4]
 8004cf0:	681a      	ldr	r2, [r3, #0]
 8004cf2:	683b      	ldr	r3, [r7, #0]
 8004cf4:	681b      	ldr	r3, [r3, #0]
 8004cf6:	4619      	mov	r1, r3
 8004cf8:	4610      	mov	r0, r2
 8004cfa:	f000 fafa 	bl	80052f2 <TIM_ITRx_SetConfig>
 8004cfe:	e003      	b.n	8004d08 <HAL_TIM_ConfigClockSource+0x174>
 8004d00:	2301      	movs	r3, #1
 8004d02:	73fb      	strb	r3, [r7, #15]
 8004d04:	e000      	b.n	8004d08 <HAL_TIM_ConfigClockSource+0x174>
 8004d06:	bf00      	nop
 8004d08:	687b      	ldr	r3, [r7, #4]
 8004d0a:	2201      	movs	r2, #1
 8004d0c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004d10:	687b      	ldr	r3, [r7, #4]
 8004d12:	2200      	movs	r2, #0
 8004d14:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004d18:	7bfb      	ldrb	r3, [r7, #15]
 8004d1a:	4618      	mov	r0, r3
 8004d1c:	3710      	adds	r7, #16
 8004d1e:	46bd      	mov	sp, r7
 8004d20:	bd80      	pop	{r7, pc}

08004d22 <HAL_TIM_PeriodElapsedCallback>:
 8004d22:	b480      	push	{r7}
 8004d24:	b083      	sub	sp, #12
 8004d26:	af00      	add	r7, sp, #0
 8004d28:	6078      	str	r0, [r7, #4]
 8004d2a:	bf00      	nop
 8004d2c:	370c      	adds	r7, #12
 8004d2e:	46bd      	mov	sp, r7
 8004d30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d34:	4770      	bx	lr

08004d36 <HAL_TIM_OC_DelayElapsedCallback>:
 8004d36:	b480      	push	{r7}
 8004d38:	b083      	sub	sp, #12
 8004d3a:	af00      	add	r7, sp, #0
 8004d3c:	6078      	str	r0, [r7, #4]
 8004d3e:	bf00      	nop
 8004d40:	370c      	adds	r7, #12
 8004d42:	46bd      	mov	sp, r7
 8004d44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d48:	4770      	bx	lr

08004d4a <HAL_TIM_IC_CaptureCallback>:
 8004d4a:	b480      	push	{r7}
 8004d4c:	b083      	sub	sp, #12
 8004d4e:	af00      	add	r7, sp, #0
 8004d50:	6078      	str	r0, [r7, #4]
 8004d52:	bf00      	nop
 8004d54:	370c      	adds	r7, #12
 8004d56:	46bd      	mov	sp, r7
 8004d58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d5c:	4770      	bx	lr

08004d5e <HAL_TIM_PWM_PulseFinishedCallback>:
 8004d5e:	b480      	push	{r7}
 8004d60:	b083      	sub	sp, #12
 8004d62:	af00      	add	r7, sp, #0
 8004d64:	6078      	str	r0, [r7, #4]
 8004d66:	bf00      	nop
 8004d68:	370c      	adds	r7, #12
 8004d6a:	46bd      	mov	sp, r7
 8004d6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d70:	4770      	bx	lr

08004d72 <HAL_TIM_TriggerCallback>:
 8004d72:	b480      	push	{r7}
 8004d74:	b083      	sub	sp, #12
 8004d76:	af00      	add	r7, sp, #0
 8004d78:	6078      	str	r0, [r7, #4]
 8004d7a:	bf00      	nop
 8004d7c:	370c      	adds	r7, #12
 8004d7e:	46bd      	mov	sp, r7
 8004d80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d84:	4770      	bx	lr
	...

08004d88 <TIM_Base_SetConfig>:
 8004d88:	b480      	push	{r7}
 8004d8a:	b085      	sub	sp, #20
 8004d8c:	af00      	add	r7, sp, #0
 8004d8e:	6078      	str	r0, [r7, #4]
 8004d90:	6039      	str	r1, [r7, #0]
 8004d92:	687b      	ldr	r3, [r7, #4]
 8004d94:	681b      	ldr	r3, [r3, #0]
 8004d96:	60fb      	str	r3, [r7, #12]
 8004d98:	687b      	ldr	r3, [r7, #4]
 8004d9a:	4a43      	ldr	r2, [pc, #268]	@ (8004ea8 <TIM_Base_SetConfig+0x120>)
 8004d9c:	4293      	cmp	r3, r2
 8004d9e:	d013      	beq.n	8004dc8 <TIM_Base_SetConfig+0x40>
 8004da0:	687b      	ldr	r3, [r7, #4]
 8004da2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004da6:	d00f      	beq.n	8004dc8 <TIM_Base_SetConfig+0x40>
 8004da8:	687b      	ldr	r3, [r7, #4]
 8004daa:	4a40      	ldr	r2, [pc, #256]	@ (8004eac <TIM_Base_SetConfig+0x124>)
 8004dac:	4293      	cmp	r3, r2
 8004dae:	d00b      	beq.n	8004dc8 <TIM_Base_SetConfig+0x40>
 8004db0:	687b      	ldr	r3, [r7, #4]
 8004db2:	4a3f      	ldr	r2, [pc, #252]	@ (8004eb0 <TIM_Base_SetConfig+0x128>)
 8004db4:	4293      	cmp	r3, r2
 8004db6:	d007      	beq.n	8004dc8 <TIM_Base_SetConfig+0x40>
 8004db8:	687b      	ldr	r3, [r7, #4]
 8004dba:	4a3e      	ldr	r2, [pc, #248]	@ (8004eb4 <TIM_Base_SetConfig+0x12c>)
 8004dbc:	4293      	cmp	r3, r2
 8004dbe:	d003      	beq.n	8004dc8 <TIM_Base_SetConfig+0x40>
 8004dc0:	687b      	ldr	r3, [r7, #4]
 8004dc2:	4a3d      	ldr	r2, [pc, #244]	@ (8004eb8 <TIM_Base_SetConfig+0x130>)
 8004dc4:	4293      	cmp	r3, r2
 8004dc6:	d108      	bne.n	8004dda <TIM_Base_SetConfig+0x52>
 8004dc8:	68fb      	ldr	r3, [r7, #12]
 8004dca:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004dce:	60fb      	str	r3, [r7, #12]
 8004dd0:	683b      	ldr	r3, [r7, #0]
 8004dd2:	685b      	ldr	r3, [r3, #4]
 8004dd4:	68fa      	ldr	r2, [r7, #12]
 8004dd6:	4313      	orrs	r3, r2
 8004dd8:	60fb      	str	r3, [r7, #12]
 8004dda:	687b      	ldr	r3, [r7, #4]
 8004ddc:	4a32      	ldr	r2, [pc, #200]	@ (8004ea8 <TIM_Base_SetConfig+0x120>)
 8004dde:	4293      	cmp	r3, r2
 8004de0:	d02b      	beq.n	8004e3a <TIM_Base_SetConfig+0xb2>
 8004de2:	687b      	ldr	r3, [r7, #4]
 8004de4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004de8:	d027      	beq.n	8004e3a <TIM_Base_SetConfig+0xb2>
 8004dea:	687b      	ldr	r3, [r7, #4]
 8004dec:	4a2f      	ldr	r2, [pc, #188]	@ (8004eac <TIM_Base_SetConfig+0x124>)
 8004dee:	4293      	cmp	r3, r2
 8004df0:	d023      	beq.n	8004e3a <TIM_Base_SetConfig+0xb2>
 8004df2:	687b      	ldr	r3, [r7, #4]
 8004df4:	4a2e      	ldr	r2, [pc, #184]	@ (8004eb0 <TIM_Base_SetConfig+0x128>)
 8004df6:	4293      	cmp	r3, r2
 8004df8:	d01f      	beq.n	8004e3a <TIM_Base_SetConfig+0xb2>
 8004dfa:	687b      	ldr	r3, [r7, #4]
 8004dfc:	4a2d      	ldr	r2, [pc, #180]	@ (8004eb4 <TIM_Base_SetConfig+0x12c>)
 8004dfe:	4293      	cmp	r3, r2
 8004e00:	d01b      	beq.n	8004e3a <TIM_Base_SetConfig+0xb2>
 8004e02:	687b      	ldr	r3, [r7, #4]
 8004e04:	4a2c      	ldr	r2, [pc, #176]	@ (8004eb8 <TIM_Base_SetConfig+0x130>)
 8004e06:	4293      	cmp	r3, r2
 8004e08:	d017      	beq.n	8004e3a <TIM_Base_SetConfig+0xb2>
 8004e0a:	687b      	ldr	r3, [r7, #4]
 8004e0c:	4a2b      	ldr	r2, [pc, #172]	@ (8004ebc <TIM_Base_SetConfig+0x134>)
 8004e0e:	4293      	cmp	r3, r2
 8004e10:	d013      	beq.n	8004e3a <TIM_Base_SetConfig+0xb2>
 8004e12:	687b      	ldr	r3, [r7, #4]
 8004e14:	4a2a      	ldr	r2, [pc, #168]	@ (8004ec0 <TIM_Base_SetConfig+0x138>)
 8004e16:	4293      	cmp	r3, r2
 8004e18:	d00f      	beq.n	8004e3a <TIM_Base_SetConfig+0xb2>
 8004e1a:	687b      	ldr	r3, [r7, #4]
 8004e1c:	4a29      	ldr	r2, [pc, #164]	@ (8004ec4 <TIM_Base_SetConfig+0x13c>)
 8004e1e:	4293      	cmp	r3, r2
 8004e20:	d00b      	beq.n	8004e3a <TIM_Base_SetConfig+0xb2>
 8004e22:	687b      	ldr	r3, [r7, #4]
 8004e24:	4a28      	ldr	r2, [pc, #160]	@ (8004ec8 <TIM_Base_SetConfig+0x140>)
 8004e26:	4293      	cmp	r3, r2
 8004e28:	d007      	beq.n	8004e3a <TIM_Base_SetConfig+0xb2>
 8004e2a:	687b      	ldr	r3, [r7, #4]
 8004e2c:	4a27      	ldr	r2, [pc, #156]	@ (8004ecc <TIM_Base_SetConfig+0x144>)
 8004e2e:	4293      	cmp	r3, r2
 8004e30:	d003      	beq.n	8004e3a <TIM_Base_SetConfig+0xb2>
 8004e32:	687b      	ldr	r3, [r7, #4]
 8004e34:	4a26      	ldr	r2, [pc, #152]	@ (8004ed0 <TIM_Base_SetConfig+0x148>)
 8004e36:	4293      	cmp	r3, r2
 8004e38:	d108      	bne.n	8004e4c <TIM_Base_SetConfig+0xc4>
 8004e3a:	68fb      	ldr	r3, [r7, #12]
 8004e3c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004e40:	60fb      	str	r3, [r7, #12]
 8004e42:	683b      	ldr	r3, [r7, #0]
 8004e44:	68db      	ldr	r3, [r3, #12]
 8004e46:	68fa      	ldr	r2, [r7, #12]
 8004e48:	4313      	orrs	r3, r2
 8004e4a:	60fb      	str	r3, [r7, #12]
 8004e4c:	68fb      	ldr	r3, [r7, #12]
 8004e4e:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8004e52:	683b      	ldr	r3, [r7, #0]
 8004e54:	695b      	ldr	r3, [r3, #20]
 8004e56:	4313      	orrs	r3, r2
 8004e58:	60fb      	str	r3, [r7, #12]
 8004e5a:	683b      	ldr	r3, [r7, #0]
 8004e5c:	689a      	ldr	r2, [r3, #8]
 8004e5e:	687b      	ldr	r3, [r7, #4]
 8004e60:	62da      	str	r2, [r3, #44]	@ 0x2c
 8004e62:	683b      	ldr	r3, [r7, #0]
 8004e64:	681a      	ldr	r2, [r3, #0]
 8004e66:	687b      	ldr	r3, [r7, #4]
 8004e68:	629a      	str	r2, [r3, #40]	@ 0x28
 8004e6a:	687b      	ldr	r3, [r7, #4]
 8004e6c:	4a0e      	ldr	r2, [pc, #56]	@ (8004ea8 <TIM_Base_SetConfig+0x120>)
 8004e6e:	4293      	cmp	r3, r2
 8004e70:	d003      	beq.n	8004e7a <TIM_Base_SetConfig+0xf2>
 8004e72:	687b      	ldr	r3, [r7, #4]
 8004e74:	4a10      	ldr	r2, [pc, #64]	@ (8004eb8 <TIM_Base_SetConfig+0x130>)
 8004e76:	4293      	cmp	r3, r2
 8004e78:	d103      	bne.n	8004e82 <TIM_Base_SetConfig+0xfa>
 8004e7a:	683b      	ldr	r3, [r7, #0]
 8004e7c:	691a      	ldr	r2, [r3, #16]
 8004e7e:	687b      	ldr	r3, [r7, #4]
 8004e80:	631a      	str	r2, [r3, #48]	@ 0x30
 8004e82:	687b      	ldr	r3, [r7, #4]
 8004e84:	681b      	ldr	r3, [r3, #0]
 8004e86:	f043 0204 	orr.w	r2, r3, #4
 8004e8a:	687b      	ldr	r3, [r7, #4]
 8004e8c:	601a      	str	r2, [r3, #0]
 8004e8e:	687b      	ldr	r3, [r7, #4]
 8004e90:	2201      	movs	r2, #1
 8004e92:	615a      	str	r2, [r3, #20]
 8004e94:	687b      	ldr	r3, [r7, #4]
 8004e96:	68fa      	ldr	r2, [r7, #12]
 8004e98:	601a      	str	r2, [r3, #0]
 8004e9a:	bf00      	nop
 8004e9c:	3714      	adds	r7, #20
 8004e9e:	46bd      	mov	sp, r7
 8004ea0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ea4:	4770      	bx	lr
 8004ea6:	bf00      	nop
 8004ea8:	40010000 	.word	0x40010000
 8004eac:	40000400 	.word	0x40000400
 8004eb0:	40000800 	.word	0x40000800
 8004eb4:	40000c00 	.word	0x40000c00
 8004eb8:	40010400 	.word	0x40010400
 8004ebc:	40014000 	.word	0x40014000
 8004ec0:	40014400 	.word	0x40014400
 8004ec4:	40014800 	.word	0x40014800
 8004ec8:	40001800 	.word	0x40001800
 8004ecc:	40001c00 	.word	0x40001c00
 8004ed0:	40002000 	.word	0x40002000

08004ed4 <TIM_OC1_SetConfig>:
 8004ed4:	b480      	push	{r7}
 8004ed6:	b087      	sub	sp, #28
 8004ed8:	af00      	add	r7, sp, #0
 8004eda:	6078      	str	r0, [r7, #4]
 8004edc:	6039      	str	r1, [r7, #0]
 8004ede:	687b      	ldr	r3, [r7, #4]
 8004ee0:	6a1b      	ldr	r3, [r3, #32]
 8004ee2:	617b      	str	r3, [r7, #20]
 8004ee4:	687b      	ldr	r3, [r7, #4]
 8004ee6:	6a1b      	ldr	r3, [r3, #32]
 8004ee8:	f023 0201 	bic.w	r2, r3, #1
 8004eec:	687b      	ldr	r3, [r7, #4]
 8004eee:	621a      	str	r2, [r3, #32]
 8004ef0:	687b      	ldr	r3, [r7, #4]
 8004ef2:	685b      	ldr	r3, [r3, #4]
 8004ef4:	613b      	str	r3, [r7, #16]
 8004ef6:	687b      	ldr	r3, [r7, #4]
 8004ef8:	699b      	ldr	r3, [r3, #24]
 8004efa:	60fb      	str	r3, [r7, #12]
 8004efc:	68fb      	ldr	r3, [r7, #12]
 8004efe:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004f02:	60fb      	str	r3, [r7, #12]
 8004f04:	68fb      	ldr	r3, [r7, #12]
 8004f06:	f023 0303 	bic.w	r3, r3, #3
 8004f0a:	60fb      	str	r3, [r7, #12]
 8004f0c:	683b      	ldr	r3, [r7, #0]
 8004f0e:	681b      	ldr	r3, [r3, #0]
 8004f10:	68fa      	ldr	r2, [r7, #12]
 8004f12:	4313      	orrs	r3, r2
 8004f14:	60fb      	str	r3, [r7, #12]
 8004f16:	697b      	ldr	r3, [r7, #20]
 8004f18:	f023 0302 	bic.w	r3, r3, #2
 8004f1c:	617b      	str	r3, [r7, #20]
 8004f1e:	683b      	ldr	r3, [r7, #0]
 8004f20:	689b      	ldr	r3, [r3, #8]
 8004f22:	697a      	ldr	r2, [r7, #20]
 8004f24:	4313      	orrs	r3, r2
 8004f26:	617b      	str	r3, [r7, #20]
 8004f28:	687b      	ldr	r3, [r7, #4]
 8004f2a:	4a20      	ldr	r2, [pc, #128]	@ (8004fac <TIM_OC1_SetConfig+0xd8>)
 8004f2c:	4293      	cmp	r3, r2
 8004f2e:	d003      	beq.n	8004f38 <TIM_OC1_SetConfig+0x64>
 8004f30:	687b      	ldr	r3, [r7, #4]
 8004f32:	4a1f      	ldr	r2, [pc, #124]	@ (8004fb0 <TIM_OC1_SetConfig+0xdc>)
 8004f34:	4293      	cmp	r3, r2
 8004f36:	d10c      	bne.n	8004f52 <TIM_OC1_SetConfig+0x7e>
 8004f38:	697b      	ldr	r3, [r7, #20]
 8004f3a:	f023 0308 	bic.w	r3, r3, #8
 8004f3e:	617b      	str	r3, [r7, #20]
 8004f40:	683b      	ldr	r3, [r7, #0]
 8004f42:	68db      	ldr	r3, [r3, #12]
 8004f44:	697a      	ldr	r2, [r7, #20]
 8004f46:	4313      	orrs	r3, r2
 8004f48:	617b      	str	r3, [r7, #20]
 8004f4a:	697b      	ldr	r3, [r7, #20]
 8004f4c:	f023 0304 	bic.w	r3, r3, #4
 8004f50:	617b      	str	r3, [r7, #20]
 8004f52:	687b      	ldr	r3, [r7, #4]
 8004f54:	4a15      	ldr	r2, [pc, #84]	@ (8004fac <TIM_OC1_SetConfig+0xd8>)
 8004f56:	4293      	cmp	r3, r2
 8004f58:	d003      	beq.n	8004f62 <TIM_OC1_SetConfig+0x8e>
 8004f5a:	687b      	ldr	r3, [r7, #4]
 8004f5c:	4a14      	ldr	r2, [pc, #80]	@ (8004fb0 <TIM_OC1_SetConfig+0xdc>)
 8004f5e:	4293      	cmp	r3, r2
 8004f60:	d111      	bne.n	8004f86 <TIM_OC1_SetConfig+0xb2>
 8004f62:	693b      	ldr	r3, [r7, #16]
 8004f64:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8004f68:	613b      	str	r3, [r7, #16]
 8004f6a:	693b      	ldr	r3, [r7, #16]
 8004f6c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8004f70:	613b      	str	r3, [r7, #16]
 8004f72:	683b      	ldr	r3, [r7, #0]
 8004f74:	695b      	ldr	r3, [r3, #20]
 8004f76:	693a      	ldr	r2, [r7, #16]
 8004f78:	4313      	orrs	r3, r2
 8004f7a:	613b      	str	r3, [r7, #16]
 8004f7c:	683b      	ldr	r3, [r7, #0]
 8004f7e:	699b      	ldr	r3, [r3, #24]
 8004f80:	693a      	ldr	r2, [r7, #16]
 8004f82:	4313      	orrs	r3, r2
 8004f84:	613b      	str	r3, [r7, #16]
 8004f86:	687b      	ldr	r3, [r7, #4]
 8004f88:	693a      	ldr	r2, [r7, #16]
 8004f8a:	605a      	str	r2, [r3, #4]
 8004f8c:	687b      	ldr	r3, [r7, #4]
 8004f8e:	68fa      	ldr	r2, [r7, #12]
 8004f90:	619a      	str	r2, [r3, #24]
 8004f92:	683b      	ldr	r3, [r7, #0]
 8004f94:	685a      	ldr	r2, [r3, #4]
 8004f96:	687b      	ldr	r3, [r7, #4]
 8004f98:	635a      	str	r2, [r3, #52]	@ 0x34
 8004f9a:	687b      	ldr	r3, [r7, #4]
 8004f9c:	697a      	ldr	r2, [r7, #20]
 8004f9e:	621a      	str	r2, [r3, #32]
 8004fa0:	bf00      	nop
 8004fa2:	371c      	adds	r7, #28
 8004fa4:	46bd      	mov	sp, r7
 8004fa6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004faa:	4770      	bx	lr
 8004fac:	40010000 	.word	0x40010000
 8004fb0:	40010400 	.word	0x40010400

08004fb4 <TIM_OC2_SetConfig>:
 8004fb4:	b480      	push	{r7}
 8004fb6:	b087      	sub	sp, #28
 8004fb8:	af00      	add	r7, sp, #0
 8004fba:	6078      	str	r0, [r7, #4]
 8004fbc:	6039      	str	r1, [r7, #0]
 8004fbe:	687b      	ldr	r3, [r7, #4]
 8004fc0:	6a1b      	ldr	r3, [r3, #32]
 8004fc2:	617b      	str	r3, [r7, #20]
 8004fc4:	687b      	ldr	r3, [r7, #4]
 8004fc6:	6a1b      	ldr	r3, [r3, #32]
 8004fc8:	f023 0210 	bic.w	r2, r3, #16
 8004fcc:	687b      	ldr	r3, [r7, #4]
 8004fce:	621a      	str	r2, [r3, #32]
 8004fd0:	687b      	ldr	r3, [r7, #4]
 8004fd2:	685b      	ldr	r3, [r3, #4]
 8004fd4:	613b      	str	r3, [r7, #16]
 8004fd6:	687b      	ldr	r3, [r7, #4]
 8004fd8:	699b      	ldr	r3, [r3, #24]
 8004fda:	60fb      	str	r3, [r7, #12]
 8004fdc:	68fb      	ldr	r3, [r7, #12]
 8004fde:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004fe2:	60fb      	str	r3, [r7, #12]
 8004fe4:	68fb      	ldr	r3, [r7, #12]
 8004fe6:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004fea:	60fb      	str	r3, [r7, #12]
 8004fec:	683b      	ldr	r3, [r7, #0]
 8004fee:	681b      	ldr	r3, [r3, #0]
 8004ff0:	021b      	lsls	r3, r3, #8
 8004ff2:	68fa      	ldr	r2, [r7, #12]
 8004ff4:	4313      	orrs	r3, r2
 8004ff6:	60fb      	str	r3, [r7, #12]
 8004ff8:	697b      	ldr	r3, [r7, #20]
 8004ffa:	f023 0320 	bic.w	r3, r3, #32
 8004ffe:	617b      	str	r3, [r7, #20]
 8005000:	683b      	ldr	r3, [r7, #0]
 8005002:	689b      	ldr	r3, [r3, #8]
 8005004:	011b      	lsls	r3, r3, #4
 8005006:	697a      	ldr	r2, [r7, #20]
 8005008:	4313      	orrs	r3, r2
 800500a:	617b      	str	r3, [r7, #20]
 800500c:	687b      	ldr	r3, [r7, #4]
 800500e:	4a22      	ldr	r2, [pc, #136]	@ (8005098 <TIM_OC2_SetConfig+0xe4>)
 8005010:	4293      	cmp	r3, r2
 8005012:	d003      	beq.n	800501c <TIM_OC2_SetConfig+0x68>
 8005014:	687b      	ldr	r3, [r7, #4]
 8005016:	4a21      	ldr	r2, [pc, #132]	@ (800509c <TIM_OC2_SetConfig+0xe8>)
 8005018:	4293      	cmp	r3, r2
 800501a:	d10d      	bne.n	8005038 <TIM_OC2_SetConfig+0x84>
 800501c:	697b      	ldr	r3, [r7, #20]
 800501e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8005022:	617b      	str	r3, [r7, #20]
 8005024:	683b      	ldr	r3, [r7, #0]
 8005026:	68db      	ldr	r3, [r3, #12]
 8005028:	011b      	lsls	r3, r3, #4
 800502a:	697a      	ldr	r2, [r7, #20]
 800502c:	4313      	orrs	r3, r2
 800502e:	617b      	str	r3, [r7, #20]
 8005030:	697b      	ldr	r3, [r7, #20]
 8005032:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8005036:	617b      	str	r3, [r7, #20]
 8005038:	687b      	ldr	r3, [r7, #4]
 800503a:	4a17      	ldr	r2, [pc, #92]	@ (8005098 <TIM_OC2_SetConfig+0xe4>)
 800503c:	4293      	cmp	r3, r2
 800503e:	d003      	beq.n	8005048 <TIM_OC2_SetConfig+0x94>
 8005040:	687b      	ldr	r3, [r7, #4]
 8005042:	4a16      	ldr	r2, [pc, #88]	@ (800509c <TIM_OC2_SetConfig+0xe8>)
 8005044:	4293      	cmp	r3, r2
 8005046:	d113      	bne.n	8005070 <TIM_OC2_SetConfig+0xbc>
 8005048:	693b      	ldr	r3, [r7, #16]
 800504a:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800504e:	613b      	str	r3, [r7, #16]
 8005050:	693b      	ldr	r3, [r7, #16]
 8005052:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8005056:	613b      	str	r3, [r7, #16]
 8005058:	683b      	ldr	r3, [r7, #0]
 800505a:	695b      	ldr	r3, [r3, #20]
 800505c:	009b      	lsls	r3, r3, #2
 800505e:	693a      	ldr	r2, [r7, #16]
 8005060:	4313      	orrs	r3, r2
 8005062:	613b      	str	r3, [r7, #16]
 8005064:	683b      	ldr	r3, [r7, #0]
 8005066:	699b      	ldr	r3, [r3, #24]
 8005068:	009b      	lsls	r3, r3, #2
 800506a:	693a      	ldr	r2, [r7, #16]
 800506c:	4313      	orrs	r3, r2
 800506e:	613b      	str	r3, [r7, #16]
 8005070:	687b      	ldr	r3, [r7, #4]
 8005072:	693a      	ldr	r2, [r7, #16]
 8005074:	605a      	str	r2, [r3, #4]
 8005076:	687b      	ldr	r3, [r7, #4]
 8005078:	68fa      	ldr	r2, [r7, #12]
 800507a:	619a      	str	r2, [r3, #24]
 800507c:	683b      	ldr	r3, [r7, #0]
 800507e:	685a      	ldr	r2, [r3, #4]
 8005080:	687b      	ldr	r3, [r7, #4]
 8005082:	639a      	str	r2, [r3, #56]	@ 0x38
 8005084:	687b      	ldr	r3, [r7, #4]
 8005086:	697a      	ldr	r2, [r7, #20]
 8005088:	621a      	str	r2, [r3, #32]
 800508a:	bf00      	nop
 800508c:	371c      	adds	r7, #28
 800508e:	46bd      	mov	sp, r7
 8005090:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005094:	4770      	bx	lr
 8005096:	bf00      	nop
 8005098:	40010000 	.word	0x40010000
 800509c:	40010400 	.word	0x40010400

080050a0 <TIM_OC3_SetConfig>:
 80050a0:	b480      	push	{r7}
 80050a2:	b087      	sub	sp, #28
 80050a4:	af00      	add	r7, sp, #0
 80050a6:	6078      	str	r0, [r7, #4]
 80050a8:	6039      	str	r1, [r7, #0]
 80050aa:	687b      	ldr	r3, [r7, #4]
 80050ac:	6a1b      	ldr	r3, [r3, #32]
 80050ae:	617b      	str	r3, [r7, #20]
 80050b0:	687b      	ldr	r3, [r7, #4]
 80050b2:	6a1b      	ldr	r3, [r3, #32]
 80050b4:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 80050b8:	687b      	ldr	r3, [r7, #4]
 80050ba:	621a      	str	r2, [r3, #32]
 80050bc:	687b      	ldr	r3, [r7, #4]
 80050be:	685b      	ldr	r3, [r3, #4]
 80050c0:	613b      	str	r3, [r7, #16]
 80050c2:	687b      	ldr	r3, [r7, #4]
 80050c4:	69db      	ldr	r3, [r3, #28]
 80050c6:	60fb      	str	r3, [r7, #12]
 80050c8:	68fb      	ldr	r3, [r7, #12]
 80050ca:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80050ce:	60fb      	str	r3, [r7, #12]
 80050d0:	68fb      	ldr	r3, [r7, #12]
 80050d2:	f023 0303 	bic.w	r3, r3, #3
 80050d6:	60fb      	str	r3, [r7, #12]
 80050d8:	683b      	ldr	r3, [r7, #0]
 80050da:	681b      	ldr	r3, [r3, #0]
 80050dc:	68fa      	ldr	r2, [r7, #12]
 80050de:	4313      	orrs	r3, r2
 80050e0:	60fb      	str	r3, [r7, #12]
 80050e2:	697b      	ldr	r3, [r7, #20]
 80050e4:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80050e8:	617b      	str	r3, [r7, #20]
 80050ea:	683b      	ldr	r3, [r7, #0]
 80050ec:	689b      	ldr	r3, [r3, #8]
 80050ee:	021b      	lsls	r3, r3, #8
 80050f0:	697a      	ldr	r2, [r7, #20]
 80050f2:	4313      	orrs	r3, r2
 80050f4:	617b      	str	r3, [r7, #20]
 80050f6:	687b      	ldr	r3, [r7, #4]
 80050f8:	4a21      	ldr	r2, [pc, #132]	@ (8005180 <TIM_OC3_SetConfig+0xe0>)
 80050fa:	4293      	cmp	r3, r2
 80050fc:	d003      	beq.n	8005106 <TIM_OC3_SetConfig+0x66>
 80050fe:	687b      	ldr	r3, [r7, #4]
 8005100:	4a20      	ldr	r2, [pc, #128]	@ (8005184 <TIM_OC3_SetConfig+0xe4>)
 8005102:	4293      	cmp	r3, r2
 8005104:	d10d      	bne.n	8005122 <TIM_OC3_SetConfig+0x82>
 8005106:	697b      	ldr	r3, [r7, #20]
 8005108:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800510c:	617b      	str	r3, [r7, #20]
 800510e:	683b      	ldr	r3, [r7, #0]
 8005110:	68db      	ldr	r3, [r3, #12]
 8005112:	021b      	lsls	r3, r3, #8
 8005114:	697a      	ldr	r2, [r7, #20]
 8005116:	4313      	orrs	r3, r2
 8005118:	617b      	str	r3, [r7, #20]
 800511a:	697b      	ldr	r3, [r7, #20]
 800511c:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8005120:	617b      	str	r3, [r7, #20]
 8005122:	687b      	ldr	r3, [r7, #4]
 8005124:	4a16      	ldr	r2, [pc, #88]	@ (8005180 <TIM_OC3_SetConfig+0xe0>)
 8005126:	4293      	cmp	r3, r2
 8005128:	d003      	beq.n	8005132 <TIM_OC3_SetConfig+0x92>
 800512a:	687b      	ldr	r3, [r7, #4]
 800512c:	4a15      	ldr	r2, [pc, #84]	@ (8005184 <TIM_OC3_SetConfig+0xe4>)
 800512e:	4293      	cmp	r3, r2
 8005130:	d113      	bne.n	800515a <TIM_OC3_SetConfig+0xba>
 8005132:	693b      	ldr	r3, [r7, #16]
 8005134:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8005138:	613b      	str	r3, [r7, #16]
 800513a:	693b      	ldr	r3, [r7, #16]
 800513c:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8005140:	613b      	str	r3, [r7, #16]
 8005142:	683b      	ldr	r3, [r7, #0]
 8005144:	695b      	ldr	r3, [r3, #20]
 8005146:	011b      	lsls	r3, r3, #4
 8005148:	693a      	ldr	r2, [r7, #16]
 800514a:	4313      	orrs	r3, r2
 800514c:	613b      	str	r3, [r7, #16]
 800514e:	683b      	ldr	r3, [r7, #0]
 8005150:	699b      	ldr	r3, [r3, #24]
 8005152:	011b      	lsls	r3, r3, #4
 8005154:	693a      	ldr	r2, [r7, #16]
 8005156:	4313      	orrs	r3, r2
 8005158:	613b      	str	r3, [r7, #16]
 800515a:	687b      	ldr	r3, [r7, #4]
 800515c:	693a      	ldr	r2, [r7, #16]
 800515e:	605a      	str	r2, [r3, #4]
 8005160:	687b      	ldr	r3, [r7, #4]
 8005162:	68fa      	ldr	r2, [r7, #12]
 8005164:	61da      	str	r2, [r3, #28]
 8005166:	683b      	ldr	r3, [r7, #0]
 8005168:	685a      	ldr	r2, [r3, #4]
 800516a:	687b      	ldr	r3, [r7, #4]
 800516c:	63da      	str	r2, [r3, #60]	@ 0x3c
 800516e:	687b      	ldr	r3, [r7, #4]
 8005170:	697a      	ldr	r2, [r7, #20]
 8005172:	621a      	str	r2, [r3, #32]
 8005174:	bf00      	nop
 8005176:	371c      	adds	r7, #28
 8005178:	46bd      	mov	sp, r7
 800517a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800517e:	4770      	bx	lr
 8005180:	40010000 	.word	0x40010000
 8005184:	40010400 	.word	0x40010400

08005188 <TIM_OC4_SetConfig>:
 8005188:	b480      	push	{r7}
 800518a:	b087      	sub	sp, #28
 800518c:	af00      	add	r7, sp, #0
 800518e:	6078      	str	r0, [r7, #4]
 8005190:	6039      	str	r1, [r7, #0]
 8005192:	687b      	ldr	r3, [r7, #4]
 8005194:	6a1b      	ldr	r3, [r3, #32]
 8005196:	613b      	str	r3, [r7, #16]
 8005198:	687b      	ldr	r3, [r7, #4]
 800519a:	6a1b      	ldr	r3, [r3, #32]
 800519c:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 80051a0:	687b      	ldr	r3, [r7, #4]
 80051a2:	621a      	str	r2, [r3, #32]
 80051a4:	687b      	ldr	r3, [r7, #4]
 80051a6:	685b      	ldr	r3, [r3, #4]
 80051a8:	617b      	str	r3, [r7, #20]
 80051aa:	687b      	ldr	r3, [r7, #4]
 80051ac:	69db      	ldr	r3, [r3, #28]
 80051ae:	60fb      	str	r3, [r7, #12]
 80051b0:	68fb      	ldr	r3, [r7, #12]
 80051b2:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80051b6:	60fb      	str	r3, [r7, #12]
 80051b8:	68fb      	ldr	r3, [r7, #12]
 80051ba:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80051be:	60fb      	str	r3, [r7, #12]
 80051c0:	683b      	ldr	r3, [r7, #0]
 80051c2:	681b      	ldr	r3, [r3, #0]
 80051c4:	021b      	lsls	r3, r3, #8
 80051c6:	68fa      	ldr	r2, [r7, #12]
 80051c8:	4313      	orrs	r3, r2
 80051ca:	60fb      	str	r3, [r7, #12]
 80051cc:	693b      	ldr	r3, [r7, #16]
 80051ce:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80051d2:	613b      	str	r3, [r7, #16]
 80051d4:	683b      	ldr	r3, [r7, #0]
 80051d6:	689b      	ldr	r3, [r3, #8]
 80051d8:	031b      	lsls	r3, r3, #12
 80051da:	693a      	ldr	r2, [r7, #16]
 80051dc:	4313      	orrs	r3, r2
 80051de:	613b      	str	r3, [r7, #16]
 80051e0:	687b      	ldr	r3, [r7, #4]
 80051e2:	4a12      	ldr	r2, [pc, #72]	@ (800522c <TIM_OC4_SetConfig+0xa4>)
 80051e4:	4293      	cmp	r3, r2
 80051e6:	d003      	beq.n	80051f0 <TIM_OC4_SetConfig+0x68>
 80051e8:	687b      	ldr	r3, [r7, #4]
 80051ea:	4a11      	ldr	r2, [pc, #68]	@ (8005230 <TIM_OC4_SetConfig+0xa8>)
 80051ec:	4293      	cmp	r3, r2
 80051ee:	d109      	bne.n	8005204 <TIM_OC4_SetConfig+0x7c>
 80051f0:	697b      	ldr	r3, [r7, #20]
 80051f2:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80051f6:	617b      	str	r3, [r7, #20]
 80051f8:	683b      	ldr	r3, [r7, #0]
 80051fa:	695b      	ldr	r3, [r3, #20]
 80051fc:	019b      	lsls	r3, r3, #6
 80051fe:	697a      	ldr	r2, [r7, #20]
 8005200:	4313      	orrs	r3, r2
 8005202:	617b      	str	r3, [r7, #20]
 8005204:	687b      	ldr	r3, [r7, #4]
 8005206:	697a      	ldr	r2, [r7, #20]
 8005208:	605a      	str	r2, [r3, #4]
 800520a:	687b      	ldr	r3, [r7, #4]
 800520c:	68fa      	ldr	r2, [r7, #12]
 800520e:	61da      	str	r2, [r3, #28]
 8005210:	683b      	ldr	r3, [r7, #0]
 8005212:	685a      	ldr	r2, [r3, #4]
 8005214:	687b      	ldr	r3, [r7, #4]
 8005216:	641a      	str	r2, [r3, #64]	@ 0x40
 8005218:	687b      	ldr	r3, [r7, #4]
 800521a:	693a      	ldr	r2, [r7, #16]
 800521c:	621a      	str	r2, [r3, #32]
 800521e:	bf00      	nop
 8005220:	371c      	adds	r7, #28
 8005222:	46bd      	mov	sp, r7
 8005224:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005228:	4770      	bx	lr
 800522a:	bf00      	nop
 800522c:	40010000 	.word	0x40010000
 8005230:	40010400 	.word	0x40010400

08005234 <TIM_TI1_ConfigInputStage>:
 8005234:	b480      	push	{r7}
 8005236:	b087      	sub	sp, #28
 8005238:	af00      	add	r7, sp, #0
 800523a:	60f8      	str	r0, [r7, #12]
 800523c:	60b9      	str	r1, [r7, #8]
 800523e:	607a      	str	r2, [r7, #4]
 8005240:	68fb      	ldr	r3, [r7, #12]
 8005242:	6a1b      	ldr	r3, [r3, #32]
 8005244:	617b      	str	r3, [r7, #20]
 8005246:	68fb      	ldr	r3, [r7, #12]
 8005248:	6a1b      	ldr	r3, [r3, #32]
 800524a:	f023 0201 	bic.w	r2, r3, #1
 800524e:	68fb      	ldr	r3, [r7, #12]
 8005250:	621a      	str	r2, [r3, #32]
 8005252:	68fb      	ldr	r3, [r7, #12]
 8005254:	699b      	ldr	r3, [r3, #24]
 8005256:	613b      	str	r3, [r7, #16]
 8005258:	693b      	ldr	r3, [r7, #16]
 800525a:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800525e:	613b      	str	r3, [r7, #16]
 8005260:	687b      	ldr	r3, [r7, #4]
 8005262:	011b      	lsls	r3, r3, #4
 8005264:	693a      	ldr	r2, [r7, #16]
 8005266:	4313      	orrs	r3, r2
 8005268:	613b      	str	r3, [r7, #16]
 800526a:	697b      	ldr	r3, [r7, #20]
 800526c:	f023 030a 	bic.w	r3, r3, #10
 8005270:	617b      	str	r3, [r7, #20]
 8005272:	697a      	ldr	r2, [r7, #20]
 8005274:	68bb      	ldr	r3, [r7, #8]
 8005276:	4313      	orrs	r3, r2
 8005278:	617b      	str	r3, [r7, #20]
 800527a:	68fb      	ldr	r3, [r7, #12]
 800527c:	693a      	ldr	r2, [r7, #16]
 800527e:	619a      	str	r2, [r3, #24]
 8005280:	68fb      	ldr	r3, [r7, #12]
 8005282:	697a      	ldr	r2, [r7, #20]
 8005284:	621a      	str	r2, [r3, #32]
 8005286:	bf00      	nop
 8005288:	371c      	adds	r7, #28
 800528a:	46bd      	mov	sp, r7
 800528c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005290:	4770      	bx	lr

08005292 <TIM_TI2_ConfigInputStage>:
 8005292:	b480      	push	{r7}
 8005294:	b087      	sub	sp, #28
 8005296:	af00      	add	r7, sp, #0
 8005298:	60f8      	str	r0, [r7, #12]
 800529a:	60b9      	str	r1, [r7, #8]
 800529c:	607a      	str	r2, [r7, #4]
 800529e:	68fb      	ldr	r3, [r7, #12]
 80052a0:	6a1b      	ldr	r3, [r3, #32]
 80052a2:	617b      	str	r3, [r7, #20]
 80052a4:	68fb      	ldr	r3, [r7, #12]
 80052a6:	6a1b      	ldr	r3, [r3, #32]
 80052a8:	f023 0210 	bic.w	r2, r3, #16
 80052ac:	68fb      	ldr	r3, [r7, #12]
 80052ae:	621a      	str	r2, [r3, #32]
 80052b0:	68fb      	ldr	r3, [r7, #12]
 80052b2:	699b      	ldr	r3, [r3, #24]
 80052b4:	613b      	str	r3, [r7, #16]
 80052b6:	693b      	ldr	r3, [r7, #16]
 80052b8:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 80052bc:	613b      	str	r3, [r7, #16]
 80052be:	687b      	ldr	r3, [r7, #4]
 80052c0:	031b      	lsls	r3, r3, #12
 80052c2:	693a      	ldr	r2, [r7, #16]
 80052c4:	4313      	orrs	r3, r2
 80052c6:	613b      	str	r3, [r7, #16]
 80052c8:	697b      	ldr	r3, [r7, #20]
 80052ca:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 80052ce:	617b      	str	r3, [r7, #20]
 80052d0:	68bb      	ldr	r3, [r7, #8]
 80052d2:	011b      	lsls	r3, r3, #4
 80052d4:	697a      	ldr	r2, [r7, #20]
 80052d6:	4313      	orrs	r3, r2
 80052d8:	617b      	str	r3, [r7, #20]
 80052da:	68fb      	ldr	r3, [r7, #12]
 80052dc:	693a      	ldr	r2, [r7, #16]
 80052de:	619a      	str	r2, [r3, #24]
 80052e0:	68fb      	ldr	r3, [r7, #12]
 80052e2:	697a      	ldr	r2, [r7, #20]
 80052e4:	621a      	str	r2, [r3, #32]
 80052e6:	bf00      	nop
 80052e8:	371c      	adds	r7, #28
 80052ea:	46bd      	mov	sp, r7
 80052ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052f0:	4770      	bx	lr

080052f2 <TIM_ITRx_SetConfig>:
 80052f2:	b480      	push	{r7}
 80052f4:	b085      	sub	sp, #20
 80052f6:	af00      	add	r7, sp, #0
 80052f8:	6078      	str	r0, [r7, #4]
 80052fa:	6039      	str	r1, [r7, #0]
 80052fc:	687b      	ldr	r3, [r7, #4]
 80052fe:	689b      	ldr	r3, [r3, #8]
 8005300:	60fb      	str	r3, [r7, #12]
 8005302:	68fb      	ldr	r3, [r7, #12]
 8005304:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005308:	60fb      	str	r3, [r7, #12]
 800530a:	683a      	ldr	r2, [r7, #0]
 800530c:	68fb      	ldr	r3, [r7, #12]
 800530e:	4313      	orrs	r3, r2
 8005310:	f043 0307 	orr.w	r3, r3, #7
 8005314:	60fb      	str	r3, [r7, #12]
 8005316:	687b      	ldr	r3, [r7, #4]
 8005318:	68fa      	ldr	r2, [r7, #12]
 800531a:	609a      	str	r2, [r3, #8]
 800531c:	bf00      	nop
 800531e:	3714      	adds	r7, #20
 8005320:	46bd      	mov	sp, r7
 8005322:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005326:	4770      	bx	lr

08005328 <TIM_ETR_SetConfig>:
 8005328:	b480      	push	{r7}
 800532a:	b087      	sub	sp, #28
 800532c:	af00      	add	r7, sp, #0
 800532e:	60f8      	str	r0, [r7, #12]
 8005330:	60b9      	str	r1, [r7, #8]
 8005332:	607a      	str	r2, [r7, #4]
 8005334:	603b      	str	r3, [r7, #0]
 8005336:	68fb      	ldr	r3, [r7, #12]
 8005338:	689b      	ldr	r3, [r3, #8]
 800533a:	617b      	str	r3, [r7, #20]
 800533c:	697b      	ldr	r3, [r7, #20]
 800533e:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8005342:	617b      	str	r3, [r7, #20]
 8005344:	683b      	ldr	r3, [r7, #0]
 8005346:	021a      	lsls	r2, r3, #8
 8005348:	687b      	ldr	r3, [r7, #4]
 800534a:	431a      	orrs	r2, r3
 800534c:	68bb      	ldr	r3, [r7, #8]
 800534e:	4313      	orrs	r3, r2
 8005350:	697a      	ldr	r2, [r7, #20]
 8005352:	4313      	orrs	r3, r2
 8005354:	617b      	str	r3, [r7, #20]
 8005356:	68fb      	ldr	r3, [r7, #12]
 8005358:	697a      	ldr	r2, [r7, #20]
 800535a:	609a      	str	r2, [r3, #8]
 800535c:	bf00      	nop
 800535e:	371c      	adds	r7, #28
 8005360:	46bd      	mov	sp, r7
 8005362:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005366:	4770      	bx	lr

08005368 <TIM_CCxChannelCmd>:
 8005368:	b480      	push	{r7}
 800536a:	b087      	sub	sp, #28
 800536c:	af00      	add	r7, sp, #0
 800536e:	60f8      	str	r0, [r7, #12]
 8005370:	60b9      	str	r1, [r7, #8]
 8005372:	607a      	str	r2, [r7, #4]
 8005374:	68bb      	ldr	r3, [r7, #8]
 8005376:	f003 031f 	and.w	r3, r3, #31
 800537a:	2201      	movs	r2, #1
 800537c:	fa02 f303 	lsl.w	r3, r2, r3
 8005380:	617b      	str	r3, [r7, #20]
 8005382:	68fb      	ldr	r3, [r7, #12]
 8005384:	6a1a      	ldr	r2, [r3, #32]
 8005386:	697b      	ldr	r3, [r7, #20]
 8005388:	43db      	mvns	r3, r3
 800538a:	401a      	ands	r2, r3
 800538c:	68fb      	ldr	r3, [r7, #12]
 800538e:	621a      	str	r2, [r3, #32]
 8005390:	68fb      	ldr	r3, [r7, #12]
 8005392:	6a1a      	ldr	r2, [r3, #32]
 8005394:	68bb      	ldr	r3, [r7, #8]
 8005396:	f003 031f 	and.w	r3, r3, #31
 800539a:	6879      	ldr	r1, [r7, #4]
 800539c:	fa01 f303 	lsl.w	r3, r1, r3
 80053a0:	431a      	orrs	r2, r3
 80053a2:	68fb      	ldr	r3, [r7, #12]
 80053a4:	621a      	str	r2, [r3, #32]
 80053a6:	bf00      	nop
 80053a8:	371c      	adds	r7, #28
 80053aa:	46bd      	mov	sp, r7
 80053ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80053b0:	4770      	bx	lr
	...

080053b4 <HAL_TIMEx_PWMN_Start>:
 80053b4:	b580      	push	{r7, lr}
 80053b6:	b084      	sub	sp, #16
 80053b8:	af00      	add	r7, sp, #0
 80053ba:	6078      	str	r0, [r7, #4]
 80053bc:	6039      	str	r1, [r7, #0]
 80053be:	683b      	ldr	r3, [r7, #0]
 80053c0:	2b00      	cmp	r3, #0
 80053c2:	d109      	bne.n	80053d8 <HAL_TIMEx_PWMN_Start+0x24>
 80053c4:	687b      	ldr	r3, [r7, #4]
 80053c6:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80053ca:	b2db      	uxtb	r3, r3
 80053cc:	2b01      	cmp	r3, #1
 80053ce:	bf14      	ite	ne
 80053d0:	2301      	movne	r3, #1
 80053d2:	2300      	moveq	r3, #0
 80053d4:	b2db      	uxtb	r3, r3
 80053d6:	e022      	b.n	800541e <HAL_TIMEx_PWMN_Start+0x6a>
 80053d8:	683b      	ldr	r3, [r7, #0]
 80053da:	2b04      	cmp	r3, #4
 80053dc:	d109      	bne.n	80053f2 <HAL_TIMEx_PWMN_Start+0x3e>
 80053de:	687b      	ldr	r3, [r7, #4]
 80053e0:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 80053e4:	b2db      	uxtb	r3, r3
 80053e6:	2b01      	cmp	r3, #1
 80053e8:	bf14      	ite	ne
 80053ea:	2301      	movne	r3, #1
 80053ec:	2300      	moveq	r3, #0
 80053ee:	b2db      	uxtb	r3, r3
 80053f0:	e015      	b.n	800541e <HAL_TIMEx_PWMN_Start+0x6a>
 80053f2:	683b      	ldr	r3, [r7, #0]
 80053f4:	2b08      	cmp	r3, #8
 80053f6:	d109      	bne.n	800540c <HAL_TIMEx_PWMN_Start+0x58>
 80053f8:	687b      	ldr	r3, [r7, #4]
 80053fa:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 80053fe:	b2db      	uxtb	r3, r3
 8005400:	2b01      	cmp	r3, #1
 8005402:	bf14      	ite	ne
 8005404:	2301      	movne	r3, #1
 8005406:	2300      	moveq	r3, #0
 8005408:	b2db      	uxtb	r3, r3
 800540a:	e008      	b.n	800541e <HAL_TIMEx_PWMN_Start+0x6a>
 800540c:	687b      	ldr	r3, [r7, #4]
 800540e:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8005412:	b2db      	uxtb	r3, r3
 8005414:	2b01      	cmp	r3, #1
 8005416:	bf14      	ite	ne
 8005418:	2301      	movne	r3, #1
 800541a:	2300      	moveq	r3, #0
 800541c:	b2db      	uxtb	r3, r3
 800541e:	2b00      	cmp	r3, #0
 8005420:	d001      	beq.n	8005426 <HAL_TIMEx_PWMN_Start+0x72>
 8005422:	2301      	movs	r3, #1
 8005424:	e06d      	b.n	8005502 <HAL_TIMEx_PWMN_Start+0x14e>
 8005426:	683b      	ldr	r3, [r7, #0]
 8005428:	2b00      	cmp	r3, #0
 800542a:	d104      	bne.n	8005436 <HAL_TIMEx_PWMN_Start+0x82>
 800542c:	687b      	ldr	r3, [r7, #4]
 800542e:	2202      	movs	r2, #2
 8005430:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005434:	e013      	b.n	800545e <HAL_TIMEx_PWMN_Start+0xaa>
 8005436:	683b      	ldr	r3, [r7, #0]
 8005438:	2b04      	cmp	r3, #4
 800543a:	d104      	bne.n	8005446 <HAL_TIMEx_PWMN_Start+0x92>
 800543c:	687b      	ldr	r3, [r7, #4]
 800543e:	2202      	movs	r2, #2
 8005440:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8005444:	e00b      	b.n	800545e <HAL_TIMEx_PWMN_Start+0xaa>
 8005446:	683b      	ldr	r3, [r7, #0]
 8005448:	2b08      	cmp	r3, #8
 800544a:	d104      	bne.n	8005456 <HAL_TIMEx_PWMN_Start+0xa2>
 800544c:	687b      	ldr	r3, [r7, #4]
 800544e:	2202      	movs	r2, #2
 8005450:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8005454:	e003      	b.n	800545e <HAL_TIMEx_PWMN_Start+0xaa>
 8005456:	687b      	ldr	r3, [r7, #4]
 8005458:	2202      	movs	r2, #2
 800545a:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800545e:	687b      	ldr	r3, [r7, #4]
 8005460:	681b      	ldr	r3, [r3, #0]
 8005462:	2204      	movs	r2, #4
 8005464:	6839      	ldr	r1, [r7, #0]
 8005466:	4618      	mov	r0, r3
 8005468:	f000 f940 	bl	80056ec <TIM_CCxNChannelCmd>
 800546c:	687b      	ldr	r3, [r7, #4]
 800546e:	681b      	ldr	r3, [r3, #0]
 8005470:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8005472:	687b      	ldr	r3, [r7, #4]
 8005474:	681b      	ldr	r3, [r3, #0]
 8005476:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800547a:	645a      	str	r2, [r3, #68]	@ 0x44
 800547c:	687b      	ldr	r3, [r7, #4]
 800547e:	681b      	ldr	r3, [r3, #0]
 8005480:	4a22      	ldr	r2, [pc, #136]	@ (800550c <HAL_TIMEx_PWMN_Start+0x158>)
 8005482:	4293      	cmp	r3, r2
 8005484:	d022      	beq.n	80054cc <HAL_TIMEx_PWMN_Start+0x118>
 8005486:	687b      	ldr	r3, [r7, #4]
 8005488:	681b      	ldr	r3, [r3, #0]
 800548a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800548e:	d01d      	beq.n	80054cc <HAL_TIMEx_PWMN_Start+0x118>
 8005490:	687b      	ldr	r3, [r7, #4]
 8005492:	681b      	ldr	r3, [r3, #0]
 8005494:	4a1e      	ldr	r2, [pc, #120]	@ (8005510 <HAL_TIMEx_PWMN_Start+0x15c>)
 8005496:	4293      	cmp	r3, r2
 8005498:	d018      	beq.n	80054cc <HAL_TIMEx_PWMN_Start+0x118>
 800549a:	687b      	ldr	r3, [r7, #4]
 800549c:	681b      	ldr	r3, [r3, #0]
 800549e:	4a1d      	ldr	r2, [pc, #116]	@ (8005514 <HAL_TIMEx_PWMN_Start+0x160>)
 80054a0:	4293      	cmp	r3, r2
 80054a2:	d013      	beq.n	80054cc <HAL_TIMEx_PWMN_Start+0x118>
 80054a4:	687b      	ldr	r3, [r7, #4]
 80054a6:	681b      	ldr	r3, [r3, #0]
 80054a8:	4a1b      	ldr	r2, [pc, #108]	@ (8005518 <HAL_TIMEx_PWMN_Start+0x164>)
 80054aa:	4293      	cmp	r3, r2
 80054ac:	d00e      	beq.n	80054cc <HAL_TIMEx_PWMN_Start+0x118>
 80054ae:	687b      	ldr	r3, [r7, #4]
 80054b0:	681b      	ldr	r3, [r3, #0]
 80054b2:	4a1a      	ldr	r2, [pc, #104]	@ (800551c <HAL_TIMEx_PWMN_Start+0x168>)
 80054b4:	4293      	cmp	r3, r2
 80054b6:	d009      	beq.n	80054cc <HAL_TIMEx_PWMN_Start+0x118>
 80054b8:	687b      	ldr	r3, [r7, #4]
 80054ba:	681b      	ldr	r3, [r3, #0]
 80054bc:	4a18      	ldr	r2, [pc, #96]	@ (8005520 <HAL_TIMEx_PWMN_Start+0x16c>)
 80054be:	4293      	cmp	r3, r2
 80054c0:	d004      	beq.n	80054cc <HAL_TIMEx_PWMN_Start+0x118>
 80054c2:	687b      	ldr	r3, [r7, #4]
 80054c4:	681b      	ldr	r3, [r3, #0]
 80054c6:	4a17      	ldr	r2, [pc, #92]	@ (8005524 <HAL_TIMEx_PWMN_Start+0x170>)
 80054c8:	4293      	cmp	r3, r2
 80054ca:	d111      	bne.n	80054f0 <HAL_TIMEx_PWMN_Start+0x13c>
 80054cc:	687b      	ldr	r3, [r7, #4]
 80054ce:	681b      	ldr	r3, [r3, #0]
 80054d0:	689b      	ldr	r3, [r3, #8]
 80054d2:	f003 0307 	and.w	r3, r3, #7
 80054d6:	60fb      	str	r3, [r7, #12]
 80054d8:	68fb      	ldr	r3, [r7, #12]
 80054da:	2b06      	cmp	r3, #6
 80054dc:	d010      	beq.n	8005500 <HAL_TIMEx_PWMN_Start+0x14c>
 80054de:	687b      	ldr	r3, [r7, #4]
 80054e0:	681b      	ldr	r3, [r3, #0]
 80054e2:	681a      	ldr	r2, [r3, #0]
 80054e4:	687b      	ldr	r3, [r7, #4]
 80054e6:	681b      	ldr	r3, [r3, #0]
 80054e8:	f042 0201 	orr.w	r2, r2, #1
 80054ec:	601a      	str	r2, [r3, #0]
 80054ee:	e007      	b.n	8005500 <HAL_TIMEx_PWMN_Start+0x14c>
 80054f0:	687b      	ldr	r3, [r7, #4]
 80054f2:	681b      	ldr	r3, [r3, #0]
 80054f4:	681a      	ldr	r2, [r3, #0]
 80054f6:	687b      	ldr	r3, [r7, #4]
 80054f8:	681b      	ldr	r3, [r3, #0]
 80054fa:	f042 0201 	orr.w	r2, r2, #1
 80054fe:	601a      	str	r2, [r3, #0]
 8005500:	2300      	movs	r3, #0
 8005502:	4618      	mov	r0, r3
 8005504:	3710      	adds	r7, #16
 8005506:	46bd      	mov	sp, r7
 8005508:	bd80      	pop	{r7, pc}
 800550a:	bf00      	nop
 800550c:	40010000 	.word	0x40010000
 8005510:	40000400 	.word	0x40000400
 8005514:	40000800 	.word	0x40000800
 8005518:	40000c00 	.word	0x40000c00
 800551c:	40010400 	.word	0x40010400
 8005520:	40014000 	.word	0x40014000
 8005524:	40001800 	.word	0x40001800

08005528 <HAL_TIMEx_MasterConfigSynchronization>:
 8005528:	b480      	push	{r7}
 800552a:	b085      	sub	sp, #20
 800552c:	af00      	add	r7, sp, #0
 800552e:	6078      	str	r0, [r7, #4]
 8005530:	6039      	str	r1, [r7, #0]
 8005532:	687b      	ldr	r3, [r7, #4]
 8005534:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005538:	2b01      	cmp	r3, #1
 800553a:	d101      	bne.n	8005540 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800553c:	2302      	movs	r3, #2
 800553e:	e05a      	b.n	80055f6 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8005540:	687b      	ldr	r3, [r7, #4]
 8005542:	2201      	movs	r2, #1
 8005544:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005548:	687b      	ldr	r3, [r7, #4]
 800554a:	2202      	movs	r2, #2
 800554c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005550:	687b      	ldr	r3, [r7, #4]
 8005552:	681b      	ldr	r3, [r3, #0]
 8005554:	685b      	ldr	r3, [r3, #4]
 8005556:	60fb      	str	r3, [r7, #12]
 8005558:	687b      	ldr	r3, [r7, #4]
 800555a:	681b      	ldr	r3, [r3, #0]
 800555c:	689b      	ldr	r3, [r3, #8]
 800555e:	60bb      	str	r3, [r7, #8]
 8005560:	68fb      	ldr	r3, [r7, #12]
 8005562:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005566:	60fb      	str	r3, [r7, #12]
 8005568:	683b      	ldr	r3, [r7, #0]
 800556a:	681b      	ldr	r3, [r3, #0]
 800556c:	68fa      	ldr	r2, [r7, #12]
 800556e:	4313      	orrs	r3, r2
 8005570:	60fb      	str	r3, [r7, #12]
 8005572:	687b      	ldr	r3, [r7, #4]
 8005574:	681b      	ldr	r3, [r3, #0]
 8005576:	68fa      	ldr	r2, [r7, #12]
 8005578:	605a      	str	r2, [r3, #4]
 800557a:	687b      	ldr	r3, [r7, #4]
 800557c:	681b      	ldr	r3, [r3, #0]
 800557e:	4a21      	ldr	r2, [pc, #132]	@ (8005604 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8005580:	4293      	cmp	r3, r2
 8005582:	d022      	beq.n	80055ca <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005584:	687b      	ldr	r3, [r7, #4]
 8005586:	681b      	ldr	r3, [r3, #0]
 8005588:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800558c:	d01d      	beq.n	80055ca <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800558e:	687b      	ldr	r3, [r7, #4]
 8005590:	681b      	ldr	r3, [r3, #0]
 8005592:	4a1d      	ldr	r2, [pc, #116]	@ (8005608 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8005594:	4293      	cmp	r3, r2
 8005596:	d018      	beq.n	80055ca <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005598:	687b      	ldr	r3, [r7, #4]
 800559a:	681b      	ldr	r3, [r3, #0]
 800559c:	4a1b      	ldr	r2, [pc, #108]	@ (800560c <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 800559e:	4293      	cmp	r3, r2
 80055a0:	d013      	beq.n	80055ca <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80055a2:	687b      	ldr	r3, [r7, #4]
 80055a4:	681b      	ldr	r3, [r3, #0]
 80055a6:	4a1a      	ldr	r2, [pc, #104]	@ (8005610 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 80055a8:	4293      	cmp	r3, r2
 80055aa:	d00e      	beq.n	80055ca <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80055ac:	687b      	ldr	r3, [r7, #4]
 80055ae:	681b      	ldr	r3, [r3, #0]
 80055b0:	4a18      	ldr	r2, [pc, #96]	@ (8005614 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 80055b2:	4293      	cmp	r3, r2
 80055b4:	d009      	beq.n	80055ca <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80055b6:	687b      	ldr	r3, [r7, #4]
 80055b8:	681b      	ldr	r3, [r3, #0]
 80055ba:	4a17      	ldr	r2, [pc, #92]	@ (8005618 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 80055bc:	4293      	cmp	r3, r2
 80055be:	d004      	beq.n	80055ca <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80055c0:	687b      	ldr	r3, [r7, #4]
 80055c2:	681b      	ldr	r3, [r3, #0]
 80055c4:	4a15      	ldr	r2, [pc, #84]	@ (800561c <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 80055c6:	4293      	cmp	r3, r2
 80055c8:	d10c      	bne.n	80055e4 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 80055ca:	68bb      	ldr	r3, [r7, #8]
 80055cc:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80055d0:	60bb      	str	r3, [r7, #8]
 80055d2:	683b      	ldr	r3, [r7, #0]
 80055d4:	685b      	ldr	r3, [r3, #4]
 80055d6:	68ba      	ldr	r2, [r7, #8]
 80055d8:	4313      	orrs	r3, r2
 80055da:	60bb      	str	r3, [r7, #8]
 80055dc:	687b      	ldr	r3, [r7, #4]
 80055de:	681b      	ldr	r3, [r3, #0]
 80055e0:	68ba      	ldr	r2, [r7, #8]
 80055e2:	609a      	str	r2, [r3, #8]
 80055e4:	687b      	ldr	r3, [r7, #4]
 80055e6:	2201      	movs	r2, #1
 80055e8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80055ec:	687b      	ldr	r3, [r7, #4]
 80055ee:	2200      	movs	r2, #0
 80055f0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80055f4:	2300      	movs	r3, #0
 80055f6:	4618      	mov	r0, r3
 80055f8:	3714      	adds	r7, #20
 80055fa:	46bd      	mov	sp, r7
 80055fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005600:	4770      	bx	lr
 8005602:	bf00      	nop
 8005604:	40010000 	.word	0x40010000
 8005608:	40000400 	.word	0x40000400
 800560c:	40000800 	.word	0x40000800
 8005610:	40000c00 	.word	0x40000c00
 8005614:	40010400 	.word	0x40010400
 8005618:	40014000 	.word	0x40014000
 800561c:	40001800 	.word	0x40001800

08005620 <HAL_TIMEx_ConfigBreakDeadTime>:
 8005620:	b480      	push	{r7}
 8005622:	b085      	sub	sp, #20
 8005624:	af00      	add	r7, sp, #0
 8005626:	6078      	str	r0, [r7, #4]
 8005628:	6039      	str	r1, [r7, #0]
 800562a:	2300      	movs	r3, #0
 800562c:	60fb      	str	r3, [r7, #12]
 800562e:	687b      	ldr	r3, [r7, #4]
 8005630:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005634:	2b01      	cmp	r3, #1
 8005636:	d101      	bne.n	800563c <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8005638:	2302      	movs	r3, #2
 800563a:	e03d      	b.n	80056b8 <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 800563c:	687b      	ldr	r3, [r7, #4]
 800563e:	2201      	movs	r2, #1
 8005640:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005644:	68fb      	ldr	r3, [r7, #12]
 8005646:	f023 02ff 	bic.w	r2, r3, #255	@ 0xff
 800564a:	683b      	ldr	r3, [r7, #0]
 800564c:	68db      	ldr	r3, [r3, #12]
 800564e:	4313      	orrs	r3, r2
 8005650:	60fb      	str	r3, [r7, #12]
 8005652:	68fb      	ldr	r3, [r7, #12]
 8005654:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8005658:	683b      	ldr	r3, [r7, #0]
 800565a:	689b      	ldr	r3, [r3, #8]
 800565c:	4313      	orrs	r3, r2
 800565e:	60fb      	str	r3, [r7, #12]
 8005660:	68fb      	ldr	r3, [r7, #12]
 8005662:	f423 6280 	bic.w	r2, r3, #1024	@ 0x400
 8005666:	683b      	ldr	r3, [r7, #0]
 8005668:	685b      	ldr	r3, [r3, #4]
 800566a:	4313      	orrs	r3, r2
 800566c:	60fb      	str	r3, [r7, #12]
 800566e:	68fb      	ldr	r3, [r7, #12]
 8005670:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 8005674:	683b      	ldr	r3, [r7, #0]
 8005676:	681b      	ldr	r3, [r3, #0]
 8005678:	4313      	orrs	r3, r2
 800567a:	60fb      	str	r3, [r7, #12]
 800567c:	68fb      	ldr	r3, [r7, #12]
 800567e:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8005682:	683b      	ldr	r3, [r7, #0]
 8005684:	691b      	ldr	r3, [r3, #16]
 8005686:	4313      	orrs	r3, r2
 8005688:	60fb      	str	r3, [r7, #12]
 800568a:	68fb      	ldr	r3, [r7, #12]
 800568c:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 8005690:	683b      	ldr	r3, [r7, #0]
 8005692:	695b      	ldr	r3, [r3, #20]
 8005694:	4313      	orrs	r3, r2
 8005696:	60fb      	str	r3, [r7, #12]
 8005698:	68fb      	ldr	r3, [r7, #12]
 800569a:	f423 4280 	bic.w	r2, r3, #16384	@ 0x4000
 800569e:	683b      	ldr	r3, [r7, #0]
 80056a0:	69db      	ldr	r3, [r3, #28]
 80056a2:	4313      	orrs	r3, r2
 80056a4:	60fb      	str	r3, [r7, #12]
 80056a6:	687b      	ldr	r3, [r7, #4]
 80056a8:	681b      	ldr	r3, [r3, #0]
 80056aa:	68fa      	ldr	r2, [r7, #12]
 80056ac:	645a      	str	r2, [r3, #68]	@ 0x44
 80056ae:	687b      	ldr	r3, [r7, #4]
 80056b0:	2200      	movs	r2, #0
 80056b2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80056b6:	2300      	movs	r3, #0
 80056b8:	4618      	mov	r0, r3
 80056ba:	3714      	adds	r7, #20
 80056bc:	46bd      	mov	sp, r7
 80056be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056c2:	4770      	bx	lr

080056c4 <HAL_TIMEx_CommutCallback>:
 80056c4:	b480      	push	{r7}
 80056c6:	b083      	sub	sp, #12
 80056c8:	af00      	add	r7, sp, #0
 80056ca:	6078      	str	r0, [r7, #4]
 80056cc:	bf00      	nop
 80056ce:	370c      	adds	r7, #12
 80056d0:	46bd      	mov	sp, r7
 80056d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056d6:	4770      	bx	lr

080056d8 <HAL_TIMEx_BreakCallback>:
 80056d8:	b480      	push	{r7}
 80056da:	b083      	sub	sp, #12
 80056dc:	af00      	add	r7, sp, #0
 80056de:	6078      	str	r0, [r7, #4]
 80056e0:	bf00      	nop
 80056e2:	370c      	adds	r7, #12
 80056e4:	46bd      	mov	sp, r7
 80056e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056ea:	4770      	bx	lr

080056ec <TIM_CCxNChannelCmd>:
 80056ec:	b480      	push	{r7}
 80056ee:	b087      	sub	sp, #28
 80056f0:	af00      	add	r7, sp, #0
 80056f2:	60f8      	str	r0, [r7, #12]
 80056f4:	60b9      	str	r1, [r7, #8]
 80056f6:	607a      	str	r2, [r7, #4]
 80056f8:	68bb      	ldr	r3, [r7, #8]
 80056fa:	f003 030f 	and.w	r3, r3, #15
 80056fe:	2204      	movs	r2, #4
 8005700:	fa02 f303 	lsl.w	r3, r2, r3
 8005704:	617b      	str	r3, [r7, #20]
 8005706:	68fb      	ldr	r3, [r7, #12]
 8005708:	6a1a      	ldr	r2, [r3, #32]
 800570a:	697b      	ldr	r3, [r7, #20]
 800570c:	43db      	mvns	r3, r3
 800570e:	401a      	ands	r2, r3
 8005710:	68fb      	ldr	r3, [r7, #12]
 8005712:	621a      	str	r2, [r3, #32]
 8005714:	68fb      	ldr	r3, [r7, #12]
 8005716:	6a1a      	ldr	r2, [r3, #32]
 8005718:	68bb      	ldr	r3, [r7, #8]
 800571a:	f003 030f 	and.w	r3, r3, #15
 800571e:	6879      	ldr	r1, [r7, #4]
 8005720:	fa01 f303 	lsl.w	r3, r1, r3
 8005724:	431a      	orrs	r2, r3
 8005726:	68fb      	ldr	r3, [r7, #12]
 8005728:	621a      	str	r2, [r3, #32]
 800572a:	bf00      	nop
 800572c:	371c      	adds	r7, #28
 800572e:	46bd      	mov	sp, r7
 8005730:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005734:	4770      	bx	lr

08005736 <HAL_UART_Init>:
 8005736:	b580      	push	{r7, lr}
 8005738:	b082      	sub	sp, #8
 800573a:	af00      	add	r7, sp, #0
 800573c:	6078      	str	r0, [r7, #4]
 800573e:	687b      	ldr	r3, [r7, #4]
 8005740:	2b00      	cmp	r3, #0
 8005742:	d101      	bne.n	8005748 <HAL_UART_Init+0x12>
 8005744:	2301      	movs	r3, #1
 8005746:	e042      	b.n	80057ce <HAL_UART_Init+0x98>
 8005748:	687b      	ldr	r3, [r7, #4]
 800574a:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800574e:	b2db      	uxtb	r3, r3
 8005750:	2b00      	cmp	r3, #0
 8005752:	d106      	bne.n	8005762 <HAL_UART_Init+0x2c>
 8005754:	687b      	ldr	r3, [r7, #4]
 8005756:	2200      	movs	r2, #0
 8005758:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800575c:	6878      	ldr	r0, [r7, #4]
 800575e:	f7fc fcf1 	bl	8002144 <HAL_UART_MspInit>
 8005762:	687b      	ldr	r3, [r7, #4]
 8005764:	2224      	movs	r2, #36	@ 0x24
 8005766:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800576a:	687b      	ldr	r3, [r7, #4]
 800576c:	681b      	ldr	r3, [r3, #0]
 800576e:	68da      	ldr	r2, [r3, #12]
 8005770:	687b      	ldr	r3, [r7, #4]
 8005772:	681b      	ldr	r3, [r3, #0]
 8005774:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8005778:	60da      	str	r2, [r3, #12]
 800577a:	6878      	ldr	r0, [r7, #4]
 800577c:	f000 f972 	bl	8005a64 <UART_SetConfig>
 8005780:	687b      	ldr	r3, [r7, #4]
 8005782:	681b      	ldr	r3, [r3, #0]
 8005784:	691a      	ldr	r2, [r3, #16]
 8005786:	687b      	ldr	r3, [r7, #4]
 8005788:	681b      	ldr	r3, [r3, #0]
 800578a:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 800578e:	611a      	str	r2, [r3, #16]
 8005790:	687b      	ldr	r3, [r7, #4]
 8005792:	681b      	ldr	r3, [r3, #0]
 8005794:	695a      	ldr	r2, [r3, #20]
 8005796:	687b      	ldr	r3, [r7, #4]
 8005798:	681b      	ldr	r3, [r3, #0]
 800579a:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 800579e:	615a      	str	r2, [r3, #20]
 80057a0:	687b      	ldr	r3, [r7, #4]
 80057a2:	681b      	ldr	r3, [r3, #0]
 80057a4:	68da      	ldr	r2, [r3, #12]
 80057a6:	687b      	ldr	r3, [r7, #4]
 80057a8:	681b      	ldr	r3, [r3, #0]
 80057aa:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80057ae:	60da      	str	r2, [r3, #12]
 80057b0:	687b      	ldr	r3, [r7, #4]
 80057b2:	2200      	movs	r2, #0
 80057b4:	645a      	str	r2, [r3, #68]	@ 0x44
 80057b6:	687b      	ldr	r3, [r7, #4]
 80057b8:	2220      	movs	r2, #32
 80057ba:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80057be:	687b      	ldr	r3, [r7, #4]
 80057c0:	2220      	movs	r2, #32
 80057c2:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80057c6:	687b      	ldr	r3, [r7, #4]
 80057c8:	2200      	movs	r2, #0
 80057ca:	635a      	str	r2, [r3, #52]	@ 0x34
 80057cc:	2300      	movs	r3, #0
 80057ce:	4618      	mov	r0, r3
 80057d0:	3708      	adds	r7, #8
 80057d2:	46bd      	mov	sp, r7
 80057d4:	bd80      	pop	{r7, pc}

080057d6 <HAL_UART_Transmit>:
 80057d6:	b580      	push	{r7, lr}
 80057d8:	b08a      	sub	sp, #40	@ 0x28
 80057da:	af02      	add	r7, sp, #8
 80057dc:	60f8      	str	r0, [r7, #12]
 80057de:	60b9      	str	r1, [r7, #8]
 80057e0:	603b      	str	r3, [r7, #0]
 80057e2:	4613      	mov	r3, r2
 80057e4:	80fb      	strh	r3, [r7, #6]
 80057e6:	2300      	movs	r3, #0
 80057e8:	617b      	str	r3, [r7, #20]
 80057ea:	68fb      	ldr	r3, [r7, #12]
 80057ec:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80057f0:	b2db      	uxtb	r3, r3
 80057f2:	2b20      	cmp	r3, #32
 80057f4:	d175      	bne.n	80058e2 <HAL_UART_Transmit+0x10c>
 80057f6:	68bb      	ldr	r3, [r7, #8]
 80057f8:	2b00      	cmp	r3, #0
 80057fa:	d002      	beq.n	8005802 <HAL_UART_Transmit+0x2c>
 80057fc:	88fb      	ldrh	r3, [r7, #6]
 80057fe:	2b00      	cmp	r3, #0
 8005800:	d101      	bne.n	8005806 <HAL_UART_Transmit+0x30>
 8005802:	2301      	movs	r3, #1
 8005804:	e06e      	b.n	80058e4 <HAL_UART_Transmit+0x10e>
 8005806:	68fb      	ldr	r3, [r7, #12]
 8005808:	2200      	movs	r2, #0
 800580a:	645a      	str	r2, [r3, #68]	@ 0x44
 800580c:	68fb      	ldr	r3, [r7, #12]
 800580e:	2221      	movs	r2, #33	@ 0x21
 8005810:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005814:	f7fc febe 	bl	8002594 <HAL_GetTick>
 8005818:	6178      	str	r0, [r7, #20]
 800581a:	68fb      	ldr	r3, [r7, #12]
 800581c:	88fa      	ldrh	r2, [r7, #6]
 800581e:	849a      	strh	r2, [r3, #36]	@ 0x24
 8005820:	68fb      	ldr	r3, [r7, #12]
 8005822:	88fa      	ldrh	r2, [r7, #6]
 8005824:	84da      	strh	r2, [r3, #38]	@ 0x26
 8005826:	68fb      	ldr	r3, [r7, #12]
 8005828:	689b      	ldr	r3, [r3, #8]
 800582a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800582e:	d108      	bne.n	8005842 <HAL_UART_Transmit+0x6c>
 8005830:	68fb      	ldr	r3, [r7, #12]
 8005832:	691b      	ldr	r3, [r3, #16]
 8005834:	2b00      	cmp	r3, #0
 8005836:	d104      	bne.n	8005842 <HAL_UART_Transmit+0x6c>
 8005838:	2300      	movs	r3, #0
 800583a:	61fb      	str	r3, [r7, #28]
 800583c:	68bb      	ldr	r3, [r7, #8]
 800583e:	61bb      	str	r3, [r7, #24]
 8005840:	e003      	b.n	800584a <HAL_UART_Transmit+0x74>
 8005842:	68bb      	ldr	r3, [r7, #8]
 8005844:	61fb      	str	r3, [r7, #28]
 8005846:	2300      	movs	r3, #0
 8005848:	61bb      	str	r3, [r7, #24]
 800584a:	e02e      	b.n	80058aa <HAL_UART_Transmit+0xd4>
 800584c:	683b      	ldr	r3, [r7, #0]
 800584e:	9300      	str	r3, [sp, #0]
 8005850:	697b      	ldr	r3, [r7, #20]
 8005852:	2200      	movs	r2, #0
 8005854:	2180      	movs	r1, #128	@ 0x80
 8005856:	68f8      	ldr	r0, [r7, #12]
 8005858:	f000 f848 	bl	80058ec <UART_WaitOnFlagUntilTimeout>
 800585c:	4603      	mov	r3, r0
 800585e:	2b00      	cmp	r3, #0
 8005860:	d005      	beq.n	800586e <HAL_UART_Transmit+0x98>
 8005862:	68fb      	ldr	r3, [r7, #12]
 8005864:	2220      	movs	r2, #32
 8005866:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800586a:	2303      	movs	r3, #3
 800586c:	e03a      	b.n	80058e4 <HAL_UART_Transmit+0x10e>
 800586e:	69fb      	ldr	r3, [r7, #28]
 8005870:	2b00      	cmp	r3, #0
 8005872:	d10b      	bne.n	800588c <HAL_UART_Transmit+0xb6>
 8005874:	69bb      	ldr	r3, [r7, #24]
 8005876:	881b      	ldrh	r3, [r3, #0]
 8005878:	461a      	mov	r2, r3
 800587a:	68fb      	ldr	r3, [r7, #12]
 800587c:	681b      	ldr	r3, [r3, #0]
 800587e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8005882:	605a      	str	r2, [r3, #4]
 8005884:	69bb      	ldr	r3, [r7, #24]
 8005886:	3302      	adds	r3, #2
 8005888:	61bb      	str	r3, [r7, #24]
 800588a:	e007      	b.n	800589c <HAL_UART_Transmit+0xc6>
 800588c:	69fb      	ldr	r3, [r7, #28]
 800588e:	781a      	ldrb	r2, [r3, #0]
 8005890:	68fb      	ldr	r3, [r7, #12]
 8005892:	681b      	ldr	r3, [r3, #0]
 8005894:	605a      	str	r2, [r3, #4]
 8005896:	69fb      	ldr	r3, [r7, #28]
 8005898:	3301      	adds	r3, #1
 800589a:	61fb      	str	r3, [r7, #28]
 800589c:	68fb      	ldr	r3, [r7, #12]
 800589e:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 80058a0:	b29b      	uxth	r3, r3
 80058a2:	3b01      	subs	r3, #1
 80058a4:	b29a      	uxth	r2, r3
 80058a6:	68fb      	ldr	r3, [r7, #12]
 80058a8:	84da      	strh	r2, [r3, #38]	@ 0x26
 80058aa:	68fb      	ldr	r3, [r7, #12]
 80058ac:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 80058ae:	b29b      	uxth	r3, r3
 80058b0:	2b00      	cmp	r3, #0
 80058b2:	d1cb      	bne.n	800584c <HAL_UART_Transmit+0x76>
 80058b4:	683b      	ldr	r3, [r7, #0]
 80058b6:	9300      	str	r3, [sp, #0]
 80058b8:	697b      	ldr	r3, [r7, #20]
 80058ba:	2200      	movs	r2, #0
 80058bc:	2140      	movs	r1, #64	@ 0x40
 80058be:	68f8      	ldr	r0, [r7, #12]
 80058c0:	f000 f814 	bl	80058ec <UART_WaitOnFlagUntilTimeout>
 80058c4:	4603      	mov	r3, r0
 80058c6:	2b00      	cmp	r3, #0
 80058c8:	d005      	beq.n	80058d6 <HAL_UART_Transmit+0x100>
 80058ca:	68fb      	ldr	r3, [r7, #12]
 80058cc:	2220      	movs	r2, #32
 80058ce:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80058d2:	2303      	movs	r3, #3
 80058d4:	e006      	b.n	80058e4 <HAL_UART_Transmit+0x10e>
 80058d6:	68fb      	ldr	r3, [r7, #12]
 80058d8:	2220      	movs	r2, #32
 80058da:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80058de:	2300      	movs	r3, #0
 80058e0:	e000      	b.n	80058e4 <HAL_UART_Transmit+0x10e>
 80058e2:	2302      	movs	r3, #2
 80058e4:	4618      	mov	r0, r3
 80058e6:	3720      	adds	r7, #32
 80058e8:	46bd      	mov	sp, r7
 80058ea:	bd80      	pop	{r7, pc}

080058ec <UART_WaitOnFlagUntilTimeout>:
 80058ec:	b580      	push	{r7, lr}
 80058ee:	b086      	sub	sp, #24
 80058f0:	af00      	add	r7, sp, #0
 80058f2:	60f8      	str	r0, [r7, #12]
 80058f4:	60b9      	str	r1, [r7, #8]
 80058f6:	603b      	str	r3, [r7, #0]
 80058f8:	4613      	mov	r3, r2
 80058fa:	71fb      	strb	r3, [r7, #7]
 80058fc:	e03b      	b.n	8005976 <UART_WaitOnFlagUntilTimeout+0x8a>
 80058fe:	6a3b      	ldr	r3, [r7, #32]
 8005900:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005904:	d037      	beq.n	8005976 <UART_WaitOnFlagUntilTimeout+0x8a>
 8005906:	f7fc fe45 	bl	8002594 <HAL_GetTick>
 800590a:	4602      	mov	r2, r0
 800590c:	683b      	ldr	r3, [r7, #0]
 800590e:	1ad3      	subs	r3, r2, r3
 8005910:	6a3a      	ldr	r2, [r7, #32]
 8005912:	429a      	cmp	r2, r3
 8005914:	d302      	bcc.n	800591c <UART_WaitOnFlagUntilTimeout+0x30>
 8005916:	6a3b      	ldr	r3, [r7, #32]
 8005918:	2b00      	cmp	r3, #0
 800591a:	d101      	bne.n	8005920 <UART_WaitOnFlagUntilTimeout+0x34>
 800591c:	2303      	movs	r3, #3
 800591e:	e03a      	b.n	8005996 <UART_WaitOnFlagUntilTimeout+0xaa>
 8005920:	68fb      	ldr	r3, [r7, #12]
 8005922:	681b      	ldr	r3, [r3, #0]
 8005924:	68db      	ldr	r3, [r3, #12]
 8005926:	f003 0304 	and.w	r3, r3, #4
 800592a:	2b00      	cmp	r3, #0
 800592c:	d023      	beq.n	8005976 <UART_WaitOnFlagUntilTimeout+0x8a>
 800592e:	68bb      	ldr	r3, [r7, #8]
 8005930:	2b80      	cmp	r3, #128	@ 0x80
 8005932:	d020      	beq.n	8005976 <UART_WaitOnFlagUntilTimeout+0x8a>
 8005934:	68bb      	ldr	r3, [r7, #8]
 8005936:	2b40      	cmp	r3, #64	@ 0x40
 8005938:	d01d      	beq.n	8005976 <UART_WaitOnFlagUntilTimeout+0x8a>
 800593a:	68fb      	ldr	r3, [r7, #12]
 800593c:	681b      	ldr	r3, [r3, #0]
 800593e:	681b      	ldr	r3, [r3, #0]
 8005940:	f003 0308 	and.w	r3, r3, #8
 8005944:	2b08      	cmp	r3, #8
 8005946:	d116      	bne.n	8005976 <UART_WaitOnFlagUntilTimeout+0x8a>
 8005948:	2300      	movs	r3, #0
 800594a:	617b      	str	r3, [r7, #20]
 800594c:	68fb      	ldr	r3, [r7, #12]
 800594e:	681b      	ldr	r3, [r3, #0]
 8005950:	681b      	ldr	r3, [r3, #0]
 8005952:	617b      	str	r3, [r7, #20]
 8005954:	68fb      	ldr	r3, [r7, #12]
 8005956:	681b      	ldr	r3, [r3, #0]
 8005958:	685b      	ldr	r3, [r3, #4]
 800595a:	617b      	str	r3, [r7, #20]
 800595c:	697b      	ldr	r3, [r7, #20]
 800595e:	68f8      	ldr	r0, [r7, #12]
 8005960:	f000 f81d 	bl	800599e <UART_EndRxTransfer>
 8005964:	68fb      	ldr	r3, [r7, #12]
 8005966:	2208      	movs	r2, #8
 8005968:	645a      	str	r2, [r3, #68]	@ 0x44
 800596a:	68fb      	ldr	r3, [r7, #12]
 800596c:	2200      	movs	r2, #0
 800596e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005972:	2301      	movs	r3, #1
 8005974:	e00f      	b.n	8005996 <UART_WaitOnFlagUntilTimeout+0xaa>
 8005976:	68fb      	ldr	r3, [r7, #12]
 8005978:	681b      	ldr	r3, [r3, #0]
 800597a:	681a      	ldr	r2, [r3, #0]
 800597c:	68bb      	ldr	r3, [r7, #8]
 800597e:	4013      	ands	r3, r2
 8005980:	68ba      	ldr	r2, [r7, #8]
 8005982:	429a      	cmp	r2, r3
 8005984:	bf0c      	ite	eq
 8005986:	2301      	moveq	r3, #1
 8005988:	2300      	movne	r3, #0
 800598a:	b2db      	uxtb	r3, r3
 800598c:	461a      	mov	r2, r3
 800598e:	79fb      	ldrb	r3, [r7, #7]
 8005990:	429a      	cmp	r2, r3
 8005992:	d0b4      	beq.n	80058fe <UART_WaitOnFlagUntilTimeout+0x12>
 8005994:	2300      	movs	r3, #0
 8005996:	4618      	mov	r0, r3
 8005998:	3718      	adds	r7, #24
 800599a:	46bd      	mov	sp, r7
 800599c:	bd80      	pop	{r7, pc}

0800599e <UART_EndRxTransfer>:
 800599e:	b480      	push	{r7}
 80059a0:	b095      	sub	sp, #84	@ 0x54
 80059a2:	af00      	add	r7, sp, #0
 80059a4:	6078      	str	r0, [r7, #4]
 80059a6:	687b      	ldr	r3, [r7, #4]
 80059a8:	681b      	ldr	r3, [r3, #0]
 80059aa:	330c      	adds	r3, #12
 80059ac:	637b      	str	r3, [r7, #52]	@ 0x34
 80059ae:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80059b0:	e853 3f00 	ldrex	r3, [r3]
 80059b4:	633b      	str	r3, [r7, #48]	@ 0x30
 80059b6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80059b8:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80059bc:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80059be:	687b      	ldr	r3, [r7, #4]
 80059c0:	681b      	ldr	r3, [r3, #0]
 80059c2:	330c      	adds	r3, #12
 80059c4:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 80059c6:	643a      	str	r2, [r7, #64]	@ 0x40
 80059c8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80059ca:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 80059cc:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 80059ce:	e841 2300 	strex	r3, r2, [r1]
 80059d2:	63bb      	str	r3, [r7, #56]	@ 0x38
 80059d4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80059d6:	2b00      	cmp	r3, #0
 80059d8:	d1e5      	bne.n	80059a6 <UART_EndRxTransfer+0x8>
 80059da:	687b      	ldr	r3, [r7, #4]
 80059dc:	681b      	ldr	r3, [r3, #0]
 80059de:	3314      	adds	r3, #20
 80059e0:	623b      	str	r3, [r7, #32]
 80059e2:	6a3b      	ldr	r3, [r7, #32]
 80059e4:	e853 3f00 	ldrex	r3, [r3]
 80059e8:	61fb      	str	r3, [r7, #28]
 80059ea:	69fb      	ldr	r3, [r7, #28]
 80059ec:	f023 0301 	bic.w	r3, r3, #1
 80059f0:	64bb      	str	r3, [r7, #72]	@ 0x48
 80059f2:	687b      	ldr	r3, [r7, #4]
 80059f4:	681b      	ldr	r3, [r3, #0]
 80059f6:	3314      	adds	r3, #20
 80059f8:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80059fa:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80059fc:	62bb      	str	r3, [r7, #40]	@ 0x28
 80059fe:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8005a00:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8005a02:	e841 2300 	strex	r3, r2, [r1]
 8005a06:	627b      	str	r3, [r7, #36]	@ 0x24
 8005a08:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005a0a:	2b00      	cmp	r3, #0
 8005a0c:	d1e5      	bne.n	80059da <UART_EndRxTransfer+0x3c>
 8005a0e:	687b      	ldr	r3, [r7, #4]
 8005a10:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005a12:	2b01      	cmp	r3, #1
 8005a14:	d119      	bne.n	8005a4a <UART_EndRxTransfer+0xac>
 8005a16:	687b      	ldr	r3, [r7, #4]
 8005a18:	681b      	ldr	r3, [r3, #0]
 8005a1a:	330c      	adds	r3, #12
 8005a1c:	60fb      	str	r3, [r7, #12]
 8005a1e:	68fb      	ldr	r3, [r7, #12]
 8005a20:	e853 3f00 	ldrex	r3, [r3]
 8005a24:	60bb      	str	r3, [r7, #8]
 8005a26:	68bb      	ldr	r3, [r7, #8]
 8005a28:	f023 0310 	bic.w	r3, r3, #16
 8005a2c:	647b      	str	r3, [r7, #68]	@ 0x44
 8005a2e:	687b      	ldr	r3, [r7, #4]
 8005a30:	681b      	ldr	r3, [r3, #0]
 8005a32:	330c      	adds	r3, #12
 8005a34:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8005a36:	61ba      	str	r2, [r7, #24]
 8005a38:	617b      	str	r3, [r7, #20]
 8005a3a:	6979      	ldr	r1, [r7, #20]
 8005a3c:	69ba      	ldr	r2, [r7, #24]
 8005a3e:	e841 2300 	strex	r3, r2, [r1]
 8005a42:	613b      	str	r3, [r7, #16]
 8005a44:	693b      	ldr	r3, [r7, #16]
 8005a46:	2b00      	cmp	r3, #0
 8005a48:	d1e5      	bne.n	8005a16 <UART_EndRxTransfer+0x78>
 8005a4a:	687b      	ldr	r3, [r7, #4]
 8005a4c:	2220      	movs	r2, #32
 8005a4e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005a52:	687b      	ldr	r3, [r7, #4]
 8005a54:	2200      	movs	r2, #0
 8005a56:	631a      	str	r2, [r3, #48]	@ 0x30
 8005a58:	bf00      	nop
 8005a5a:	3754      	adds	r7, #84	@ 0x54
 8005a5c:	46bd      	mov	sp, r7
 8005a5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a62:	4770      	bx	lr

08005a64 <UART_SetConfig>:
 8005a64:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005a68:	b0c0      	sub	sp, #256	@ 0x100
 8005a6a:	af00      	add	r7, sp, #0
 8005a6c:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8005a70:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005a74:	681b      	ldr	r3, [r3, #0]
 8005a76:	691b      	ldr	r3, [r3, #16]
 8005a78:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8005a7c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005a80:	68d9      	ldr	r1, [r3, #12]
 8005a82:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005a86:	681a      	ldr	r2, [r3, #0]
 8005a88:	ea40 0301 	orr.w	r3, r0, r1
 8005a8c:	6113      	str	r3, [r2, #16]
 8005a8e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005a92:	689a      	ldr	r2, [r3, #8]
 8005a94:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005a98:	691b      	ldr	r3, [r3, #16]
 8005a9a:	431a      	orrs	r2, r3
 8005a9c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005aa0:	695b      	ldr	r3, [r3, #20]
 8005aa2:	431a      	orrs	r2, r3
 8005aa4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005aa8:	69db      	ldr	r3, [r3, #28]
 8005aaa:	4313      	orrs	r3, r2
 8005aac:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8005ab0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005ab4:	681b      	ldr	r3, [r3, #0]
 8005ab6:	68db      	ldr	r3, [r3, #12]
 8005ab8:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8005abc:	f021 010c 	bic.w	r1, r1, #12
 8005ac0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005ac4:	681a      	ldr	r2, [r3, #0]
 8005ac6:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8005aca:	430b      	orrs	r3, r1
 8005acc:	60d3      	str	r3, [r2, #12]
 8005ace:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005ad2:	681b      	ldr	r3, [r3, #0]
 8005ad4:	695b      	ldr	r3, [r3, #20]
 8005ad6:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 8005ada:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005ade:	6999      	ldr	r1, [r3, #24]
 8005ae0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005ae4:	681a      	ldr	r2, [r3, #0]
 8005ae6:	ea40 0301 	orr.w	r3, r0, r1
 8005aea:	6153      	str	r3, [r2, #20]
 8005aec:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005af0:	681a      	ldr	r2, [r3, #0]
 8005af2:	4b8f      	ldr	r3, [pc, #572]	@ (8005d30 <UART_SetConfig+0x2cc>)
 8005af4:	429a      	cmp	r2, r3
 8005af6:	d005      	beq.n	8005b04 <UART_SetConfig+0xa0>
 8005af8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005afc:	681a      	ldr	r2, [r3, #0]
 8005afe:	4b8d      	ldr	r3, [pc, #564]	@ (8005d34 <UART_SetConfig+0x2d0>)
 8005b00:	429a      	cmp	r2, r3
 8005b02:	d104      	bne.n	8005b0e <UART_SetConfig+0xaa>
 8005b04:	f7fd ffd8 	bl	8003ab8 <HAL_RCC_GetPCLK2Freq>
 8005b08:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8005b0c:	e003      	b.n	8005b16 <UART_SetConfig+0xb2>
 8005b0e:	f7fd ffbf 	bl	8003a90 <HAL_RCC_GetPCLK1Freq>
 8005b12:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8005b16:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005b1a:	69db      	ldr	r3, [r3, #28]
 8005b1c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8005b20:	f040 810c 	bne.w	8005d3c <UART_SetConfig+0x2d8>
 8005b24:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8005b28:	2200      	movs	r2, #0
 8005b2a:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8005b2e:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 8005b32:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 8005b36:	4622      	mov	r2, r4
 8005b38:	462b      	mov	r3, r5
 8005b3a:	1891      	adds	r1, r2, r2
 8005b3c:	65b9      	str	r1, [r7, #88]	@ 0x58
 8005b3e:	415b      	adcs	r3, r3
 8005b40:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8005b42:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8005b46:	4621      	mov	r1, r4
 8005b48:	eb12 0801 	adds.w	r8, r2, r1
 8005b4c:	4629      	mov	r1, r5
 8005b4e:	eb43 0901 	adc.w	r9, r3, r1
 8005b52:	f04f 0200 	mov.w	r2, #0
 8005b56:	f04f 0300 	mov.w	r3, #0
 8005b5a:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8005b5e:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8005b62:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8005b66:	4690      	mov	r8, r2
 8005b68:	4699      	mov	r9, r3
 8005b6a:	4623      	mov	r3, r4
 8005b6c:	eb18 0303 	adds.w	r3, r8, r3
 8005b70:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8005b74:	462b      	mov	r3, r5
 8005b76:	eb49 0303 	adc.w	r3, r9, r3
 8005b7a:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8005b7e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005b82:	685b      	ldr	r3, [r3, #4]
 8005b84:	2200      	movs	r2, #0
 8005b86:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8005b8a:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 8005b8e:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8005b92:	460b      	mov	r3, r1
 8005b94:	18db      	adds	r3, r3, r3
 8005b96:	653b      	str	r3, [r7, #80]	@ 0x50
 8005b98:	4613      	mov	r3, r2
 8005b9a:	eb42 0303 	adc.w	r3, r2, r3
 8005b9e:	657b      	str	r3, [r7, #84]	@ 0x54
 8005ba0:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8005ba4:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8005ba8:	f7fb f86e 	bl	8000c88 <__aeabi_uldivmod>
 8005bac:	4602      	mov	r2, r0
 8005bae:	460b      	mov	r3, r1
 8005bb0:	4b61      	ldr	r3, [pc, #388]	@ (8005d38 <UART_SetConfig+0x2d4>)
 8005bb2:	fba3 2302 	umull	r2, r3, r3, r2
 8005bb6:	095b      	lsrs	r3, r3, #5
 8005bb8:	011c      	lsls	r4, r3, #4
 8005bba:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8005bbe:	2200      	movs	r2, #0
 8005bc0:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8005bc4:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8005bc8:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8005bcc:	4642      	mov	r2, r8
 8005bce:	464b      	mov	r3, r9
 8005bd0:	1891      	adds	r1, r2, r2
 8005bd2:	64b9      	str	r1, [r7, #72]	@ 0x48
 8005bd4:	415b      	adcs	r3, r3
 8005bd6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8005bd8:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8005bdc:	4641      	mov	r1, r8
 8005bde:	eb12 0a01 	adds.w	sl, r2, r1
 8005be2:	4649      	mov	r1, r9
 8005be4:	eb43 0b01 	adc.w	fp, r3, r1
 8005be8:	f04f 0200 	mov.w	r2, #0
 8005bec:	f04f 0300 	mov.w	r3, #0
 8005bf0:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8005bf4:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8005bf8:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8005bfc:	4692      	mov	sl, r2
 8005bfe:	469b      	mov	fp, r3
 8005c00:	4643      	mov	r3, r8
 8005c02:	eb1a 0303 	adds.w	r3, sl, r3
 8005c06:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8005c0a:	464b      	mov	r3, r9
 8005c0c:	eb4b 0303 	adc.w	r3, fp, r3
 8005c10:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8005c14:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005c18:	685b      	ldr	r3, [r3, #4]
 8005c1a:	2200      	movs	r2, #0
 8005c1c:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8005c20:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8005c24:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8005c28:	460b      	mov	r3, r1
 8005c2a:	18db      	adds	r3, r3, r3
 8005c2c:	643b      	str	r3, [r7, #64]	@ 0x40
 8005c2e:	4613      	mov	r3, r2
 8005c30:	eb42 0303 	adc.w	r3, r2, r3
 8005c34:	647b      	str	r3, [r7, #68]	@ 0x44
 8005c36:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8005c3a:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8005c3e:	f7fb f823 	bl	8000c88 <__aeabi_uldivmod>
 8005c42:	4602      	mov	r2, r0
 8005c44:	460b      	mov	r3, r1
 8005c46:	4611      	mov	r1, r2
 8005c48:	4b3b      	ldr	r3, [pc, #236]	@ (8005d38 <UART_SetConfig+0x2d4>)
 8005c4a:	fba3 2301 	umull	r2, r3, r3, r1
 8005c4e:	095b      	lsrs	r3, r3, #5
 8005c50:	2264      	movs	r2, #100	@ 0x64
 8005c52:	fb02 f303 	mul.w	r3, r2, r3
 8005c56:	1acb      	subs	r3, r1, r3
 8005c58:	00db      	lsls	r3, r3, #3
 8005c5a:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 8005c5e:	4b36      	ldr	r3, [pc, #216]	@ (8005d38 <UART_SetConfig+0x2d4>)
 8005c60:	fba3 2302 	umull	r2, r3, r3, r2
 8005c64:	095b      	lsrs	r3, r3, #5
 8005c66:	005b      	lsls	r3, r3, #1
 8005c68:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8005c6c:	441c      	add	r4, r3
 8005c6e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8005c72:	2200      	movs	r2, #0
 8005c74:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8005c78:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8005c7c:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8005c80:	4642      	mov	r2, r8
 8005c82:	464b      	mov	r3, r9
 8005c84:	1891      	adds	r1, r2, r2
 8005c86:	63b9      	str	r1, [r7, #56]	@ 0x38
 8005c88:	415b      	adcs	r3, r3
 8005c8a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005c8c:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8005c90:	4641      	mov	r1, r8
 8005c92:	1851      	adds	r1, r2, r1
 8005c94:	6339      	str	r1, [r7, #48]	@ 0x30
 8005c96:	4649      	mov	r1, r9
 8005c98:	414b      	adcs	r3, r1
 8005c9a:	637b      	str	r3, [r7, #52]	@ 0x34
 8005c9c:	f04f 0200 	mov.w	r2, #0
 8005ca0:	f04f 0300 	mov.w	r3, #0
 8005ca4:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8005ca8:	4659      	mov	r1, fp
 8005caa:	00cb      	lsls	r3, r1, #3
 8005cac:	4651      	mov	r1, sl
 8005cae:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8005cb2:	4651      	mov	r1, sl
 8005cb4:	00ca      	lsls	r2, r1, #3
 8005cb6:	4610      	mov	r0, r2
 8005cb8:	4619      	mov	r1, r3
 8005cba:	4603      	mov	r3, r0
 8005cbc:	4642      	mov	r2, r8
 8005cbe:	189b      	adds	r3, r3, r2
 8005cc0:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8005cc4:	464b      	mov	r3, r9
 8005cc6:	460a      	mov	r2, r1
 8005cc8:	eb42 0303 	adc.w	r3, r2, r3
 8005ccc:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8005cd0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005cd4:	685b      	ldr	r3, [r3, #4]
 8005cd6:	2200      	movs	r2, #0
 8005cd8:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8005cdc:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8005ce0:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8005ce4:	460b      	mov	r3, r1
 8005ce6:	18db      	adds	r3, r3, r3
 8005ce8:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005cea:	4613      	mov	r3, r2
 8005cec:	eb42 0303 	adc.w	r3, r2, r3
 8005cf0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005cf2:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8005cf6:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 8005cfa:	f7fa ffc5 	bl	8000c88 <__aeabi_uldivmod>
 8005cfe:	4602      	mov	r2, r0
 8005d00:	460b      	mov	r3, r1
 8005d02:	4b0d      	ldr	r3, [pc, #52]	@ (8005d38 <UART_SetConfig+0x2d4>)
 8005d04:	fba3 1302 	umull	r1, r3, r3, r2
 8005d08:	095b      	lsrs	r3, r3, #5
 8005d0a:	2164      	movs	r1, #100	@ 0x64
 8005d0c:	fb01 f303 	mul.w	r3, r1, r3
 8005d10:	1ad3      	subs	r3, r2, r3
 8005d12:	00db      	lsls	r3, r3, #3
 8005d14:	3332      	adds	r3, #50	@ 0x32
 8005d16:	4a08      	ldr	r2, [pc, #32]	@ (8005d38 <UART_SetConfig+0x2d4>)
 8005d18:	fba2 2303 	umull	r2, r3, r2, r3
 8005d1c:	095b      	lsrs	r3, r3, #5
 8005d1e:	f003 0207 	and.w	r2, r3, #7
 8005d22:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005d26:	681b      	ldr	r3, [r3, #0]
 8005d28:	4422      	add	r2, r4
 8005d2a:	609a      	str	r2, [r3, #8]
 8005d2c:	e106      	b.n	8005f3c <UART_SetConfig+0x4d8>
 8005d2e:	bf00      	nop
 8005d30:	40011000 	.word	0x40011000
 8005d34:	40011400 	.word	0x40011400
 8005d38:	51eb851f 	.word	0x51eb851f
 8005d3c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8005d40:	2200      	movs	r2, #0
 8005d42:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8005d46:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 8005d4a:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 8005d4e:	4642      	mov	r2, r8
 8005d50:	464b      	mov	r3, r9
 8005d52:	1891      	adds	r1, r2, r2
 8005d54:	6239      	str	r1, [r7, #32]
 8005d56:	415b      	adcs	r3, r3
 8005d58:	627b      	str	r3, [r7, #36]	@ 0x24
 8005d5a:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8005d5e:	4641      	mov	r1, r8
 8005d60:	1854      	adds	r4, r2, r1
 8005d62:	4649      	mov	r1, r9
 8005d64:	eb43 0501 	adc.w	r5, r3, r1
 8005d68:	f04f 0200 	mov.w	r2, #0
 8005d6c:	f04f 0300 	mov.w	r3, #0
 8005d70:	00eb      	lsls	r3, r5, #3
 8005d72:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8005d76:	00e2      	lsls	r2, r4, #3
 8005d78:	4614      	mov	r4, r2
 8005d7a:	461d      	mov	r5, r3
 8005d7c:	4643      	mov	r3, r8
 8005d7e:	18e3      	adds	r3, r4, r3
 8005d80:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8005d84:	464b      	mov	r3, r9
 8005d86:	eb45 0303 	adc.w	r3, r5, r3
 8005d8a:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8005d8e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005d92:	685b      	ldr	r3, [r3, #4]
 8005d94:	2200      	movs	r2, #0
 8005d96:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8005d9a:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8005d9e:	f04f 0200 	mov.w	r2, #0
 8005da2:	f04f 0300 	mov.w	r3, #0
 8005da6:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8005daa:	4629      	mov	r1, r5
 8005dac:	008b      	lsls	r3, r1, #2
 8005dae:	4621      	mov	r1, r4
 8005db0:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8005db4:	4621      	mov	r1, r4
 8005db6:	008a      	lsls	r2, r1, #2
 8005db8:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8005dbc:	f7fa ff64 	bl	8000c88 <__aeabi_uldivmod>
 8005dc0:	4602      	mov	r2, r0
 8005dc2:	460b      	mov	r3, r1
 8005dc4:	4b60      	ldr	r3, [pc, #384]	@ (8005f48 <UART_SetConfig+0x4e4>)
 8005dc6:	fba3 2302 	umull	r2, r3, r3, r2
 8005dca:	095b      	lsrs	r3, r3, #5
 8005dcc:	011c      	lsls	r4, r3, #4
 8005dce:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8005dd2:	2200      	movs	r2, #0
 8005dd4:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8005dd8:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8005ddc:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8005de0:	4642      	mov	r2, r8
 8005de2:	464b      	mov	r3, r9
 8005de4:	1891      	adds	r1, r2, r2
 8005de6:	61b9      	str	r1, [r7, #24]
 8005de8:	415b      	adcs	r3, r3
 8005dea:	61fb      	str	r3, [r7, #28]
 8005dec:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8005df0:	4641      	mov	r1, r8
 8005df2:	1851      	adds	r1, r2, r1
 8005df4:	6139      	str	r1, [r7, #16]
 8005df6:	4649      	mov	r1, r9
 8005df8:	414b      	adcs	r3, r1
 8005dfa:	617b      	str	r3, [r7, #20]
 8005dfc:	f04f 0200 	mov.w	r2, #0
 8005e00:	f04f 0300 	mov.w	r3, #0
 8005e04:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8005e08:	4659      	mov	r1, fp
 8005e0a:	00cb      	lsls	r3, r1, #3
 8005e0c:	4651      	mov	r1, sl
 8005e0e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8005e12:	4651      	mov	r1, sl
 8005e14:	00ca      	lsls	r2, r1, #3
 8005e16:	4610      	mov	r0, r2
 8005e18:	4619      	mov	r1, r3
 8005e1a:	4603      	mov	r3, r0
 8005e1c:	4642      	mov	r2, r8
 8005e1e:	189b      	adds	r3, r3, r2
 8005e20:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8005e24:	464b      	mov	r3, r9
 8005e26:	460a      	mov	r2, r1
 8005e28:	eb42 0303 	adc.w	r3, r2, r3
 8005e2c:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8005e30:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005e34:	685b      	ldr	r3, [r3, #4]
 8005e36:	2200      	movs	r2, #0
 8005e38:	67bb      	str	r3, [r7, #120]	@ 0x78
 8005e3a:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8005e3c:	f04f 0200 	mov.w	r2, #0
 8005e40:	f04f 0300 	mov.w	r3, #0
 8005e44:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 8005e48:	4649      	mov	r1, r9
 8005e4a:	008b      	lsls	r3, r1, #2
 8005e4c:	4641      	mov	r1, r8
 8005e4e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8005e52:	4641      	mov	r1, r8
 8005e54:	008a      	lsls	r2, r1, #2
 8005e56:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8005e5a:	f7fa ff15 	bl	8000c88 <__aeabi_uldivmod>
 8005e5e:	4602      	mov	r2, r0
 8005e60:	460b      	mov	r3, r1
 8005e62:	4611      	mov	r1, r2
 8005e64:	4b38      	ldr	r3, [pc, #224]	@ (8005f48 <UART_SetConfig+0x4e4>)
 8005e66:	fba3 2301 	umull	r2, r3, r3, r1
 8005e6a:	095b      	lsrs	r3, r3, #5
 8005e6c:	2264      	movs	r2, #100	@ 0x64
 8005e6e:	fb02 f303 	mul.w	r3, r2, r3
 8005e72:	1acb      	subs	r3, r1, r3
 8005e74:	011b      	lsls	r3, r3, #4
 8005e76:	3332      	adds	r3, #50	@ 0x32
 8005e78:	4a33      	ldr	r2, [pc, #204]	@ (8005f48 <UART_SetConfig+0x4e4>)
 8005e7a:	fba2 2303 	umull	r2, r3, r2, r3
 8005e7e:	095b      	lsrs	r3, r3, #5
 8005e80:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8005e84:	441c      	add	r4, r3
 8005e86:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8005e8a:	2200      	movs	r2, #0
 8005e8c:	673b      	str	r3, [r7, #112]	@ 0x70
 8005e8e:	677a      	str	r2, [r7, #116]	@ 0x74
 8005e90:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 8005e94:	4642      	mov	r2, r8
 8005e96:	464b      	mov	r3, r9
 8005e98:	1891      	adds	r1, r2, r2
 8005e9a:	60b9      	str	r1, [r7, #8]
 8005e9c:	415b      	adcs	r3, r3
 8005e9e:	60fb      	str	r3, [r7, #12]
 8005ea0:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8005ea4:	4641      	mov	r1, r8
 8005ea6:	1851      	adds	r1, r2, r1
 8005ea8:	6039      	str	r1, [r7, #0]
 8005eaa:	4649      	mov	r1, r9
 8005eac:	414b      	adcs	r3, r1
 8005eae:	607b      	str	r3, [r7, #4]
 8005eb0:	f04f 0200 	mov.w	r2, #0
 8005eb4:	f04f 0300 	mov.w	r3, #0
 8005eb8:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8005ebc:	4659      	mov	r1, fp
 8005ebe:	00cb      	lsls	r3, r1, #3
 8005ec0:	4651      	mov	r1, sl
 8005ec2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8005ec6:	4651      	mov	r1, sl
 8005ec8:	00ca      	lsls	r2, r1, #3
 8005eca:	4610      	mov	r0, r2
 8005ecc:	4619      	mov	r1, r3
 8005ece:	4603      	mov	r3, r0
 8005ed0:	4642      	mov	r2, r8
 8005ed2:	189b      	adds	r3, r3, r2
 8005ed4:	66bb      	str	r3, [r7, #104]	@ 0x68
 8005ed6:	464b      	mov	r3, r9
 8005ed8:	460a      	mov	r2, r1
 8005eda:	eb42 0303 	adc.w	r3, r2, r3
 8005ede:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8005ee0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005ee4:	685b      	ldr	r3, [r3, #4]
 8005ee6:	2200      	movs	r2, #0
 8005ee8:	663b      	str	r3, [r7, #96]	@ 0x60
 8005eea:	667a      	str	r2, [r7, #100]	@ 0x64
 8005eec:	f04f 0200 	mov.w	r2, #0
 8005ef0:	f04f 0300 	mov.w	r3, #0
 8005ef4:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8005ef8:	4649      	mov	r1, r9
 8005efa:	008b      	lsls	r3, r1, #2
 8005efc:	4641      	mov	r1, r8
 8005efe:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8005f02:	4641      	mov	r1, r8
 8005f04:	008a      	lsls	r2, r1, #2
 8005f06:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 8005f0a:	f7fa febd 	bl	8000c88 <__aeabi_uldivmod>
 8005f0e:	4602      	mov	r2, r0
 8005f10:	460b      	mov	r3, r1
 8005f12:	4b0d      	ldr	r3, [pc, #52]	@ (8005f48 <UART_SetConfig+0x4e4>)
 8005f14:	fba3 1302 	umull	r1, r3, r3, r2
 8005f18:	095b      	lsrs	r3, r3, #5
 8005f1a:	2164      	movs	r1, #100	@ 0x64
 8005f1c:	fb01 f303 	mul.w	r3, r1, r3
 8005f20:	1ad3      	subs	r3, r2, r3
 8005f22:	011b      	lsls	r3, r3, #4
 8005f24:	3332      	adds	r3, #50	@ 0x32
 8005f26:	4a08      	ldr	r2, [pc, #32]	@ (8005f48 <UART_SetConfig+0x4e4>)
 8005f28:	fba2 2303 	umull	r2, r3, r2, r3
 8005f2c:	095b      	lsrs	r3, r3, #5
 8005f2e:	f003 020f 	and.w	r2, r3, #15
 8005f32:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005f36:	681b      	ldr	r3, [r3, #0]
 8005f38:	4422      	add	r2, r4
 8005f3a:	609a      	str	r2, [r3, #8]
 8005f3c:	bf00      	nop
 8005f3e:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 8005f42:	46bd      	mov	sp, r7
 8005f44:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8005f48:	51eb851f 	.word	0x51eb851f

08005f4c <__cvt>:
 8005f4c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005f50:	ec57 6b10 	vmov	r6, r7, d0
 8005f54:	2f00      	cmp	r7, #0
 8005f56:	460c      	mov	r4, r1
 8005f58:	4619      	mov	r1, r3
 8005f5a:	463b      	mov	r3, r7
 8005f5c:	bfbb      	ittet	lt
 8005f5e:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 8005f62:	461f      	movlt	r7, r3
 8005f64:	2300      	movge	r3, #0
 8005f66:	232d      	movlt	r3, #45	@ 0x2d
 8005f68:	700b      	strb	r3, [r1, #0]
 8005f6a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8005f6c:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8005f70:	4691      	mov	r9, r2
 8005f72:	f023 0820 	bic.w	r8, r3, #32
 8005f76:	bfbc      	itt	lt
 8005f78:	4632      	movlt	r2, r6
 8005f7a:	4616      	movlt	r6, r2
 8005f7c:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8005f80:	d005      	beq.n	8005f8e <__cvt+0x42>
 8005f82:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8005f86:	d100      	bne.n	8005f8a <__cvt+0x3e>
 8005f88:	3401      	adds	r4, #1
 8005f8a:	2102      	movs	r1, #2
 8005f8c:	e000      	b.n	8005f90 <__cvt+0x44>
 8005f8e:	2103      	movs	r1, #3
 8005f90:	ab03      	add	r3, sp, #12
 8005f92:	9301      	str	r3, [sp, #4]
 8005f94:	ab02      	add	r3, sp, #8
 8005f96:	9300      	str	r3, [sp, #0]
 8005f98:	ec47 6b10 	vmov	d0, r6, r7
 8005f9c:	4653      	mov	r3, sl
 8005f9e:	4622      	mov	r2, r4
 8005fa0:	f000 fe3a 	bl	8006c18 <_dtoa_r>
 8005fa4:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8005fa8:	4605      	mov	r5, r0
 8005faa:	d119      	bne.n	8005fe0 <__cvt+0x94>
 8005fac:	f019 0f01 	tst.w	r9, #1
 8005fb0:	d00e      	beq.n	8005fd0 <__cvt+0x84>
 8005fb2:	eb00 0904 	add.w	r9, r0, r4
 8005fb6:	2200      	movs	r2, #0
 8005fb8:	2300      	movs	r3, #0
 8005fba:	4630      	mov	r0, r6
 8005fbc:	4639      	mov	r1, r7
 8005fbe:	f7fa fda3 	bl	8000b08 <__aeabi_dcmpeq>
 8005fc2:	b108      	cbz	r0, 8005fc8 <__cvt+0x7c>
 8005fc4:	f8cd 900c 	str.w	r9, [sp, #12]
 8005fc8:	2230      	movs	r2, #48	@ 0x30
 8005fca:	9b03      	ldr	r3, [sp, #12]
 8005fcc:	454b      	cmp	r3, r9
 8005fce:	d31e      	bcc.n	800600e <__cvt+0xc2>
 8005fd0:	9b03      	ldr	r3, [sp, #12]
 8005fd2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8005fd4:	1b5b      	subs	r3, r3, r5
 8005fd6:	4628      	mov	r0, r5
 8005fd8:	6013      	str	r3, [r2, #0]
 8005fda:	b004      	add	sp, #16
 8005fdc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005fe0:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8005fe4:	eb00 0904 	add.w	r9, r0, r4
 8005fe8:	d1e5      	bne.n	8005fb6 <__cvt+0x6a>
 8005fea:	7803      	ldrb	r3, [r0, #0]
 8005fec:	2b30      	cmp	r3, #48	@ 0x30
 8005fee:	d10a      	bne.n	8006006 <__cvt+0xba>
 8005ff0:	2200      	movs	r2, #0
 8005ff2:	2300      	movs	r3, #0
 8005ff4:	4630      	mov	r0, r6
 8005ff6:	4639      	mov	r1, r7
 8005ff8:	f7fa fd86 	bl	8000b08 <__aeabi_dcmpeq>
 8005ffc:	b918      	cbnz	r0, 8006006 <__cvt+0xba>
 8005ffe:	f1c4 0401 	rsb	r4, r4, #1
 8006002:	f8ca 4000 	str.w	r4, [sl]
 8006006:	f8da 3000 	ldr.w	r3, [sl]
 800600a:	4499      	add	r9, r3
 800600c:	e7d3      	b.n	8005fb6 <__cvt+0x6a>
 800600e:	1c59      	adds	r1, r3, #1
 8006010:	9103      	str	r1, [sp, #12]
 8006012:	701a      	strb	r2, [r3, #0]
 8006014:	e7d9      	b.n	8005fca <__cvt+0x7e>

08006016 <__exponent>:
 8006016:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006018:	2900      	cmp	r1, #0
 800601a:	bfba      	itte	lt
 800601c:	4249      	neglt	r1, r1
 800601e:	232d      	movlt	r3, #45	@ 0x2d
 8006020:	232b      	movge	r3, #43	@ 0x2b
 8006022:	2909      	cmp	r1, #9
 8006024:	7002      	strb	r2, [r0, #0]
 8006026:	7043      	strb	r3, [r0, #1]
 8006028:	dd29      	ble.n	800607e <__exponent+0x68>
 800602a:	f10d 0307 	add.w	r3, sp, #7
 800602e:	461d      	mov	r5, r3
 8006030:	270a      	movs	r7, #10
 8006032:	461a      	mov	r2, r3
 8006034:	fbb1 f6f7 	udiv	r6, r1, r7
 8006038:	fb07 1416 	mls	r4, r7, r6, r1
 800603c:	3430      	adds	r4, #48	@ 0x30
 800603e:	f802 4c01 	strb.w	r4, [r2, #-1]
 8006042:	460c      	mov	r4, r1
 8006044:	2c63      	cmp	r4, #99	@ 0x63
 8006046:	f103 33ff 	add.w	r3, r3, #4294967295
 800604a:	4631      	mov	r1, r6
 800604c:	dcf1      	bgt.n	8006032 <__exponent+0x1c>
 800604e:	3130      	adds	r1, #48	@ 0x30
 8006050:	1e94      	subs	r4, r2, #2
 8006052:	f803 1c01 	strb.w	r1, [r3, #-1]
 8006056:	1c41      	adds	r1, r0, #1
 8006058:	4623      	mov	r3, r4
 800605a:	42ab      	cmp	r3, r5
 800605c:	d30a      	bcc.n	8006074 <__exponent+0x5e>
 800605e:	f10d 0309 	add.w	r3, sp, #9
 8006062:	1a9b      	subs	r3, r3, r2
 8006064:	42ac      	cmp	r4, r5
 8006066:	bf88      	it	hi
 8006068:	2300      	movhi	r3, #0
 800606a:	3302      	adds	r3, #2
 800606c:	4403      	add	r3, r0
 800606e:	1a18      	subs	r0, r3, r0
 8006070:	b003      	add	sp, #12
 8006072:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006074:	f813 6b01 	ldrb.w	r6, [r3], #1
 8006078:	f801 6f01 	strb.w	r6, [r1, #1]!
 800607c:	e7ed      	b.n	800605a <__exponent+0x44>
 800607e:	2330      	movs	r3, #48	@ 0x30
 8006080:	3130      	adds	r1, #48	@ 0x30
 8006082:	7083      	strb	r3, [r0, #2]
 8006084:	70c1      	strb	r1, [r0, #3]
 8006086:	1d03      	adds	r3, r0, #4
 8006088:	e7f1      	b.n	800606e <__exponent+0x58>
	...

0800608c <_printf_float>:
 800608c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006090:	b08d      	sub	sp, #52	@ 0x34
 8006092:	460c      	mov	r4, r1
 8006094:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8006098:	4616      	mov	r6, r2
 800609a:	461f      	mov	r7, r3
 800609c:	4605      	mov	r5, r0
 800609e:	f000 fcb9 	bl	8006a14 <_localeconv_r>
 80060a2:	6803      	ldr	r3, [r0, #0]
 80060a4:	9304      	str	r3, [sp, #16]
 80060a6:	4618      	mov	r0, r3
 80060a8:	f7fa f902 	bl	80002b0 <strlen>
 80060ac:	2300      	movs	r3, #0
 80060ae:	930a      	str	r3, [sp, #40]	@ 0x28
 80060b0:	f8d8 3000 	ldr.w	r3, [r8]
 80060b4:	9005      	str	r0, [sp, #20]
 80060b6:	3307      	adds	r3, #7
 80060b8:	f023 0307 	bic.w	r3, r3, #7
 80060bc:	f103 0208 	add.w	r2, r3, #8
 80060c0:	f894 a018 	ldrb.w	sl, [r4, #24]
 80060c4:	f8d4 b000 	ldr.w	fp, [r4]
 80060c8:	f8c8 2000 	str.w	r2, [r8]
 80060cc:	e9d3 8900 	ldrd	r8, r9, [r3]
 80060d0:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 80060d4:	9307      	str	r3, [sp, #28]
 80060d6:	f8cd 8018 	str.w	r8, [sp, #24]
 80060da:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 80060de:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80060e2:	4b9c      	ldr	r3, [pc, #624]	@ (8006354 <_printf_float+0x2c8>)
 80060e4:	f04f 32ff 	mov.w	r2, #4294967295
 80060e8:	f7fa fd40 	bl	8000b6c <__aeabi_dcmpun>
 80060ec:	bb70      	cbnz	r0, 800614c <_printf_float+0xc0>
 80060ee:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80060f2:	4b98      	ldr	r3, [pc, #608]	@ (8006354 <_printf_float+0x2c8>)
 80060f4:	f04f 32ff 	mov.w	r2, #4294967295
 80060f8:	f7fa fd1a 	bl	8000b30 <__aeabi_dcmple>
 80060fc:	bb30      	cbnz	r0, 800614c <_printf_float+0xc0>
 80060fe:	2200      	movs	r2, #0
 8006100:	2300      	movs	r3, #0
 8006102:	4640      	mov	r0, r8
 8006104:	4649      	mov	r1, r9
 8006106:	f7fa fd09 	bl	8000b1c <__aeabi_dcmplt>
 800610a:	b110      	cbz	r0, 8006112 <_printf_float+0x86>
 800610c:	232d      	movs	r3, #45	@ 0x2d
 800610e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8006112:	4a91      	ldr	r2, [pc, #580]	@ (8006358 <_printf_float+0x2cc>)
 8006114:	4b91      	ldr	r3, [pc, #580]	@ (800635c <_printf_float+0x2d0>)
 8006116:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 800611a:	bf8c      	ite	hi
 800611c:	4690      	movhi	r8, r2
 800611e:	4698      	movls	r8, r3
 8006120:	2303      	movs	r3, #3
 8006122:	6123      	str	r3, [r4, #16]
 8006124:	f02b 0304 	bic.w	r3, fp, #4
 8006128:	6023      	str	r3, [r4, #0]
 800612a:	f04f 0900 	mov.w	r9, #0
 800612e:	9700      	str	r7, [sp, #0]
 8006130:	4633      	mov	r3, r6
 8006132:	aa0b      	add	r2, sp, #44	@ 0x2c
 8006134:	4621      	mov	r1, r4
 8006136:	4628      	mov	r0, r5
 8006138:	f000 f9d2 	bl	80064e0 <_printf_common>
 800613c:	3001      	adds	r0, #1
 800613e:	f040 808d 	bne.w	800625c <_printf_float+0x1d0>
 8006142:	f04f 30ff 	mov.w	r0, #4294967295
 8006146:	b00d      	add	sp, #52	@ 0x34
 8006148:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800614c:	4642      	mov	r2, r8
 800614e:	464b      	mov	r3, r9
 8006150:	4640      	mov	r0, r8
 8006152:	4649      	mov	r1, r9
 8006154:	f7fa fd0a 	bl	8000b6c <__aeabi_dcmpun>
 8006158:	b140      	cbz	r0, 800616c <_printf_float+0xe0>
 800615a:	464b      	mov	r3, r9
 800615c:	2b00      	cmp	r3, #0
 800615e:	bfbc      	itt	lt
 8006160:	232d      	movlt	r3, #45	@ 0x2d
 8006162:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8006166:	4a7e      	ldr	r2, [pc, #504]	@ (8006360 <_printf_float+0x2d4>)
 8006168:	4b7e      	ldr	r3, [pc, #504]	@ (8006364 <_printf_float+0x2d8>)
 800616a:	e7d4      	b.n	8006116 <_printf_float+0x8a>
 800616c:	6863      	ldr	r3, [r4, #4]
 800616e:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 8006172:	9206      	str	r2, [sp, #24]
 8006174:	1c5a      	adds	r2, r3, #1
 8006176:	d13b      	bne.n	80061f0 <_printf_float+0x164>
 8006178:	2306      	movs	r3, #6
 800617a:	6063      	str	r3, [r4, #4]
 800617c:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8006180:	2300      	movs	r3, #0
 8006182:	6022      	str	r2, [r4, #0]
 8006184:	9303      	str	r3, [sp, #12]
 8006186:	ab0a      	add	r3, sp, #40	@ 0x28
 8006188:	e9cd a301 	strd	sl, r3, [sp, #4]
 800618c:	ab09      	add	r3, sp, #36	@ 0x24
 800618e:	9300      	str	r3, [sp, #0]
 8006190:	6861      	ldr	r1, [r4, #4]
 8006192:	ec49 8b10 	vmov	d0, r8, r9
 8006196:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 800619a:	4628      	mov	r0, r5
 800619c:	f7ff fed6 	bl	8005f4c <__cvt>
 80061a0:	9b06      	ldr	r3, [sp, #24]
 80061a2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80061a4:	2b47      	cmp	r3, #71	@ 0x47
 80061a6:	4680      	mov	r8, r0
 80061a8:	d129      	bne.n	80061fe <_printf_float+0x172>
 80061aa:	1cc8      	adds	r0, r1, #3
 80061ac:	db02      	blt.n	80061b4 <_printf_float+0x128>
 80061ae:	6863      	ldr	r3, [r4, #4]
 80061b0:	4299      	cmp	r1, r3
 80061b2:	dd41      	ble.n	8006238 <_printf_float+0x1ac>
 80061b4:	f1aa 0a02 	sub.w	sl, sl, #2
 80061b8:	fa5f fa8a 	uxtb.w	sl, sl
 80061bc:	3901      	subs	r1, #1
 80061be:	4652      	mov	r2, sl
 80061c0:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 80061c4:	9109      	str	r1, [sp, #36]	@ 0x24
 80061c6:	f7ff ff26 	bl	8006016 <__exponent>
 80061ca:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80061cc:	1813      	adds	r3, r2, r0
 80061ce:	2a01      	cmp	r2, #1
 80061d0:	4681      	mov	r9, r0
 80061d2:	6123      	str	r3, [r4, #16]
 80061d4:	dc02      	bgt.n	80061dc <_printf_float+0x150>
 80061d6:	6822      	ldr	r2, [r4, #0]
 80061d8:	07d2      	lsls	r2, r2, #31
 80061da:	d501      	bpl.n	80061e0 <_printf_float+0x154>
 80061dc:	3301      	adds	r3, #1
 80061de:	6123      	str	r3, [r4, #16]
 80061e0:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 80061e4:	2b00      	cmp	r3, #0
 80061e6:	d0a2      	beq.n	800612e <_printf_float+0xa2>
 80061e8:	232d      	movs	r3, #45	@ 0x2d
 80061ea:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80061ee:	e79e      	b.n	800612e <_printf_float+0xa2>
 80061f0:	9a06      	ldr	r2, [sp, #24]
 80061f2:	2a47      	cmp	r2, #71	@ 0x47
 80061f4:	d1c2      	bne.n	800617c <_printf_float+0xf0>
 80061f6:	2b00      	cmp	r3, #0
 80061f8:	d1c0      	bne.n	800617c <_printf_float+0xf0>
 80061fa:	2301      	movs	r3, #1
 80061fc:	e7bd      	b.n	800617a <_printf_float+0xee>
 80061fe:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8006202:	d9db      	bls.n	80061bc <_printf_float+0x130>
 8006204:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8006208:	d118      	bne.n	800623c <_printf_float+0x1b0>
 800620a:	2900      	cmp	r1, #0
 800620c:	6863      	ldr	r3, [r4, #4]
 800620e:	dd0b      	ble.n	8006228 <_printf_float+0x19c>
 8006210:	6121      	str	r1, [r4, #16]
 8006212:	b913      	cbnz	r3, 800621a <_printf_float+0x18e>
 8006214:	6822      	ldr	r2, [r4, #0]
 8006216:	07d0      	lsls	r0, r2, #31
 8006218:	d502      	bpl.n	8006220 <_printf_float+0x194>
 800621a:	3301      	adds	r3, #1
 800621c:	440b      	add	r3, r1
 800621e:	6123      	str	r3, [r4, #16]
 8006220:	65a1      	str	r1, [r4, #88]	@ 0x58
 8006222:	f04f 0900 	mov.w	r9, #0
 8006226:	e7db      	b.n	80061e0 <_printf_float+0x154>
 8006228:	b913      	cbnz	r3, 8006230 <_printf_float+0x1a4>
 800622a:	6822      	ldr	r2, [r4, #0]
 800622c:	07d2      	lsls	r2, r2, #31
 800622e:	d501      	bpl.n	8006234 <_printf_float+0x1a8>
 8006230:	3302      	adds	r3, #2
 8006232:	e7f4      	b.n	800621e <_printf_float+0x192>
 8006234:	2301      	movs	r3, #1
 8006236:	e7f2      	b.n	800621e <_printf_float+0x192>
 8006238:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 800623c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800623e:	4299      	cmp	r1, r3
 8006240:	db05      	blt.n	800624e <_printf_float+0x1c2>
 8006242:	6823      	ldr	r3, [r4, #0]
 8006244:	6121      	str	r1, [r4, #16]
 8006246:	07d8      	lsls	r0, r3, #31
 8006248:	d5ea      	bpl.n	8006220 <_printf_float+0x194>
 800624a:	1c4b      	adds	r3, r1, #1
 800624c:	e7e7      	b.n	800621e <_printf_float+0x192>
 800624e:	2900      	cmp	r1, #0
 8006250:	bfd4      	ite	le
 8006252:	f1c1 0202 	rsble	r2, r1, #2
 8006256:	2201      	movgt	r2, #1
 8006258:	4413      	add	r3, r2
 800625a:	e7e0      	b.n	800621e <_printf_float+0x192>
 800625c:	6823      	ldr	r3, [r4, #0]
 800625e:	055a      	lsls	r2, r3, #21
 8006260:	d407      	bmi.n	8006272 <_printf_float+0x1e6>
 8006262:	6923      	ldr	r3, [r4, #16]
 8006264:	4642      	mov	r2, r8
 8006266:	4631      	mov	r1, r6
 8006268:	4628      	mov	r0, r5
 800626a:	47b8      	blx	r7
 800626c:	3001      	adds	r0, #1
 800626e:	d12b      	bne.n	80062c8 <_printf_float+0x23c>
 8006270:	e767      	b.n	8006142 <_printf_float+0xb6>
 8006272:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8006276:	f240 80dd 	bls.w	8006434 <_printf_float+0x3a8>
 800627a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800627e:	2200      	movs	r2, #0
 8006280:	2300      	movs	r3, #0
 8006282:	f7fa fc41 	bl	8000b08 <__aeabi_dcmpeq>
 8006286:	2800      	cmp	r0, #0
 8006288:	d033      	beq.n	80062f2 <_printf_float+0x266>
 800628a:	4a37      	ldr	r2, [pc, #220]	@ (8006368 <_printf_float+0x2dc>)
 800628c:	2301      	movs	r3, #1
 800628e:	4631      	mov	r1, r6
 8006290:	4628      	mov	r0, r5
 8006292:	47b8      	blx	r7
 8006294:	3001      	adds	r0, #1
 8006296:	f43f af54 	beq.w	8006142 <_printf_float+0xb6>
 800629a:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 800629e:	4543      	cmp	r3, r8
 80062a0:	db02      	blt.n	80062a8 <_printf_float+0x21c>
 80062a2:	6823      	ldr	r3, [r4, #0]
 80062a4:	07d8      	lsls	r0, r3, #31
 80062a6:	d50f      	bpl.n	80062c8 <_printf_float+0x23c>
 80062a8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80062ac:	4631      	mov	r1, r6
 80062ae:	4628      	mov	r0, r5
 80062b0:	47b8      	blx	r7
 80062b2:	3001      	adds	r0, #1
 80062b4:	f43f af45 	beq.w	8006142 <_printf_float+0xb6>
 80062b8:	f04f 0900 	mov.w	r9, #0
 80062bc:	f108 38ff 	add.w	r8, r8, #4294967295
 80062c0:	f104 0a1a 	add.w	sl, r4, #26
 80062c4:	45c8      	cmp	r8, r9
 80062c6:	dc09      	bgt.n	80062dc <_printf_float+0x250>
 80062c8:	6823      	ldr	r3, [r4, #0]
 80062ca:	079b      	lsls	r3, r3, #30
 80062cc:	f100 8103 	bmi.w	80064d6 <_printf_float+0x44a>
 80062d0:	68e0      	ldr	r0, [r4, #12]
 80062d2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80062d4:	4298      	cmp	r0, r3
 80062d6:	bfb8      	it	lt
 80062d8:	4618      	movlt	r0, r3
 80062da:	e734      	b.n	8006146 <_printf_float+0xba>
 80062dc:	2301      	movs	r3, #1
 80062de:	4652      	mov	r2, sl
 80062e0:	4631      	mov	r1, r6
 80062e2:	4628      	mov	r0, r5
 80062e4:	47b8      	blx	r7
 80062e6:	3001      	adds	r0, #1
 80062e8:	f43f af2b 	beq.w	8006142 <_printf_float+0xb6>
 80062ec:	f109 0901 	add.w	r9, r9, #1
 80062f0:	e7e8      	b.n	80062c4 <_printf_float+0x238>
 80062f2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80062f4:	2b00      	cmp	r3, #0
 80062f6:	dc39      	bgt.n	800636c <_printf_float+0x2e0>
 80062f8:	4a1b      	ldr	r2, [pc, #108]	@ (8006368 <_printf_float+0x2dc>)
 80062fa:	2301      	movs	r3, #1
 80062fc:	4631      	mov	r1, r6
 80062fe:	4628      	mov	r0, r5
 8006300:	47b8      	blx	r7
 8006302:	3001      	adds	r0, #1
 8006304:	f43f af1d 	beq.w	8006142 <_printf_float+0xb6>
 8006308:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 800630c:	ea59 0303 	orrs.w	r3, r9, r3
 8006310:	d102      	bne.n	8006318 <_printf_float+0x28c>
 8006312:	6823      	ldr	r3, [r4, #0]
 8006314:	07d9      	lsls	r1, r3, #31
 8006316:	d5d7      	bpl.n	80062c8 <_printf_float+0x23c>
 8006318:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800631c:	4631      	mov	r1, r6
 800631e:	4628      	mov	r0, r5
 8006320:	47b8      	blx	r7
 8006322:	3001      	adds	r0, #1
 8006324:	f43f af0d 	beq.w	8006142 <_printf_float+0xb6>
 8006328:	f04f 0a00 	mov.w	sl, #0
 800632c:	f104 0b1a 	add.w	fp, r4, #26
 8006330:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006332:	425b      	negs	r3, r3
 8006334:	4553      	cmp	r3, sl
 8006336:	dc01      	bgt.n	800633c <_printf_float+0x2b0>
 8006338:	464b      	mov	r3, r9
 800633a:	e793      	b.n	8006264 <_printf_float+0x1d8>
 800633c:	2301      	movs	r3, #1
 800633e:	465a      	mov	r2, fp
 8006340:	4631      	mov	r1, r6
 8006342:	4628      	mov	r0, r5
 8006344:	47b8      	blx	r7
 8006346:	3001      	adds	r0, #1
 8006348:	f43f aefb 	beq.w	8006142 <_printf_float+0xb6>
 800634c:	f10a 0a01 	add.w	sl, sl, #1
 8006350:	e7ee      	b.n	8006330 <_printf_float+0x2a4>
 8006352:	bf00      	nop
 8006354:	7fefffff 	.word	0x7fefffff
 8006358:	08008af4 	.word	0x08008af4
 800635c:	08008af0 	.word	0x08008af0
 8006360:	08008afc 	.word	0x08008afc
 8006364:	08008af8 	.word	0x08008af8
 8006368:	08008b00 	.word	0x08008b00
 800636c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800636e:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8006372:	4553      	cmp	r3, sl
 8006374:	bfa8      	it	ge
 8006376:	4653      	movge	r3, sl
 8006378:	2b00      	cmp	r3, #0
 800637a:	4699      	mov	r9, r3
 800637c:	dc36      	bgt.n	80063ec <_printf_float+0x360>
 800637e:	f04f 0b00 	mov.w	fp, #0
 8006382:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8006386:	f104 021a 	add.w	r2, r4, #26
 800638a:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800638c:	9306      	str	r3, [sp, #24]
 800638e:	eba3 0309 	sub.w	r3, r3, r9
 8006392:	455b      	cmp	r3, fp
 8006394:	dc31      	bgt.n	80063fa <_printf_float+0x36e>
 8006396:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006398:	459a      	cmp	sl, r3
 800639a:	dc3a      	bgt.n	8006412 <_printf_float+0x386>
 800639c:	6823      	ldr	r3, [r4, #0]
 800639e:	07da      	lsls	r2, r3, #31
 80063a0:	d437      	bmi.n	8006412 <_printf_float+0x386>
 80063a2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80063a4:	ebaa 0903 	sub.w	r9, sl, r3
 80063a8:	9b06      	ldr	r3, [sp, #24]
 80063aa:	ebaa 0303 	sub.w	r3, sl, r3
 80063ae:	4599      	cmp	r9, r3
 80063b0:	bfa8      	it	ge
 80063b2:	4699      	movge	r9, r3
 80063b4:	f1b9 0f00 	cmp.w	r9, #0
 80063b8:	dc33      	bgt.n	8006422 <_printf_float+0x396>
 80063ba:	f04f 0800 	mov.w	r8, #0
 80063be:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80063c2:	f104 0b1a 	add.w	fp, r4, #26
 80063c6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80063c8:	ebaa 0303 	sub.w	r3, sl, r3
 80063cc:	eba3 0309 	sub.w	r3, r3, r9
 80063d0:	4543      	cmp	r3, r8
 80063d2:	f77f af79 	ble.w	80062c8 <_printf_float+0x23c>
 80063d6:	2301      	movs	r3, #1
 80063d8:	465a      	mov	r2, fp
 80063da:	4631      	mov	r1, r6
 80063dc:	4628      	mov	r0, r5
 80063de:	47b8      	blx	r7
 80063e0:	3001      	adds	r0, #1
 80063e2:	f43f aeae 	beq.w	8006142 <_printf_float+0xb6>
 80063e6:	f108 0801 	add.w	r8, r8, #1
 80063ea:	e7ec      	b.n	80063c6 <_printf_float+0x33a>
 80063ec:	4642      	mov	r2, r8
 80063ee:	4631      	mov	r1, r6
 80063f0:	4628      	mov	r0, r5
 80063f2:	47b8      	blx	r7
 80063f4:	3001      	adds	r0, #1
 80063f6:	d1c2      	bne.n	800637e <_printf_float+0x2f2>
 80063f8:	e6a3      	b.n	8006142 <_printf_float+0xb6>
 80063fa:	2301      	movs	r3, #1
 80063fc:	4631      	mov	r1, r6
 80063fe:	4628      	mov	r0, r5
 8006400:	9206      	str	r2, [sp, #24]
 8006402:	47b8      	blx	r7
 8006404:	3001      	adds	r0, #1
 8006406:	f43f ae9c 	beq.w	8006142 <_printf_float+0xb6>
 800640a:	9a06      	ldr	r2, [sp, #24]
 800640c:	f10b 0b01 	add.w	fp, fp, #1
 8006410:	e7bb      	b.n	800638a <_printf_float+0x2fe>
 8006412:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8006416:	4631      	mov	r1, r6
 8006418:	4628      	mov	r0, r5
 800641a:	47b8      	blx	r7
 800641c:	3001      	adds	r0, #1
 800641e:	d1c0      	bne.n	80063a2 <_printf_float+0x316>
 8006420:	e68f      	b.n	8006142 <_printf_float+0xb6>
 8006422:	9a06      	ldr	r2, [sp, #24]
 8006424:	464b      	mov	r3, r9
 8006426:	4442      	add	r2, r8
 8006428:	4631      	mov	r1, r6
 800642a:	4628      	mov	r0, r5
 800642c:	47b8      	blx	r7
 800642e:	3001      	adds	r0, #1
 8006430:	d1c3      	bne.n	80063ba <_printf_float+0x32e>
 8006432:	e686      	b.n	8006142 <_printf_float+0xb6>
 8006434:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8006438:	f1ba 0f01 	cmp.w	sl, #1
 800643c:	dc01      	bgt.n	8006442 <_printf_float+0x3b6>
 800643e:	07db      	lsls	r3, r3, #31
 8006440:	d536      	bpl.n	80064b0 <_printf_float+0x424>
 8006442:	2301      	movs	r3, #1
 8006444:	4642      	mov	r2, r8
 8006446:	4631      	mov	r1, r6
 8006448:	4628      	mov	r0, r5
 800644a:	47b8      	blx	r7
 800644c:	3001      	adds	r0, #1
 800644e:	f43f ae78 	beq.w	8006142 <_printf_float+0xb6>
 8006452:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8006456:	4631      	mov	r1, r6
 8006458:	4628      	mov	r0, r5
 800645a:	47b8      	blx	r7
 800645c:	3001      	adds	r0, #1
 800645e:	f43f ae70 	beq.w	8006142 <_printf_float+0xb6>
 8006462:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8006466:	2200      	movs	r2, #0
 8006468:	2300      	movs	r3, #0
 800646a:	f10a 3aff 	add.w	sl, sl, #4294967295
 800646e:	f7fa fb4b 	bl	8000b08 <__aeabi_dcmpeq>
 8006472:	b9c0      	cbnz	r0, 80064a6 <_printf_float+0x41a>
 8006474:	4653      	mov	r3, sl
 8006476:	f108 0201 	add.w	r2, r8, #1
 800647a:	4631      	mov	r1, r6
 800647c:	4628      	mov	r0, r5
 800647e:	47b8      	blx	r7
 8006480:	3001      	adds	r0, #1
 8006482:	d10c      	bne.n	800649e <_printf_float+0x412>
 8006484:	e65d      	b.n	8006142 <_printf_float+0xb6>
 8006486:	2301      	movs	r3, #1
 8006488:	465a      	mov	r2, fp
 800648a:	4631      	mov	r1, r6
 800648c:	4628      	mov	r0, r5
 800648e:	47b8      	blx	r7
 8006490:	3001      	adds	r0, #1
 8006492:	f43f ae56 	beq.w	8006142 <_printf_float+0xb6>
 8006496:	f108 0801 	add.w	r8, r8, #1
 800649a:	45d0      	cmp	r8, sl
 800649c:	dbf3      	blt.n	8006486 <_printf_float+0x3fa>
 800649e:	464b      	mov	r3, r9
 80064a0:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 80064a4:	e6df      	b.n	8006266 <_printf_float+0x1da>
 80064a6:	f04f 0800 	mov.w	r8, #0
 80064aa:	f104 0b1a 	add.w	fp, r4, #26
 80064ae:	e7f4      	b.n	800649a <_printf_float+0x40e>
 80064b0:	2301      	movs	r3, #1
 80064b2:	4642      	mov	r2, r8
 80064b4:	e7e1      	b.n	800647a <_printf_float+0x3ee>
 80064b6:	2301      	movs	r3, #1
 80064b8:	464a      	mov	r2, r9
 80064ba:	4631      	mov	r1, r6
 80064bc:	4628      	mov	r0, r5
 80064be:	47b8      	blx	r7
 80064c0:	3001      	adds	r0, #1
 80064c2:	f43f ae3e 	beq.w	8006142 <_printf_float+0xb6>
 80064c6:	f108 0801 	add.w	r8, r8, #1
 80064ca:	68e3      	ldr	r3, [r4, #12]
 80064cc:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80064ce:	1a5b      	subs	r3, r3, r1
 80064d0:	4543      	cmp	r3, r8
 80064d2:	dcf0      	bgt.n	80064b6 <_printf_float+0x42a>
 80064d4:	e6fc      	b.n	80062d0 <_printf_float+0x244>
 80064d6:	f04f 0800 	mov.w	r8, #0
 80064da:	f104 0919 	add.w	r9, r4, #25
 80064de:	e7f4      	b.n	80064ca <_printf_float+0x43e>

080064e0 <_printf_common>:
 80064e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80064e4:	4616      	mov	r6, r2
 80064e6:	4698      	mov	r8, r3
 80064e8:	688a      	ldr	r2, [r1, #8]
 80064ea:	690b      	ldr	r3, [r1, #16]
 80064ec:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80064f0:	4293      	cmp	r3, r2
 80064f2:	bfb8      	it	lt
 80064f4:	4613      	movlt	r3, r2
 80064f6:	6033      	str	r3, [r6, #0]
 80064f8:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80064fc:	4607      	mov	r7, r0
 80064fe:	460c      	mov	r4, r1
 8006500:	b10a      	cbz	r2, 8006506 <_printf_common+0x26>
 8006502:	3301      	adds	r3, #1
 8006504:	6033      	str	r3, [r6, #0]
 8006506:	6823      	ldr	r3, [r4, #0]
 8006508:	0699      	lsls	r1, r3, #26
 800650a:	bf42      	ittt	mi
 800650c:	6833      	ldrmi	r3, [r6, #0]
 800650e:	3302      	addmi	r3, #2
 8006510:	6033      	strmi	r3, [r6, #0]
 8006512:	6825      	ldr	r5, [r4, #0]
 8006514:	f015 0506 	ands.w	r5, r5, #6
 8006518:	d106      	bne.n	8006528 <_printf_common+0x48>
 800651a:	f104 0a19 	add.w	sl, r4, #25
 800651e:	68e3      	ldr	r3, [r4, #12]
 8006520:	6832      	ldr	r2, [r6, #0]
 8006522:	1a9b      	subs	r3, r3, r2
 8006524:	42ab      	cmp	r3, r5
 8006526:	dc26      	bgt.n	8006576 <_printf_common+0x96>
 8006528:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800652c:	6822      	ldr	r2, [r4, #0]
 800652e:	3b00      	subs	r3, #0
 8006530:	bf18      	it	ne
 8006532:	2301      	movne	r3, #1
 8006534:	0692      	lsls	r2, r2, #26
 8006536:	d42b      	bmi.n	8006590 <_printf_common+0xb0>
 8006538:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800653c:	4641      	mov	r1, r8
 800653e:	4638      	mov	r0, r7
 8006540:	47c8      	blx	r9
 8006542:	3001      	adds	r0, #1
 8006544:	d01e      	beq.n	8006584 <_printf_common+0xa4>
 8006546:	6823      	ldr	r3, [r4, #0]
 8006548:	6922      	ldr	r2, [r4, #16]
 800654a:	f003 0306 	and.w	r3, r3, #6
 800654e:	2b04      	cmp	r3, #4
 8006550:	bf02      	ittt	eq
 8006552:	68e5      	ldreq	r5, [r4, #12]
 8006554:	6833      	ldreq	r3, [r6, #0]
 8006556:	1aed      	subeq	r5, r5, r3
 8006558:	68a3      	ldr	r3, [r4, #8]
 800655a:	bf0c      	ite	eq
 800655c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8006560:	2500      	movne	r5, #0
 8006562:	4293      	cmp	r3, r2
 8006564:	bfc4      	itt	gt
 8006566:	1a9b      	subgt	r3, r3, r2
 8006568:	18ed      	addgt	r5, r5, r3
 800656a:	2600      	movs	r6, #0
 800656c:	341a      	adds	r4, #26
 800656e:	42b5      	cmp	r5, r6
 8006570:	d11a      	bne.n	80065a8 <_printf_common+0xc8>
 8006572:	2000      	movs	r0, #0
 8006574:	e008      	b.n	8006588 <_printf_common+0xa8>
 8006576:	2301      	movs	r3, #1
 8006578:	4652      	mov	r2, sl
 800657a:	4641      	mov	r1, r8
 800657c:	4638      	mov	r0, r7
 800657e:	47c8      	blx	r9
 8006580:	3001      	adds	r0, #1
 8006582:	d103      	bne.n	800658c <_printf_common+0xac>
 8006584:	f04f 30ff 	mov.w	r0, #4294967295
 8006588:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800658c:	3501      	adds	r5, #1
 800658e:	e7c6      	b.n	800651e <_printf_common+0x3e>
 8006590:	18e1      	adds	r1, r4, r3
 8006592:	1c5a      	adds	r2, r3, #1
 8006594:	2030      	movs	r0, #48	@ 0x30
 8006596:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800659a:	4422      	add	r2, r4
 800659c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80065a0:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80065a4:	3302      	adds	r3, #2
 80065a6:	e7c7      	b.n	8006538 <_printf_common+0x58>
 80065a8:	2301      	movs	r3, #1
 80065aa:	4622      	mov	r2, r4
 80065ac:	4641      	mov	r1, r8
 80065ae:	4638      	mov	r0, r7
 80065b0:	47c8      	blx	r9
 80065b2:	3001      	adds	r0, #1
 80065b4:	d0e6      	beq.n	8006584 <_printf_common+0xa4>
 80065b6:	3601      	adds	r6, #1
 80065b8:	e7d9      	b.n	800656e <_printf_common+0x8e>
	...

080065bc <_printf_i>:
 80065bc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80065c0:	7e0f      	ldrb	r7, [r1, #24]
 80065c2:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80065c4:	2f78      	cmp	r7, #120	@ 0x78
 80065c6:	4691      	mov	r9, r2
 80065c8:	4680      	mov	r8, r0
 80065ca:	460c      	mov	r4, r1
 80065cc:	469a      	mov	sl, r3
 80065ce:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80065d2:	d807      	bhi.n	80065e4 <_printf_i+0x28>
 80065d4:	2f62      	cmp	r7, #98	@ 0x62
 80065d6:	d80a      	bhi.n	80065ee <_printf_i+0x32>
 80065d8:	2f00      	cmp	r7, #0
 80065da:	f000 80d1 	beq.w	8006780 <_printf_i+0x1c4>
 80065de:	2f58      	cmp	r7, #88	@ 0x58
 80065e0:	f000 80b8 	beq.w	8006754 <_printf_i+0x198>
 80065e4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80065e8:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80065ec:	e03a      	b.n	8006664 <_printf_i+0xa8>
 80065ee:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80065f2:	2b15      	cmp	r3, #21
 80065f4:	d8f6      	bhi.n	80065e4 <_printf_i+0x28>
 80065f6:	a101      	add	r1, pc, #4	@ (adr r1, 80065fc <_printf_i+0x40>)
 80065f8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80065fc:	08006655 	.word	0x08006655
 8006600:	08006669 	.word	0x08006669
 8006604:	080065e5 	.word	0x080065e5
 8006608:	080065e5 	.word	0x080065e5
 800660c:	080065e5 	.word	0x080065e5
 8006610:	080065e5 	.word	0x080065e5
 8006614:	08006669 	.word	0x08006669
 8006618:	080065e5 	.word	0x080065e5
 800661c:	080065e5 	.word	0x080065e5
 8006620:	080065e5 	.word	0x080065e5
 8006624:	080065e5 	.word	0x080065e5
 8006628:	08006767 	.word	0x08006767
 800662c:	08006693 	.word	0x08006693
 8006630:	08006721 	.word	0x08006721
 8006634:	080065e5 	.word	0x080065e5
 8006638:	080065e5 	.word	0x080065e5
 800663c:	08006789 	.word	0x08006789
 8006640:	080065e5 	.word	0x080065e5
 8006644:	08006693 	.word	0x08006693
 8006648:	080065e5 	.word	0x080065e5
 800664c:	080065e5 	.word	0x080065e5
 8006650:	08006729 	.word	0x08006729
 8006654:	6833      	ldr	r3, [r6, #0]
 8006656:	1d1a      	adds	r2, r3, #4
 8006658:	681b      	ldr	r3, [r3, #0]
 800665a:	6032      	str	r2, [r6, #0]
 800665c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8006660:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8006664:	2301      	movs	r3, #1
 8006666:	e09c      	b.n	80067a2 <_printf_i+0x1e6>
 8006668:	6833      	ldr	r3, [r6, #0]
 800666a:	6820      	ldr	r0, [r4, #0]
 800666c:	1d19      	adds	r1, r3, #4
 800666e:	6031      	str	r1, [r6, #0]
 8006670:	0606      	lsls	r6, r0, #24
 8006672:	d501      	bpl.n	8006678 <_printf_i+0xbc>
 8006674:	681d      	ldr	r5, [r3, #0]
 8006676:	e003      	b.n	8006680 <_printf_i+0xc4>
 8006678:	0645      	lsls	r5, r0, #25
 800667a:	d5fb      	bpl.n	8006674 <_printf_i+0xb8>
 800667c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8006680:	2d00      	cmp	r5, #0
 8006682:	da03      	bge.n	800668c <_printf_i+0xd0>
 8006684:	232d      	movs	r3, #45	@ 0x2d
 8006686:	426d      	negs	r5, r5
 8006688:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800668c:	4858      	ldr	r0, [pc, #352]	@ (80067f0 <_printf_i+0x234>)
 800668e:	230a      	movs	r3, #10
 8006690:	e011      	b.n	80066b6 <_printf_i+0xfa>
 8006692:	6821      	ldr	r1, [r4, #0]
 8006694:	6833      	ldr	r3, [r6, #0]
 8006696:	0608      	lsls	r0, r1, #24
 8006698:	f853 5b04 	ldr.w	r5, [r3], #4
 800669c:	d402      	bmi.n	80066a4 <_printf_i+0xe8>
 800669e:	0649      	lsls	r1, r1, #25
 80066a0:	bf48      	it	mi
 80066a2:	b2ad      	uxthmi	r5, r5
 80066a4:	2f6f      	cmp	r7, #111	@ 0x6f
 80066a6:	4852      	ldr	r0, [pc, #328]	@ (80067f0 <_printf_i+0x234>)
 80066a8:	6033      	str	r3, [r6, #0]
 80066aa:	bf14      	ite	ne
 80066ac:	230a      	movne	r3, #10
 80066ae:	2308      	moveq	r3, #8
 80066b0:	2100      	movs	r1, #0
 80066b2:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80066b6:	6866      	ldr	r6, [r4, #4]
 80066b8:	60a6      	str	r6, [r4, #8]
 80066ba:	2e00      	cmp	r6, #0
 80066bc:	db05      	blt.n	80066ca <_printf_i+0x10e>
 80066be:	6821      	ldr	r1, [r4, #0]
 80066c0:	432e      	orrs	r6, r5
 80066c2:	f021 0104 	bic.w	r1, r1, #4
 80066c6:	6021      	str	r1, [r4, #0]
 80066c8:	d04b      	beq.n	8006762 <_printf_i+0x1a6>
 80066ca:	4616      	mov	r6, r2
 80066cc:	fbb5 f1f3 	udiv	r1, r5, r3
 80066d0:	fb03 5711 	mls	r7, r3, r1, r5
 80066d4:	5dc7      	ldrb	r7, [r0, r7]
 80066d6:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80066da:	462f      	mov	r7, r5
 80066dc:	42bb      	cmp	r3, r7
 80066de:	460d      	mov	r5, r1
 80066e0:	d9f4      	bls.n	80066cc <_printf_i+0x110>
 80066e2:	2b08      	cmp	r3, #8
 80066e4:	d10b      	bne.n	80066fe <_printf_i+0x142>
 80066e6:	6823      	ldr	r3, [r4, #0]
 80066e8:	07df      	lsls	r7, r3, #31
 80066ea:	d508      	bpl.n	80066fe <_printf_i+0x142>
 80066ec:	6923      	ldr	r3, [r4, #16]
 80066ee:	6861      	ldr	r1, [r4, #4]
 80066f0:	4299      	cmp	r1, r3
 80066f2:	bfde      	ittt	le
 80066f4:	2330      	movle	r3, #48	@ 0x30
 80066f6:	f806 3c01 	strble.w	r3, [r6, #-1]
 80066fa:	f106 36ff 	addle.w	r6, r6, #4294967295
 80066fe:	1b92      	subs	r2, r2, r6
 8006700:	6122      	str	r2, [r4, #16]
 8006702:	f8cd a000 	str.w	sl, [sp]
 8006706:	464b      	mov	r3, r9
 8006708:	aa03      	add	r2, sp, #12
 800670a:	4621      	mov	r1, r4
 800670c:	4640      	mov	r0, r8
 800670e:	f7ff fee7 	bl	80064e0 <_printf_common>
 8006712:	3001      	adds	r0, #1
 8006714:	d14a      	bne.n	80067ac <_printf_i+0x1f0>
 8006716:	f04f 30ff 	mov.w	r0, #4294967295
 800671a:	b004      	add	sp, #16
 800671c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006720:	6823      	ldr	r3, [r4, #0]
 8006722:	f043 0320 	orr.w	r3, r3, #32
 8006726:	6023      	str	r3, [r4, #0]
 8006728:	4832      	ldr	r0, [pc, #200]	@ (80067f4 <_printf_i+0x238>)
 800672a:	2778      	movs	r7, #120	@ 0x78
 800672c:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8006730:	6823      	ldr	r3, [r4, #0]
 8006732:	6831      	ldr	r1, [r6, #0]
 8006734:	061f      	lsls	r7, r3, #24
 8006736:	f851 5b04 	ldr.w	r5, [r1], #4
 800673a:	d402      	bmi.n	8006742 <_printf_i+0x186>
 800673c:	065f      	lsls	r7, r3, #25
 800673e:	bf48      	it	mi
 8006740:	b2ad      	uxthmi	r5, r5
 8006742:	6031      	str	r1, [r6, #0]
 8006744:	07d9      	lsls	r1, r3, #31
 8006746:	bf44      	itt	mi
 8006748:	f043 0320 	orrmi.w	r3, r3, #32
 800674c:	6023      	strmi	r3, [r4, #0]
 800674e:	b11d      	cbz	r5, 8006758 <_printf_i+0x19c>
 8006750:	2310      	movs	r3, #16
 8006752:	e7ad      	b.n	80066b0 <_printf_i+0xf4>
 8006754:	4826      	ldr	r0, [pc, #152]	@ (80067f0 <_printf_i+0x234>)
 8006756:	e7e9      	b.n	800672c <_printf_i+0x170>
 8006758:	6823      	ldr	r3, [r4, #0]
 800675a:	f023 0320 	bic.w	r3, r3, #32
 800675e:	6023      	str	r3, [r4, #0]
 8006760:	e7f6      	b.n	8006750 <_printf_i+0x194>
 8006762:	4616      	mov	r6, r2
 8006764:	e7bd      	b.n	80066e2 <_printf_i+0x126>
 8006766:	6833      	ldr	r3, [r6, #0]
 8006768:	6825      	ldr	r5, [r4, #0]
 800676a:	6961      	ldr	r1, [r4, #20]
 800676c:	1d18      	adds	r0, r3, #4
 800676e:	6030      	str	r0, [r6, #0]
 8006770:	062e      	lsls	r6, r5, #24
 8006772:	681b      	ldr	r3, [r3, #0]
 8006774:	d501      	bpl.n	800677a <_printf_i+0x1be>
 8006776:	6019      	str	r1, [r3, #0]
 8006778:	e002      	b.n	8006780 <_printf_i+0x1c4>
 800677a:	0668      	lsls	r0, r5, #25
 800677c:	d5fb      	bpl.n	8006776 <_printf_i+0x1ba>
 800677e:	8019      	strh	r1, [r3, #0]
 8006780:	2300      	movs	r3, #0
 8006782:	6123      	str	r3, [r4, #16]
 8006784:	4616      	mov	r6, r2
 8006786:	e7bc      	b.n	8006702 <_printf_i+0x146>
 8006788:	6833      	ldr	r3, [r6, #0]
 800678a:	1d1a      	adds	r2, r3, #4
 800678c:	6032      	str	r2, [r6, #0]
 800678e:	681e      	ldr	r6, [r3, #0]
 8006790:	6862      	ldr	r2, [r4, #4]
 8006792:	2100      	movs	r1, #0
 8006794:	4630      	mov	r0, r6
 8006796:	f7f9 fd3b 	bl	8000210 <memchr>
 800679a:	b108      	cbz	r0, 80067a0 <_printf_i+0x1e4>
 800679c:	1b80      	subs	r0, r0, r6
 800679e:	6060      	str	r0, [r4, #4]
 80067a0:	6863      	ldr	r3, [r4, #4]
 80067a2:	6123      	str	r3, [r4, #16]
 80067a4:	2300      	movs	r3, #0
 80067a6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80067aa:	e7aa      	b.n	8006702 <_printf_i+0x146>
 80067ac:	6923      	ldr	r3, [r4, #16]
 80067ae:	4632      	mov	r2, r6
 80067b0:	4649      	mov	r1, r9
 80067b2:	4640      	mov	r0, r8
 80067b4:	47d0      	blx	sl
 80067b6:	3001      	adds	r0, #1
 80067b8:	d0ad      	beq.n	8006716 <_printf_i+0x15a>
 80067ba:	6823      	ldr	r3, [r4, #0]
 80067bc:	079b      	lsls	r3, r3, #30
 80067be:	d413      	bmi.n	80067e8 <_printf_i+0x22c>
 80067c0:	68e0      	ldr	r0, [r4, #12]
 80067c2:	9b03      	ldr	r3, [sp, #12]
 80067c4:	4298      	cmp	r0, r3
 80067c6:	bfb8      	it	lt
 80067c8:	4618      	movlt	r0, r3
 80067ca:	e7a6      	b.n	800671a <_printf_i+0x15e>
 80067cc:	2301      	movs	r3, #1
 80067ce:	4632      	mov	r2, r6
 80067d0:	4649      	mov	r1, r9
 80067d2:	4640      	mov	r0, r8
 80067d4:	47d0      	blx	sl
 80067d6:	3001      	adds	r0, #1
 80067d8:	d09d      	beq.n	8006716 <_printf_i+0x15a>
 80067da:	3501      	adds	r5, #1
 80067dc:	68e3      	ldr	r3, [r4, #12]
 80067de:	9903      	ldr	r1, [sp, #12]
 80067e0:	1a5b      	subs	r3, r3, r1
 80067e2:	42ab      	cmp	r3, r5
 80067e4:	dcf2      	bgt.n	80067cc <_printf_i+0x210>
 80067e6:	e7eb      	b.n	80067c0 <_printf_i+0x204>
 80067e8:	2500      	movs	r5, #0
 80067ea:	f104 0619 	add.w	r6, r4, #25
 80067ee:	e7f5      	b.n	80067dc <_printf_i+0x220>
 80067f0:	08008b02 	.word	0x08008b02
 80067f4:	08008b13 	.word	0x08008b13

080067f8 <std>:
 80067f8:	2300      	movs	r3, #0
 80067fa:	b510      	push	{r4, lr}
 80067fc:	4604      	mov	r4, r0
 80067fe:	e9c0 3300 	strd	r3, r3, [r0]
 8006802:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8006806:	6083      	str	r3, [r0, #8]
 8006808:	8181      	strh	r1, [r0, #12]
 800680a:	6643      	str	r3, [r0, #100]	@ 0x64
 800680c:	81c2      	strh	r2, [r0, #14]
 800680e:	6183      	str	r3, [r0, #24]
 8006810:	4619      	mov	r1, r3
 8006812:	2208      	movs	r2, #8
 8006814:	305c      	adds	r0, #92	@ 0x5c
 8006816:	f000 f8f4 	bl	8006a02 <memset>
 800681a:	4b0d      	ldr	r3, [pc, #52]	@ (8006850 <std+0x58>)
 800681c:	6263      	str	r3, [r4, #36]	@ 0x24
 800681e:	4b0d      	ldr	r3, [pc, #52]	@ (8006854 <std+0x5c>)
 8006820:	62a3      	str	r3, [r4, #40]	@ 0x28
 8006822:	4b0d      	ldr	r3, [pc, #52]	@ (8006858 <std+0x60>)
 8006824:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8006826:	4b0d      	ldr	r3, [pc, #52]	@ (800685c <std+0x64>)
 8006828:	6323      	str	r3, [r4, #48]	@ 0x30
 800682a:	4b0d      	ldr	r3, [pc, #52]	@ (8006860 <std+0x68>)
 800682c:	6224      	str	r4, [r4, #32]
 800682e:	429c      	cmp	r4, r3
 8006830:	d006      	beq.n	8006840 <std+0x48>
 8006832:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8006836:	4294      	cmp	r4, r2
 8006838:	d002      	beq.n	8006840 <std+0x48>
 800683a:	33d0      	adds	r3, #208	@ 0xd0
 800683c:	429c      	cmp	r4, r3
 800683e:	d105      	bne.n	800684c <std+0x54>
 8006840:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8006844:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006848:	f000 b958 	b.w	8006afc <__retarget_lock_init_recursive>
 800684c:	bd10      	pop	{r4, pc}
 800684e:	bf00      	nop
 8006850:	0800697d 	.word	0x0800697d
 8006854:	0800699f 	.word	0x0800699f
 8006858:	080069d7 	.word	0x080069d7
 800685c:	080069fb 	.word	0x080069fb
 8006860:	200003cc 	.word	0x200003cc

08006864 <stdio_exit_handler>:
 8006864:	4a02      	ldr	r2, [pc, #8]	@ (8006870 <stdio_exit_handler+0xc>)
 8006866:	4903      	ldr	r1, [pc, #12]	@ (8006874 <stdio_exit_handler+0x10>)
 8006868:	4803      	ldr	r0, [pc, #12]	@ (8006878 <stdio_exit_handler+0x14>)
 800686a:	f000 b869 	b.w	8006940 <_fwalk_sglue>
 800686e:	bf00      	nop
 8006870:	20000014 	.word	0x20000014
 8006874:	080081b5 	.word	0x080081b5
 8006878:	20000024 	.word	0x20000024

0800687c <cleanup_stdio>:
 800687c:	6841      	ldr	r1, [r0, #4]
 800687e:	4b0c      	ldr	r3, [pc, #48]	@ (80068b0 <cleanup_stdio+0x34>)
 8006880:	4299      	cmp	r1, r3
 8006882:	b510      	push	{r4, lr}
 8006884:	4604      	mov	r4, r0
 8006886:	d001      	beq.n	800688c <cleanup_stdio+0x10>
 8006888:	f001 fc94 	bl	80081b4 <_fflush_r>
 800688c:	68a1      	ldr	r1, [r4, #8]
 800688e:	4b09      	ldr	r3, [pc, #36]	@ (80068b4 <cleanup_stdio+0x38>)
 8006890:	4299      	cmp	r1, r3
 8006892:	d002      	beq.n	800689a <cleanup_stdio+0x1e>
 8006894:	4620      	mov	r0, r4
 8006896:	f001 fc8d 	bl	80081b4 <_fflush_r>
 800689a:	68e1      	ldr	r1, [r4, #12]
 800689c:	4b06      	ldr	r3, [pc, #24]	@ (80068b8 <cleanup_stdio+0x3c>)
 800689e:	4299      	cmp	r1, r3
 80068a0:	d004      	beq.n	80068ac <cleanup_stdio+0x30>
 80068a2:	4620      	mov	r0, r4
 80068a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80068a8:	f001 bc84 	b.w	80081b4 <_fflush_r>
 80068ac:	bd10      	pop	{r4, pc}
 80068ae:	bf00      	nop
 80068b0:	200003cc 	.word	0x200003cc
 80068b4:	20000434 	.word	0x20000434
 80068b8:	2000049c 	.word	0x2000049c

080068bc <global_stdio_init.part.0>:
 80068bc:	b510      	push	{r4, lr}
 80068be:	4b0b      	ldr	r3, [pc, #44]	@ (80068ec <global_stdio_init.part.0+0x30>)
 80068c0:	4c0b      	ldr	r4, [pc, #44]	@ (80068f0 <global_stdio_init.part.0+0x34>)
 80068c2:	4a0c      	ldr	r2, [pc, #48]	@ (80068f4 <global_stdio_init.part.0+0x38>)
 80068c4:	601a      	str	r2, [r3, #0]
 80068c6:	4620      	mov	r0, r4
 80068c8:	2200      	movs	r2, #0
 80068ca:	2104      	movs	r1, #4
 80068cc:	f7ff ff94 	bl	80067f8 <std>
 80068d0:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80068d4:	2201      	movs	r2, #1
 80068d6:	2109      	movs	r1, #9
 80068d8:	f7ff ff8e 	bl	80067f8 <std>
 80068dc:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80068e0:	2202      	movs	r2, #2
 80068e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80068e6:	2112      	movs	r1, #18
 80068e8:	f7ff bf86 	b.w	80067f8 <std>
 80068ec:	20000504 	.word	0x20000504
 80068f0:	200003cc 	.word	0x200003cc
 80068f4:	08006865 	.word	0x08006865

080068f8 <__sfp_lock_acquire>:
 80068f8:	4801      	ldr	r0, [pc, #4]	@ (8006900 <__sfp_lock_acquire+0x8>)
 80068fa:	f000 b900 	b.w	8006afe <__retarget_lock_acquire_recursive>
 80068fe:	bf00      	nop
 8006900:	2000050d 	.word	0x2000050d

08006904 <__sfp_lock_release>:
 8006904:	4801      	ldr	r0, [pc, #4]	@ (800690c <__sfp_lock_release+0x8>)
 8006906:	f000 b8fb 	b.w	8006b00 <__retarget_lock_release_recursive>
 800690a:	bf00      	nop
 800690c:	2000050d 	.word	0x2000050d

08006910 <__sinit>:
 8006910:	b510      	push	{r4, lr}
 8006912:	4604      	mov	r4, r0
 8006914:	f7ff fff0 	bl	80068f8 <__sfp_lock_acquire>
 8006918:	6a23      	ldr	r3, [r4, #32]
 800691a:	b11b      	cbz	r3, 8006924 <__sinit+0x14>
 800691c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006920:	f7ff bff0 	b.w	8006904 <__sfp_lock_release>
 8006924:	4b04      	ldr	r3, [pc, #16]	@ (8006938 <__sinit+0x28>)
 8006926:	6223      	str	r3, [r4, #32]
 8006928:	4b04      	ldr	r3, [pc, #16]	@ (800693c <__sinit+0x2c>)
 800692a:	681b      	ldr	r3, [r3, #0]
 800692c:	2b00      	cmp	r3, #0
 800692e:	d1f5      	bne.n	800691c <__sinit+0xc>
 8006930:	f7ff ffc4 	bl	80068bc <global_stdio_init.part.0>
 8006934:	e7f2      	b.n	800691c <__sinit+0xc>
 8006936:	bf00      	nop
 8006938:	0800687d 	.word	0x0800687d
 800693c:	20000504 	.word	0x20000504

08006940 <_fwalk_sglue>:
 8006940:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006944:	4607      	mov	r7, r0
 8006946:	4688      	mov	r8, r1
 8006948:	4614      	mov	r4, r2
 800694a:	2600      	movs	r6, #0
 800694c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8006950:	f1b9 0901 	subs.w	r9, r9, #1
 8006954:	d505      	bpl.n	8006962 <_fwalk_sglue+0x22>
 8006956:	6824      	ldr	r4, [r4, #0]
 8006958:	2c00      	cmp	r4, #0
 800695a:	d1f7      	bne.n	800694c <_fwalk_sglue+0xc>
 800695c:	4630      	mov	r0, r6
 800695e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006962:	89ab      	ldrh	r3, [r5, #12]
 8006964:	2b01      	cmp	r3, #1
 8006966:	d907      	bls.n	8006978 <_fwalk_sglue+0x38>
 8006968:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800696c:	3301      	adds	r3, #1
 800696e:	d003      	beq.n	8006978 <_fwalk_sglue+0x38>
 8006970:	4629      	mov	r1, r5
 8006972:	4638      	mov	r0, r7
 8006974:	47c0      	blx	r8
 8006976:	4306      	orrs	r6, r0
 8006978:	3568      	adds	r5, #104	@ 0x68
 800697a:	e7e9      	b.n	8006950 <_fwalk_sglue+0x10>

0800697c <__sread>:
 800697c:	b510      	push	{r4, lr}
 800697e:	460c      	mov	r4, r1
 8006980:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006984:	f000 f86c 	bl	8006a60 <_read_r>
 8006988:	2800      	cmp	r0, #0
 800698a:	bfab      	itete	ge
 800698c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800698e:	89a3      	ldrhlt	r3, [r4, #12]
 8006990:	181b      	addge	r3, r3, r0
 8006992:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8006996:	bfac      	ite	ge
 8006998:	6563      	strge	r3, [r4, #84]	@ 0x54
 800699a:	81a3      	strhlt	r3, [r4, #12]
 800699c:	bd10      	pop	{r4, pc}

0800699e <__swrite>:
 800699e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80069a2:	461f      	mov	r7, r3
 80069a4:	898b      	ldrh	r3, [r1, #12]
 80069a6:	05db      	lsls	r3, r3, #23
 80069a8:	4605      	mov	r5, r0
 80069aa:	460c      	mov	r4, r1
 80069ac:	4616      	mov	r6, r2
 80069ae:	d505      	bpl.n	80069bc <__swrite+0x1e>
 80069b0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80069b4:	2302      	movs	r3, #2
 80069b6:	2200      	movs	r2, #0
 80069b8:	f000 f840 	bl	8006a3c <_lseek_r>
 80069bc:	89a3      	ldrh	r3, [r4, #12]
 80069be:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80069c2:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80069c6:	81a3      	strh	r3, [r4, #12]
 80069c8:	4632      	mov	r2, r6
 80069ca:	463b      	mov	r3, r7
 80069cc:	4628      	mov	r0, r5
 80069ce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80069d2:	f000 b857 	b.w	8006a84 <_write_r>

080069d6 <__sseek>:
 80069d6:	b510      	push	{r4, lr}
 80069d8:	460c      	mov	r4, r1
 80069da:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80069de:	f000 f82d 	bl	8006a3c <_lseek_r>
 80069e2:	1c43      	adds	r3, r0, #1
 80069e4:	89a3      	ldrh	r3, [r4, #12]
 80069e6:	bf15      	itete	ne
 80069e8:	6560      	strne	r0, [r4, #84]	@ 0x54
 80069ea:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80069ee:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80069f2:	81a3      	strheq	r3, [r4, #12]
 80069f4:	bf18      	it	ne
 80069f6:	81a3      	strhne	r3, [r4, #12]
 80069f8:	bd10      	pop	{r4, pc}

080069fa <__sclose>:
 80069fa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80069fe:	f000 b80d 	b.w	8006a1c <_close_r>

08006a02 <memset>:
 8006a02:	4402      	add	r2, r0
 8006a04:	4603      	mov	r3, r0
 8006a06:	4293      	cmp	r3, r2
 8006a08:	d100      	bne.n	8006a0c <memset+0xa>
 8006a0a:	4770      	bx	lr
 8006a0c:	f803 1b01 	strb.w	r1, [r3], #1
 8006a10:	e7f9      	b.n	8006a06 <memset+0x4>
	...

08006a14 <_localeconv_r>:
 8006a14:	4800      	ldr	r0, [pc, #0]	@ (8006a18 <_localeconv_r+0x4>)
 8006a16:	4770      	bx	lr
 8006a18:	20000160 	.word	0x20000160

08006a1c <_close_r>:
 8006a1c:	b538      	push	{r3, r4, r5, lr}
 8006a1e:	4d06      	ldr	r5, [pc, #24]	@ (8006a38 <_close_r+0x1c>)
 8006a20:	2300      	movs	r3, #0
 8006a22:	4604      	mov	r4, r0
 8006a24:	4608      	mov	r0, r1
 8006a26:	602b      	str	r3, [r5, #0]
 8006a28:	f7fb fc9a 	bl	8002360 <_close>
 8006a2c:	1c43      	adds	r3, r0, #1
 8006a2e:	d102      	bne.n	8006a36 <_close_r+0x1a>
 8006a30:	682b      	ldr	r3, [r5, #0]
 8006a32:	b103      	cbz	r3, 8006a36 <_close_r+0x1a>
 8006a34:	6023      	str	r3, [r4, #0]
 8006a36:	bd38      	pop	{r3, r4, r5, pc}
 8006a38:	20000508 	.word	0x20000508

08006a3c <_lseek_r>:
 8006a3c:	b538      	push	{r3, r4, r5, lr}
 8006a3e:	4d07      	ldr	r5, [pc, #28]	@ (8006a5c <_lseek_r+0x20>)
 8006a40:	4604      	mov	r4, r0
 8006a42:	4608      	mov	r0, r1
 8006a44:	4611      	mov	r1, r2
 8006a46:	2200      	movs	r2, #0
 8006a48:	602a      	str	r2, [r5, #0]
 8006a4a:	461a      	mov	r2, r3
 8006a4c:	f7fb fcaf 	bl	80023ae <_lseek>
 8006a50:	1c43      	adds	r3, r0, #1
 8006a52:	d102      	bne.n	8006a5a <_lseek_r+0x1e>
 8006a54:	682b      	ldr	r3, [r5, #0]
 8006a56:	b103      	cbz	r3, 8006a5a <_lseek_r+0x1e>
 8006a58:	6023      	str	r3, [r4, #0]
 8006a5a:	bd38      	pop	{r3, r4, r5, pc}
 8006a5c:	20000508 	.word	0x20000508

08006a60 <_read_r>:
 8006a60:	b538      	push	{r3, r4, r5, lr}
 8006a62:	4d07      	ldr	r5, [pc, #28]	@ (8006a80 <_read_r+0x20>)
 8006a64:	4604      	mov	r4, r0
 8006a66:	4608      	mov	r0, r1
 8006a68:	4611      	mov	r1, r2
 8006a6a:	2200      	movs	r2, #0
 8006a6c:	602a      	str	r2, [r5, #0]
 8006a6e:	461a      	mov	r2, r3
 8006a70:	f7fb fc3d 	bl	80022ee <_read>
 8006a74:	1c43      	adds	r3, r0, #1
 8006a76:	d102      	bne.n	8006a7e <_read_r+0x1e>
 8006a78:	682b      	ldr	r3, [r5, #0]
 8006a7a:	b103      	cbz	r3, 8006a7e <_read_r+0x1e>
 8006a7c:	6023      	str	r3, [r4, #0]
 8006a7e:	bd38      	pop	{r3, r4, r5, pc}
 8006a80:	20000508 	.word	0x20000508

08006a84 <_write_r>:
 8006a84:	b538      	push	{r3, r4, r5, lr}
 8006a86:	4d07      	ldr	r5, [pc, #28]	@ (8006aa4 <_write_r+0x20>)
 8006a88:	4604      	mov	r4, r0
 8006a8a:	4608      	mov	r0, r1
 8006a8c:	4611      	mov	r1, r2
 8006a8e:	2200      	movs	r2, #0
 8006a90:	602a      	str	r2, [r5, #0]
 8006a92:	461a      	mov	r2, r3
 8006a94:	f7fb fc48 	bl	8002328 <_write>
 8006a98:	1c43      	adds	r3, r0, #1
 8006a9a:	d102      	bne.n	8006aa2 <_write_r+0x1e>
 8006a9c:	682b      	ldr	r3, [r5, #0]
 8006a9e:	b103      	cbz	r3, 8006aa2 <_write_r+0x1e>
 8006aa0:	6023      	str	r3, [r4, #0]
 8006aa2:	bd38      	pop	{r3, r4, r5, pc}
 8006aa4:	20000508 	.word	0x20000508

08006aa8 <__errno>:
 8006aa8:	4b01      	ldr	r3, [pc, #4]	@ (8006ab0 <__errno+0x8>)
 8006aaa:	6818      	ldr	r0, [r3, #0]
 8006aac:	4770      	bx	lr
 8006aae:	bf00      	nop
 8006ab0:	20000020 	.word	0x20000020

08006ab4 <__libc_init_array>:
 8006ab4:	b570      	push	{r4, r5, r6, lr}
 8006ab6:	4d0d      	ldr	r5, [pc, #52]	@ (8006aec <__libc_init_array+0x38>)
 8006ab8:	4c0d      	ldr	r4, [pc, #52]	@ (8006af0 <__libc_init_array+0x3c>)
 8006aba:	1b64      	subs	r4, r4, r5
 8006abc:	10a4      	asrs	r4, r4, #2
 8006abe:	2600      	movs	r6, #0
 8006ac0:	42a6      	cmp	r6, r4
 8006ac2:	d109      	bne.n	8006ad8 <__libc_init_array+0x24>
 8006ac4:	4d0b      	ldr	r5, [pc, #44]	@ (8006af4 <__libc_init_array+0x40>)
 8006ac6:	4c0c      	ldr	r4, [pc, #48]	@ (8006af8 <__libc_init_array+0x44>)
 8006ac8:	f001 fff8 	bl	8008abc <_init>
 8006acc:	1b64      	subs	r4, r4, r5
 8006ace:	10a4      	asrs	r4, r4, #2
 8006ad0:	2600      	movs	r6, #0
 8006ad2:	42a6      	cmp	r6, r4
 8006ad4:	d105      	bne.n	8006ae2 <__libc_init_array+0x2e>
 8006ad6:	bd70      	pop	{r4, r5, r6, pc}
 8006ad8:	f855 3b04 	ldr.w	r3, [r5], #4
 8006adc:	4798      	blx	r3
 8006ade:	3601      	adds	r6, #1
 8006ae0:	e7ee      	b.n	8006ac0 <__libc_init_array+0xc>
 8006ae2:	f855 3b04 	ldr.w	r3, [r5], #4
 8006ae6:	4798      	blx	r3
 8006ae8:	3601      	adds	r6, #1
 8006aea:	e7f2      	b.n	8006ad2 <__libc_init_array+0x1e>
 8006aec:	08008e80 	.word	0x08008e80
 8006af0:	08008e80 	.word	0x08008e80
 8006af4:	08008e80 	.word	0x08008e80
 8006af8:	08008e84 	.word	0x08008e84

08006afc <__retarget_lock_init_recursive>:
 8006afc:	4770      	bx	lr

08006afe <__retarget_lock_acquire_recursive>:
 8006afe:	4770      	bx	lr

08006b00 <__retarget_lock_release_recursive>:
 8006b00:	4770      	bx	lr

08006b02 <quorem>:
 8006b02:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006b06:	6903      	ldr	r3, [r0, #16]
 8006b08:	690c      	ldr	r4, [r1, #16]
 8006b0a:	42a3      	cmp	r3, r4
 8006b0c:	4607      	mov	r7, r0
 8006b0e:	db7e      	blt.n	8006c0e <quorem+0x10c>
 8006b10:	3c01      	subs	r4, #1
 8006b12:	f101 0814 	add.w	r8, r1, #20
 8006b16:	00a3      	lsls	r3, r4, #2
 8006b18:	f100 0514 	add.w	r5, r0, #20
 8006b1c:	9300      	str	r3, [sp, #0]
 8006b1e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8006b22:	9301      	str	r3, [sp, #4]
 8006b24:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8006b28:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8006b2c:	3301      	adds	r3, #1
 8006b2e:	429a      	cmp	r2, r3
 8006b30:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8006b34:	fbb2 f6f3 	udiv	r6, r2, r3
 8006b38:	d32e      	bcc.n	8006b98 <quorem+0x96>
 8006b3a:	f04f 0a00 	mov.w	sl, #0
 8006b3e:	46c4      	mov	ip, r8
 8006b40:	46ae      	mov	lr, r5
 8006b42:	46d3      	mov	fp, sl
 8006b44:	f85c 3b04 	ldr.w	r3, [ip], #4
 8006b48:	b298      	uxth	r0, r3
 8006b4a:	fb06 a000 	mla	r0, r6, r0, sl
 8006b4e:	0c02      	lsrs	r2, r0, #16
 8006b50:	0c1b      	lsrs	r3, r3, #16
 8006b52:	fb06 2303 	mla	r3, r6, r3, r2
 8006b56:	f8de 2000 	ldr.w	r2, [lr]
 8006b5a:	b280      	uxth	r0, r0
 8006b5c:	b292      	uxth	r2, r2
 8006b5e:	1a12      	subs	r2, r2, r0
 8006b60:	445a      	add	r2, fp
 8006b62:	f8de 0000 	ldr.w	r0, [lr]
 8006b66:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8006b6a:	b29b      	uxth	r3, r3
 8006b6c:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8006b70:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8006b74:	b292      	uxth	r2, r2
 8006b76:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8006b7a:	45e1      	cmp	r9, ip
 8006b7c:	f84e 2b04 	str.w	r2, [lr], #4
 8006b80:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8006b84:	d2de      	bcs.n	8006b44 <quorem+0x42>
 8006b86:	9b00      	ldr	r3, [sp, #0]
 8006b88:	58eb      	ldr	r3, [r5, r3]
 8006b8a:	b92b      	cbnz	r3, 8006b98 <quorem+0x96>
 8006b8c:	9b01      	ldr	r3, [sp, #4]
 8006b8e:	3b04      	subs	r3, #4
 8006b90:	429d      	cmp	r5, r3
 8006b92:	461a      	mov	r2, r3
 8006b94:	d32f      	bcc.n	8006bf6 <quorem+0xf4>
 8006b96:	613c      	str	r4, [r7, #16]
 8006b98:	4638      	mov	r0, r7
 8006b9a:	f001 f97f 	bl	8007e9c <__mcmp>
 8006b9e:	2800      	cmp	r0, #0
 8006ba0:	db25      	blt.n	8006bee <quorem+0xec>
 8006ba2:	4629      	mov	r1, r5
 8006ba4:	2000      	movs	r0, #0
 8006ba6:	f858 2b04 	ldr.w	r2, [r8], #4
 8006baa:	f8d1 c000 	ldr.w	ip, [r1]
 8006bae:	fa1f fe82 	uxth.w	lr, r2
 8006bb2:	fa1f f38c 	uxth.w	r3, ip
 8006bb6:	eba3 030e 	sub.w	r3, r3, lr
 8006bba:	4403      	add	r3, r0
 8006bbc:	0c12      	lsrs	r2, r2, #16
 8006bbe:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8006bc2:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8006bc6:	b29b      	uxth	r3, r3
 8006bc8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006bcc:	45c1      	cmp	r9, r8
 8006bce:	f841 3b04 	str.w	r3, [r1], #4
 8006bd2:	ea4f 4022 	mov.w	r0, r2, asr #16
 8006bd6:	d2e6      	bcs.n	8006ba6 <quorem+0xa4>
 8006bd8:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8006bdc:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8006be0:	b922      	cbnz	r2, 8006bec <quorem+0xea>
 8006be2:	3b04      	subs	r3, #4
 8006be4:	429d      	cmp	r5, r3
 8006be6:	461a      	mov	r2, r3
 8006be8:	d30b      	bcc.n	8006c02 <quorem+0x100>
 8006bea:	613c      	str	r4, [r7, #16]
 8006bec:	3601      	adds	r6, #1
 8006bee:	4630      	mov	r0, r6
 8006bf0:	b003      	add	sp, #12
 8006bf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006bf6:	6812      	ldr	r2, [r2, #0]
 8006bf8:	3b04      	subs	r3, #4
 8006bfa:	2a00      	cmp	r2, #0
 8006bfc:	d1cb      	bne.n	8006b96 <quorem+0x94>
 8006bfe:	3c01      	subs	r4, #1
 8006c00:	e7c6      	b.n	8006b90 <quorem+0x8e>
 8006c02:	6812      	ldr	r2, [r2, #0]
 8006c04:	3b04      	subs	r3, #4
 8006c06:	2a00      	cmp	r2, #0
 8006c08:	d1ef      	bne.n	8006bea <quorem+0xe8>
 8006c0a:	3c01      	subs	r4, #1
 8006c0c:	e7ea      	b.n	8006be4 <quorem+0xe2>
 8006c0e:	2000      	movs	r0, #0
 8006c10:	e7ee      	b.n	8006bf0 <quorem+0xee>
 8006c12:	0000      	movs	r0, r0
 8006c14:	0000      	movs	r0, r0
	...

08006c18 <_dtoa_r>:
 8006c18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006c1c:	69c7      	ldr	r7, [r0, #28]
 8006c1e:	b097      	sub	sp, #92	@ 0x5c
 8006c20:	ed8d 0b04 	vstr	d0, [sp, #16]
 8006c24:	ec55 4b10 	vmov	r4, r5, d0
 8006c28:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 8006c2a:	9107      	str	r1, [sp, #28]
 8006c2c:	4681      	mov	r9, r0
 8006c2e:	920c      	str	r2, [sp, #48]	@ 0x30
 8006c30:	9311      	str	r3, [sp, #68]	@ 0x44
 8006c32:	b97f      	cbnz	r7, 8006c54 <_dtoa_r+0x3c>
 8006c34:	2010      	movs	r0, #16
 8006c36:	f000 fe09 	bl	800784c <malloc>
 8006c3a:	4602      	mov	r2, r0
 8006c3c:	f8c9 001c 	str.w	r0, [r9, #28]
 8006c40:	b920      	cbnz	r0, 8006c4c <_dtoa_r+0x34>
 8006c42:	4ba9      	ldr	r3, [pc, #676]	@ (8006ee8 <_dtoa_r+0x2d0>)
 8006c44:	21ef      	movs	r1, #239	@ 0xef
 8006c46:	48a9      	ldr	r0, [pc, #676]	@ (8006eec <_dtoa_r+0x2d4>)
 8006c48:	f001 fafa 	bl	8008240 <__assert_func>
 8006c4c:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8006c50:	6007      	str	r7, [r0, #0]
 8006c52:	60c7      	str	r7, [r0, #12]
 8006c54:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8006c58:	6819      	ldr	r1, [r3, #0]
 8006c5a:	b159      	cbz	r1, 8006c74 <_dtoa_r+0x5c>
 8006c5c:	685a      	ldr	r2, [r3, #4]
 8006c5e:	604a      	str	r2, [r1, #4]
 8006c60:	2301      	movs	r3, #1
 8006c62:	4093      	lsls	r3, r2
 8006c64:	608b      	str	r3, [r1, #8]
 8006c66:	4648      	mov	r0, r9
 8006c68:	f000 fee6 	bl	8007a38 <_Bfree>
 8006c6c:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8006c70:	2200      	movs	r2, #0
 8006c72:	601a      	str	r2, [r3, #0]
 8006c74:	1e2b      	subs	r3, r5, #0
 8006c76:	bfb9      	ittee	lt
 8006c78:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8006c7c:	9305      	strlt	r3, [sp, #20]
 8006c7e:	2300      	movge	r3, #0
 8006c80:	6033      	strge	r3, [r6, #0]
 8006c82:	9f05      	ldr	r7, [sp, #20]
 8006c84:	4b9a      	ldr	r3, [pc, #616]	@ (8006ef0 <_dtoa_r+0x2d8>)
 8006c86:	bfbc      	itt	lt
 8006c88:	2201      	movlt	r2, #1
 8006c8a:	6032      	strlt	r2, [r6, #0]
 8006c8c:	43bb      	bics	r3, r7
 8006c8e:	d112      	bne.n	8006cb6 <_dtoa_r+0x9e>
 8006c90:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8006c92:	f242 730f 	movw	r3, #9999	@ 0x270f
 8006c96:	6013      	str	r3, [r2, #0]
 8006c98:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8006c9c:	4323      	orrs	r3, r4
 8006c9e:	f000 855a 	beq.w	8007756 <_dtoa_r+0xb3e>
 8006ca2:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8006ca4:	f8df a25c 	ldr.w	sl, [pc, #604]	@ 8006f04 <_dtoa_r+0x2ec>
 8006ca8:	2b00      	cmp	r3, #0
 8006caa:	f000 855c 	beq.w	8007766 <_dtoa_r+0xb4e>
 8006cae:	f10a 0303 	add.w	r3, sl, #3
 8006cb2:	f000 bd56 	b.w	8007762 <_dtoa_r+0xb4a>
 8006cb6:	ed9d 7b04 	vldr	d7, [sp, #16]
 8006cba:	2200      	movs	r2, #0
 8006cbc:	ec51 0b17 	vmov	r0, r1, d7
 8006cc0:	2300      	movs	r3, #0
 8006cc2:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
 8006cc6:	f7f9 ff1f 	bl	8000b08 <__aeabi_dcmpeq>
 8006cca:	4680      	mov	r8, r0
 8006ccc:	b158      	cbz	r0, 8006ce6 <_dtoa_r+0xce>
 8006cce:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8006cd0:	2301      	movs	r3, #1
 8006cd2:	6013      	str	r3, [r2, #0]
 8006cd4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8006cd6:	b113      	cbz	r3, 8006cde <_dtoa_r+0xc6>
 8006cd8:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8006cda:	4b86      	ldr	r3, [pc, #536]	@ (8006ef4 <_dtoa_r+0x2dc>)
 8006cdc:	6013      	str	r3, [r2, #0]
 8006cde:	f8df a228 	ldr.w	sl, [pc, #552]	@ 8006f08 <_dtoa_r+0x2f0>
 8006ce2:	f000 bd40 	b.w	8007766 <_dtoa_r+0xb4e>
 8006ce6:	ed9d 0b0a 	vldr	d0, [sp, #40]	@ 0x28
 8006cea:	aa14      	add	r2, sp, #80	@ 0x50
 8006cec:	a915      	add	r1, sp, #84	@ 0x54
 8006cee:	4648      	mov	r0, r9
 8006cf0:	f001 f984 	bl	8007ffc <__d2b>
 8006cf4:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8006cf8:	9002      	str	r0, [sp, #8]
 8006cfa:	2e00      	cmp	r6, #0
 8006cfc:	d078      	beq.n	8006df0 <_dtoa_r+0x1d8>
 8006cfe:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006d00:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 8006d04:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006d08:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8006d0c:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8006d10:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8006d14:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8006d18:	4619      	mov	r1, r3
 8006d1a:	2200      	movs	r2, #0
 8006d1c:	4b76      	ldr	r3, [pc, #472]	@ (8006ef8 <_dtoa_r+0x2e0>)
 8006d1e:	f7f9 fad3 	bl	80002c8 <__aeabi_dsub>
 8006d22:	a36b      	add	r3, pc, #428	@ (adr r3, 8006ed0 <_dtoa_r+0x2b8>)
 8006d24:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006d28:	f7f9 fc86 	bl	8000638 <__aeabi_dmul>
 8006d2c:	a36a      	add	r3, pc, #424	@ (adr r3, 8006ed8 <_dtoa_r+0x2c0>)
 8006d2e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006d32:	f7f9 facb 	bl	80002cc <__adddf3>
 8006d36:	4604      	mov	r4, r0
 8006d38:	4630      	mov	r0, r6
 8006d3a:	460d      	mov	r5, r1
 8006d3c:	f7f9 fc12 	bl	8000564 <__aeabi_i2d>
 8006d40:	a367      	add	r3, pc, #412	@ (adr r3, 8006ee0 <_dtoa_r+0x2c8>)
 8006d42:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006d46:	f7f9 fc77 	bl	8000638 <__aeabi_dmul>
 8006d4a:	4602      	mov	r2, r0
 8006d4c:	460b      	mov	r3, r1
 8006d4e:	4620      	mov	r0, r4
 8006d50:	4629      	mov	r1, r5
 8006d52:	f7f9 fabb 	bl	80002cc <__adddf3>
 8006d56:	4604      	mov	r4, r0
 8006d58:	460d      	mov	r5, r1
 8006d5a:	f7f9 ff1d 	bl	8000b98 <__aeabi_d2iz>
 8006d5e:	2200      	movs	r2, #0
 8006d60:	4607      	mov	r7, r0
 8006d62:	2300      	movs	r3, #0
 8006d64:	4620      	mov	r0, r4
 8006d66:	4629      	mov	r1, r5
 8006d68:	f7f9 fed8 	bl	8000b1c <__aeabi_dcmplt>
 8006d6c:	b140      	cbz	r0, 8006d80 <_dtoa_r+0x168>
 8006d6e:	4638      	mov	r0, r7
 8006d70:	f7f9 fbf8 	bl	8000564 <__aeabi_i2d>
 8006d74:	4622      	mov	r2, r4
 8006d76:	462b      	mov	r3, r5
 8006d78:	f7f9 fec6 	bl	8000b08 <__aeabi_dcmpeq>
 8006d7c:	b900      	cbnz	r0, 8006d80 <_dtoa_r+0x168>
 8006d7e:	3f01      	subs	r7, #1
 8006d80:	2f16      	cmp	r7, #22
 8006d82:	d852      	bhi.n	8006e2a <_dtoa_r+0x212>
 8006d84:	4b5d      	ldr	r3, [pc, #372]	@ (8006efc <_dtoa_r+0x2e4>)
 8006d86:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8006d8a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006d8e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8006d92:	f7f9 fec3 	bl	8000b1c <__aeabi_dcmplt>
 8006d96:	2800      	cmp	r0, #0
 8006d98:	d049      	beq.n	8006e2e <_dtoa_r+0x216>
 8006d9a:	3f01      	subs	r7, #1
 8006d9c:	2300      	movs	r3, #0
 8006d9e:	9310      	str	r3, [sp, #64]	@ 0x40
 8006da0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8006da2:	1b9b      	subs	r3, r3, r6
 8006da4:	1e5a      	subs	r2, r3, #1
 8006da6:	bf45      	ittet	mi
 8006da8:	f1c3 0301 	rsbmi	r3, r3, #1
 8006dac:	9300      	strmi	r3, [sp, #0]
 8006dae:	2300      	movpl	r3, #0
 8006db0:	2300      	movmi	r3, #0
 8006db2:	9206      	str	r2, [sp, #24]
 8006db4:	bf54      	ite	pl
 8006db6:	9300      	strpl	r3, [sp, #0]
 8006db8:	9306      	strmi	r3, [sp, #24]
 8006dba:	2f00      	cmp	r7, #0
 8006dbc:	db39      	blt.n	8006e32 <_dtoa_r+0x21a>
 8006dbe:	9b06      	ldr	r3, [sp, #24]
 8006dc0:	970d      	str	r7, [sp, #52]	@ 0x34
 8006dc2:	443b      	add	r3, r7
 8006dc4:	9306      	str	r3, [sp, #24]
 8006dc6:	2300      	movs	r3, #0
 8006dc8:	9308      	str	r3, [sp, #32]
 8006dca:	9b07      	ldr	r3, [sp, #28]
 8006dcc:	2b09      	cmp	r3, #9
 8006dce:	d863      	bhi.n	8006e98 <_dtoa_r+0x280>
 8006dd0:	2b05      	cmp	r3, #5
 8006dd2:	bfc4      	itt	gt
 8006dd4:	3b04      	subgt	r3, #4
 8006dd6:	9307      	strgt	r3, [sp, #28]
 8006dd8:	9b07      	ldr	r3, [sp, #28]
 8006dda:	f1a3 0302 	sub.w	r3, r3, #2
 8006dde:	bfcc      	ite	gt
 8006de0:	2400      	movgt	r4, #0
 8006de2:	2401      	movle	r4, #1
 8006de4:	2b03      	cmp	r3, #3
 8006de6:	d863      	bhi.n	8006eb0 <_dtoa_r+0x298>
 8006de8:	e8df f003 	tbb	[pc, r3]
 8006dec:	2b375452 	.word	0x2b375452
 8006df0:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 8006df4:	441e      	add	r6, r3
 8006df6:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8006dfa:	2b20      	cmp	r3, #32
 8006dfc:	bfc1      	itttt	gt
 8006dfe:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8006e02:	409f      	lslgt	r7, r3
 8006e04:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8006e08:	fa24 f303 	lsrgt.w	r3, r4, r3
 8006e0c:	bfd6      	itet	le
 8006e0e:	f1c3 0320 	rsble	r3, r3, #32
 8006e12:	ea47 0003 	orrgt.w	r0, r7, r3
 8006e16:	fa04 f003 	lslle.w	r0, r4, r3
 8006e1a:	f7f9 fb93 	bl	8000544 <__aeabi_ui2d>
 8006e1e:	2201      	movs	r2, #1
 8006e20:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8006e24:	3e01      	subs	r6, #1
 8006e26:	9212      	str	r2, [sp, #72]	@ 0x48
 8006e28:	e776      	b.n	8006d18 <_dtoa_r+0x100>
 8006e2a:	2301      	movs	r3, #1
 8006e2c:	e7b7      	b.n	8006d9e <_dtoa_r+0x186>
 8006e2e:	9010      	str	r0, [sp, #64]	@ 0x40
 8006e30:	e7b6      	b.n	8006da0 <_dtoa_r+0x188>
 8006e32:	9b00      	ldr	r3, [sp, #0]
 8006e34:	1bdb      	subs	r3, r3, r7
 8006e36:	9300      	str	r3, [sp, #0]
 8006e38:	427b      	negs	r3, r7
 8006e3a:	9308      	str	r3, [sp, #32]
 8006e3c:	2300      	movs	r3, #0
 8006e3e:	930d      	str	r3, [sp, #52]	@ 0x34
 8006e40:	e7c3      	b.n	8006dca <_dtoa_r+0x1b2>
 8006e42:	2301      	movs	r3, #1
 8006e44:	9309      	str	r3, [sp, #36]	@ 0x24
 8006e46:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8006e48:	eb07 0b03 	add.w	fp, r7, r3
 8006e4c:	f10b 0301 	add.w	r3, fp, #1
 8006e50:	2b01      	cmp	r3, #1
 8006e52:	9303      	str	r3, [sp, #12]
 8006e54:	bfb8      	it	lt
 8006e56:	2301      	movlt	r3, #1
 8006e58:	e006      	b.n	8006e68 <_dtoa_r+0x250>
 8006e5a:	2301      	movs	r3, #1
 8006e5c:	9309      	str	r3, [sp, #36]	@ 0x24
 8006e5e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8006e60:	2b00      	cmp	r3, #0
 8006e62:	dd28      	ble.n	8006eb6 <_dtoa_r+0x29e>
 8006e64:	469b      	mov	fp, r3
 8006e66:	9303      	str	r3, [sp, #12]
 8006e68:	f8d9 001c 	ldr.w	r0, [r9, #28]
 8006e6c:	2100      	movs	r1, #0
 8006e6e:	2204      	movs	r2, #4
 8006e70:	f102 0514 	add.w	r5, r2, #20
 8006e74:	429d      	cmp	r5, r3
 8006e76:	d926      	bls.n	8006ec6 <_dtoa_r+0x2ae>
 8006e78:	6041      	str	r1, [r0, #4]
 8006e7a:	4648      	mov	r0, r9
 8006e7c:	f000 fd9c 	bl	80079b8 <_Balloc>
 8006e80:	4682      	mov	sl, r0
 8006e82:	2800      	cmp	r0, #0
 8006e84:	d142      	bne.n	8006f0c <_dtoa_r+0x2f4>
 8006e86:	4b1e      	ldr	r3, [pc, #120]	@ (8006f00 <_dtoa_r+0x2e8>)
 8006e88:	4602      	mov	r2, r0
 8006e8a:	f240 11af 	movw	r1, #431	@ 0x1af
 8006e8e:	e6da      	b.n	8006c46 <_dtoa_r+0x2e>
 8006e90:	2300      	movs	r3, #0
 8006e92:	e7e3      	b.n	8006e5c <_dtoa_r+0x244>
 8006e94:	2300      	movs	r3, #0
 8006e96:	e7d5      	b.n	8006e44 <_dtoa_r+0x22c>
 8006e98:	2401      	movs	r4, #1
 8006e9a:	2300      	movs	r3, #0
 8006e9c:	9307      	str	r3, [sp, #28]
 8006e9e:	9409      	str	r4, [sp, #36]	@ 0x24
 8006ea0:	f04f 3bff 	mov.w	fp, #4294967295
 8006ea4:	2200      	movs	r2, #0
 8006ea6:	f8cd b00c 	str.w	fp, [sp, #12]
 8006eaa:	2312      	movs	r3, #18
 8006eac:	920c      	str	r2, [sp, #48]	@ 0x30
 8006eae:	e7db      	b.n	8006e68 <_dtoa_r+0x250>
 8006eb0:	2301      	movs	r3, #1
 8006eb2:	9309      	str	r3, [sp, #36]	@ 0x24
 8006eb4:	e7f4      	b.n	8006ea0 <_dtoa_r+0x288>
 8006eb6:	f04f 0b01 	mov.w	fp, #1
 8006eba:	f8cd b00c 	str.w	fp, [sp, #12]
 8006ebe:	465b      	mov	r3, fp
 8006ec0:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 8006ec4:	e7d0      	b.n	8006e68 <_dtoa_r+0x250>
 8006ec6:	3101      	adds	r1, #1
 8006ec8:	0052      	lsls	r2, r2, #1
 8006eca:	e7d1      	b.n	8006e70 <_dtoa_r+0x258>
 8006ecc:	f3af 8000 	nop.w
 8006ed0:	636f4361 	.word	0x636f4361
 8006ed4:	3fd287a7 	.word	0x3fd287a7
 8006ed8:	8b60c8b3 	.word	0x8b60c8b3
 8006edc:	3fc68a28 	.word	0x3fc68a28
 8006ee0:	509f79fb 	.word	0x509f79fb
 8006ee4:	3fd34413 	.word	0x3fd34413
 8006ee8:	08008b31 	.word	0x08008b31
 8006eec:	08008b48 	.word	0x08008b48
 8006ef0:	7ff00000 	.word	0x7ff00000
 8006ef4:	08008b01 	.word	0x08008b01
 8006ef8:	3ff80000 	.word	0x3ff80000
 8006efc:	08008c98 	.word	0x08008c98
 8006f00:	08008ba0 	.word	0x08008ba0
 8006f04:	08008b2d 	.word	0x08008b2d
 8006f08:	08008b00 	.word	0x08008b00
 8006f0c:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8006f10:	6018      	str	r0, [r3, #0]
 8006f12:	9b03      	ldr	r3, [sp, #12]
 8006f14:	2b0e      	cmp	r3, #14
 8006f16:	f200 80a1 	bhi.w	800705c <_dtoa_r+0x444>
 8006f1a:	2c00      	cmp	r4, #0
 8006f1c:	f000 809e 	beq.w	800705c <_dtoa_r+0x444>
 8006f20:	2f00      	cmp	r7, #0
 8006f22:	dd33      	ble.n	8006f8c <_dtoa_r+0x374>
 8006f24:	4b9c      	ldr	r3, [pc, #624]	@ (8007198 <_dtoa_r+0x580>)
 8006f26:	f007 020f 	and.w	r2, r7, #15
 8006f2a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006f2e:	ed93 7b00 	vldr	d7, [r3]
 8006f32:	05f8      	lsls	r0, r7, #23
 8006f34:	ed8d 7b0e 	vstr	d7, [sp, #56]	@ 0x38
 8006f38:	ea4f 1427 	mov.w	r4, r7, asr #4
 8006f3c:	d516      	bpl.n	8006f6c <_dtoa_r+0x354>
 8006f3e:	4b97      	ldr	r3, [pc, #604]	@ (800719c <_dtoa_r+0x584>)
 8006f40:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8006f44:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8006f48:	f7f9 fca0 	bl	800088c <__aeabi_ddiv>
 8006f4c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8006f50:	f004 040f 	and.w	r4, r4, #15
 8006f54:	2603      	movs	r6, #3
 8006f56:	4d91      	ldr	r5, [pc, #580]	@ (800719c <_dtoa_r+0x584>)
 8006f58:	b954      	cbnz	r4, 8006f70 <_dtoa_r+0x358>
 8006f5a:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8006f5e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8006f62:	f7f9 fc93 	bl	800088c <__aeabi_ddiv>
 8006f66:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8006f6a:	e028      	b.n	8006fbe <_dtoa_r+0x3a6>
 8006f6c:	2602      	movs	r6, #2
 8006f6e:	e7f2      	b.n	8006f56 <_dtoa_r+0x33e>
 8006f70:	07e1      	lsls	r1, r4, #31
 8006f72:	d508      	bpl.n	8006f86 <_dtoa_r+0x36e>
 8006f74:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8006f78:	e9d5 2300 	ldrd	r2, r3, [r5]
 8006f7c:	f7f9 fb5c 	bl	8000638 <__aeabi_dmul>
 8006f80:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8006f84:	3601      	adds	r6, #1
 8006f86:	1064      	asrs	r4, r4, #1
 8006f88:	3508      	adds	r5, #8
 8006f8a:	e7e5      	b.n	8006f58 <_dtoa_r+0x340>
 8006f8c:	f000 80af 	beq.w	80070ee <_dtoa_r+0x4d6>
 8006f90:	427c      	negs	r4, r7
 8006f92:	4b81      	ldr	r3, [pc, #516]	@ (8007198 <_dtoa_r+0x580>)
 8006f94:	4d81      	ldr	r5, [pc, #516]	@ (800719c <_dtoa_r+0x584>)
 8006f96:	f004 020f 	and.w	r2, r4, #15
 8006f9a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006f9e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006fa2:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8006fa6:	f7f9 fb47 	bl	8000638 <__aeabi_dmul>
 8006faa:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8006fae:	1124      	asrs	r4, r4, #4
 8006fb0:	2300      	movs	r3, #0
 8006fb2:	2602      	movs	r6, #2
 8006fb4:	2c00      	cmp	r4, #0
 8006fb6:	f040 808f 	bne.w	80070d8 <_dtoa_r+0x4c0>
 8006fba:	2b00      	cmp	r3, #0
 8006fbc:	d1d3      	bne.n	8006f66 <_dtoa_r+0x34e>
 8006fbe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8006fc0:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8006fc4:	2b00      	cmp	r3, #0
 8006fc6:	f000 8094 	beq.w	80070f2 <_dtoa_r+0x4da>
 8006fca:	4b75      	ldr	r3, [pc, #468]	@ (80071a0 <_dtoa_r+0x588>)
 8006fcc:	2200      	movs	r2, #0
 8006fce:	4620      	mov	r0, r4
 8006fd0:	4629      	mov	r1, r5
 8006fd2:	f7f9 fda3 	bl	8000b1c <__aeabi_dcmplt>
 8006fd6:	2800      	cmp	r0, #0
 8006fd8:	f000 808b 	beq.w	80070f2 <_dtoa_r+0x4da>
 8006fdc:	9b03      	ldr	r3, [sp, #12]
 8006fde:	2b00      	cmp	r3, #0
 8006fe0:	f000 8087 	beq.w	80070f2 <_dtoa_r+0x4da>
 8006fe4:	f1bb 0f00 	cmp.w	fp, #0
 8006fe8:	dd34      	ble.n	8007054 <_dtoa_r+0x43c>
 8006fea:	4620      	mov	r0, r4
 8006fec:	4b6d      	ldr	r3, [pc, #436]	@ (80071a4 <_dtoa_r+0x58c>)
 8006fee:	2200      	movs	r2, #0
 8006ff0:	4629      	mov	r1, r5
 8006ff2:	f7f9 fb21 	bl	8000638 <__aeabi_dmul>
 8006ff6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8006ffa:	f107 38ff 	add.w	r8, r7, #4294967295
 8006ffe:	3601      	adds	r6, #1
 8007000:	465c      	mov	r4, fp
 8007002:	4630      	mov	r0, r6
 8007004:	f7f9 faae 	bl	8000564 <__aeabi_i2d>
 8007008:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800700c:	f7f9 fb14 	bl	8000638 <__aeabi_dmul>
 8007010:	4b65      	ldr	r3, [pc, #404]	@ (80071a8 <_dtoa_r+0x590>)
 8007012:	2200      	movs	r2, #0
 8007014:	f7f9 f95a 	bl	80002cc <__adddf3>
 8007018:	4605      	mov	r5, r0
 800701a:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 800701e:	2c00      	cmp	r4, #0
 8007020:	d16a      	bne.n	80070f8 <_dtoa_r+0x4e0>
 8007022:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8007026:	4b61      	ldr	r3, [pc, #388]	@ (80071ac <_dtoa_r+0x594>)
 8007028:	2200      	movs	r2, #0
 800702a:	f7f9 f94d 	bl	80002c8 <__aeabi_dsub>
 800702e:	4602      	mov	r2, r0
 8007030:	460b      	mov	r3, r1
 8007032:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8007036:	462a      	mov	r2, r5
 8007038:	4633      	mov	r3, r6
 800703a:	f7f9 fd8d 	bl	8000b58 <__aeabi_dcmpgt>
 800703e:	2800      	cmp	r0, #0
 8007040:	f040 8298 	bne.w	8007574 <_dtoa_r+0x95c>
 8007044:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8007048:	462a      	mov	r2, r5
 800704a:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 800704e:	f7f9 fd65 	bl	8000b1c <__aeabi_dcmplt>
 8007052:	bb38      	cbnz	r0, 80070a4 <_dtoa_r+0x48c>
 8007054:	e9dd 340a 	ldrd	r3, r4, [sp, #40]	@ 0x28
 8007058:	e9cd 3404 	strd	r3, r4, [sp, #16]
 800705c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 800705e:	2b00      	cmp	r3, #0
 8007060:	f2c0 8157 	blt.w	8007312 <_dtoa_r+0x6fa>
 8007064:	2f0e      	cmp	r7, #14
 8007066:	f300 8154 	bgt.w	8007312 <_dtoa_r+0x6fa>
 800706a:	4b4b      	ldr	r3, [pc, #300]	@ (8007198 <_dtoa_r+0x580>)
 800706c:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8007070:	ed93 7b00 	vldr	d7, [r3]
 8007074:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8007076:	2b00      	cmp	r3, #0
 8007078:	ed8d 7b00 	vstr	d7, [sp]
 800707c:	f280 80e5 	bge.w	800724a <_dtoa_r+0x632>
 8007080:	9b03      	ldr	r3, [sp, #12]
 8007082:	2b00      	cmp	r3, #0
 8007084:	f300 80e1 	bgt.w	800724a <_dtoa_r+0x632>
 8007088:	d10c      	bne.n	80070a4 <_dtoa_r+0x48c>
 800708a:	4b48      	ldr	r3, [pc, #288]	@ (80071ac <_dtoa_r+0x594>)
 800708c:	2200      	movs	r2, #0
 800708e:	ec51 0b17 	vmov	r0, r1, d7
 8007092:	f7f9 fad1 	bl	8000638 <__aeabi_dmul>
 8007096:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800709a:	f7f9 fd53 	bl	8000b44 <__aeabi_dcmpge>
 800709e:	2800      	cmp	r0, #0
 80070a0:	f000 8266 	beq.w	8007570 <_dtoa_r+0x958>
 80070a4:	2400      	movs	r4, #0
 80070a6:	4625      	mov	r5, r4
 80070a8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80070aa:	4656      	mov	r6, sl
 80070ac:	ea6f 0803 	mvn.w	r8, r3
 80070b0:	2700      	movs	r7, #0
 80070b2:	4621      	mov	r1, r4
 80070b4:	4648      	mov	r0, r9
 80070b6:	f000 fcbf 	bl	8007a38 <_Bfree>
 80070ba:	2d00      	cmp	r5, #0
 80070bc:	f000 80bd 	beq.w	800723a <_dtoa_r+0x622>
 80070c0:	b12f      	cbz	r7, 80070ce <_dtoa_r+0x4b6>
 80070c2:	42af      	cmp	r7, r5
 80070c4:	d003      	beq.n	80070ce <_dtoa_r+0x4b6>
 80070c6:	4639      	mov	r1, r7
 80070c8:	4648      	mov	r0, r9
 80070ca:	f000 fcb5 	bl	8007a38 <_Bfree>
 80070ce:	4629      	mov	r1, r5
 80070d0:	4648      	mov	r0, r9
 80070d2:	f000 fcb1 	bl	8007a38 <_Bfree>
 80070d6:	e0b0      	b.n	800723a <_dtoa_r+0x622>
 80070d8:	07e2      	lsls	r2, r4, #31
 80070da:	d505      	bpl.n	80070e8 <_dtoa_r+0x4d0>
 80070dc:	e9d5 2300 	ldrd	r2, r3, [r5]
 80070e0:	f7f9 faaa 	bl	8000638 <__aeabi_dmul>
 80070e4:	3601      	adds	r6, #1
 80070e6:	2301      	movs	r3, #1
 80070e8:	1064      	asrs	r4, r4, #1
 80070ea:	3508      	adds	r5, #8
 80070ec:	e762      	b.n	8006fb4 <_dtoa_r+0x39c>
 80070ee:	2602      	movs	r6, #2
 80070f0:	e765      	b.n	8006fbe <_dtoa_r+0x3a6>
 80070f2:	9c03      	ldr	r4, [sp, #12]
 80070f4:	46b8      	mov	r8, r7
 80070f6:	e784      	b.n	8007002 <_dtoa_r+0x3ea>
 80070f8:	4b27      	ldr	r3, [pc, #156]	@ (8007198 <_dtoa_r+0x580>)
 80070fa:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80070fc:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8007100:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8007104:	4454      	add	r4, sl
 8007106:	2900      	cmp	r1, #0
 8007108:	d054      	beq.n	80071b4 <_dtoa_r+0x59c>
 800710a:	4929      	ldr	r1, [pc, #164]	@ (80071b0 <_dtoa_r+0x598>)
 800710c:	2000      	movs	r0, #0
 800710e:	f7f9 fbbd 	bl	800088c <__aeabi_ddiv>
 8007112:	4633      	mov	r3, r6
 8007114:	462a      	mov	r2, r5
 8007116:	f7f9 f8d7 	bl	80002c8 <__aeabi_dsub>
 800711a:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 800711e:	4656      	mov	r6, sl
 8007120:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8007124:	f7f9 fd38 	bl	8000b98 <__aeabi_d2iz>
 8007128:	4605      	mov	r5, r0
 800712a:	f7f9 fa1b 	bl	8000564 <__aeabi_i2d>
 800712e:	4602      	mov	r2, r0
 8007130:	460b      	mov	r3, r1
 8007132:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8007136:	f7f9 f8c7 	bl	80002c8 <__aeabi_dsub>
 800713a:	3530      	adds	r5, #48	@ 0x30
 800713c:	4602      	mov	r2, r0
 800713e:	460b      	mov	r3, r1
 8007140:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8007144:	f806 5b01 	strb.w	r5, [r6], #1
 8007148:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 800714c:	f7f9 fce6 	bl	8000b1c <__aeabi_dcmplt>
 8007150:	2800      	cmp	r0, #0
 8007152:	d172      	bne.n	800723a <_dtoa_r+0x622>
 8007154:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8007158:	4911      	ldr	r1, [pc, #68]	@ (80071a0 <_dtoa_r+0x588>)
 800715a:	2000      	movs	r0, #0
 800715c:	f7f9 f8b4 	bl	80002c8 <__aeabi_dsub>
 8007160:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8007164:	f7f9 fcda 	bl	8000b1c <__aeabi_dcmplt>
 8007168:	2800      	cmp	r0, #0
 800716a:	f040 80b4 	bne.w	80072d6 <_dtoa_r+0x6be>
 800716e:	42a6      	cmp	r6, r4
 8007170:	f43f af70 	beq.w	8007054 <_dtoa_r+0x43c>
 8007174:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8007178:	4b0a      	ldr	r3, [pc, #40]	@ (80071a4 <_dtoa_r+0x58c>)
 800717a:	2200      	movs	r2, #0
 800717c:	f7f9 fa5c 	bl	8000638 <__aeabi_dmul>
 8007180:	4b08      	ldr	r3, [pc, #32]	@ (80071a4 <_dtoa_r+0x58c>)
 8007182:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8007186:	2200      	movs	r2, #0
 8007188:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800718c:	f7f9 fa54 	bl	8000638 <__aeabi_dmul>
 8007190:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8007194:	e7c4      	b.n	8007120 <_dtoa_r+0x508>
 8007196:	bf00      	nop
 8007198:	08008c98 	.word	0x08008c98
 800719c:	08008c70 	.word	0x08008c70
 80071a0:	3ff00000 	.word	0x3ff00000
 80071a4:	40240000 	.word	0x40240000
 80071a8:	401c0000 	.word	0x401c0000
 80071ac:	40140000 	.word	0x40140000
 80071b0:	3fe00000 	.word	0x3fe00000
 80071b4:	4631      	mov	r1, r6
 80071b6:	4628      	mov	r0, r5
 80071b8:	f7f9 fa3e 	bl	8000638 <__aeabi_dmul>
 80071bc:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 80071c0:	9413      	str	r4, [sp, #76]	@ 0x4c
 80071c2:	4656      	mov	r6, sl
 80071c4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80071c8:	f7f9 fce6 	bl	8000b98 <__aeabi_d2iz>
 80071cc:	4605      	mov	r5, r0
 80071ce:	f7f9 f9c9 	bl	8000564 <__aeabi_i2d>
 80071d2:	4602      	mov	r2, r0
 80071d4:	460b      	mov	r3, r1
 80071d6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80071da:	f7f9 f875 	bl	80002c8 <__aeabi_dsub>
 80071de:	3530      	adds	r5, #48	@ 0x30
 80071e0:	f806 5b01 	strb.w	r5, [r6], #1
 80071e4:	4602      	mov	r2, r0
 80071e6:	460b      	mov	r3, r1
 80071e8:	42a6      	cmp	r6, r4
 80071ea:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80071ee:	f04f 0200 	mov.w	r2, #0
 80071f2:	d124      	bne.n	800723e <_dtoa_r+0x626>
 80071f4:	4baf      	ldr	r3, [pc, #700]	@ (80074b4 <_dtoa_r+0x89c>)
 80071f6:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 80071fa:	f7f9 f867 	bl	80002cc <__adddf3>
 80071fe:	4602      	mov	r2, r0
 8007200:	460b      	mov	r3, r1
 8007202:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8007206:	f7f9 fca7 	bl	8000b58 <__aeabi_dcmpgt>
 800720a:	2800      	cmp	r0, #0
 800720c:	d163      	bne.n	80072d6 <_dtoa_r+0x6be>
 800720e:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8007212:	49a8      	ldr	r1, [pc, #672]	@ (80074b4 <_dtoa_r+0x89c>)
 8007214:	2000      	movs	r0, #0
 8007216:	f7f9 f857 	bl	80002c8 <__aeabi_dsub>
 800721a:	4602      	mov	r2, r0
 800721c:	460b      	mov	r3, r1
 800721e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8007222:	f7f9 fc7b 	bl	8000b1c <__aeabi_dcmplt>
 8007226:	2800      	cmp	r0, #0
 8007228:	f43f af14 	beq.w	8007054 <_dtoa_r+0x43c>
 800722c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 800722e:	1e73      	subs	r3, r6, #1
 8007230:	9313      	str	r3, [sp, #76]	@ 0x4c
 8007232:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8007236:	2b30      	cmp	r3, #48	@ 0x30
 8007238:	d0f8      	beq.n	800722c <_dtoa_r+0x614>
 800723a:	4647      	mov	r7, r8
 800723c:	e03b      	b.n	80072b6 <_dtoa_r+0x69e>
 800723e:	4b9e      	ldr	r3, [pc, #632]	@ (80074b8 <_dtoa_r+0x8a0>)
 8007240:	f7f9 f9fa 	bl	8000638 <__aeabi_dmul>
 8007244:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8007248:	e7bc      	b.n	80071c4 <_dtoa_r+0x5ac>
 800724a:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 800724e:	4656      	mov	r6, sl
 8007250:	e9dd 2300 	ldrd	r2, r3, [sp]
 8007254:	4620      	mov	r0, r4
 8007256:	4629      	mov	r1, r5
 8007258:	f7f9 fb18 	bl	800088c <__aeabi_ddiv>
 800725c:	f7f9 fc9c 	bl	8000b98 <__aeabi_d2iz>
 8007260:	4680      	mov	r8, r0
 8007262:	f7f9 f97f 	bl	8000564 <__aeabi_i2d>
 8007266:	e9dd 2300 	ldrd	r2, r3, [sp]
 800726a:	f7f9 f9e5 	bl	8000638 <__aeabi_dmul>
 800726e:	4602      	mov	r2, r0
 8007270:	460b      	mov	r3, r1
 8007272:	4620      	mov	r0, r4
 8007274:	4629      	mov	r1, r5
 8007276:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 800727a:	f7f9 f825 	bl	80002c8 <__aeabi_dsub>
 800727e:	f806 4b01 	strb.w	r4, [r6], #1
 8007282:	9d03      	ldr	r5, [sp, #12]
 8007284:	eba6 040a 	sub.w	r4, r6, sl
 8007288:	42a5      	cmp	r5, r4
 800728a:	4602      	mov	r2, r0
 800728c:	460b      	mov	r3, r1
 800728e:	d133      	bne.n	80072f8 <_dtoa_r+0x6e0>
 8007290:	f7f9 f81c 	bl	80002cc <__adddf3>
 8007294:	e9dd 2300 	ldrd	r2, r3, [sp]
 8007298:	4604      	mov	r4, r0
 800729a:	460d      	mov	r5, r1
 800729c:	f7f9 fc5c 	bl	8000b58 <__aeabi_dcmpgt>
 80072a0:	b9c0      	cbnz	r0, 80072d4 <_dtoa_r+0x6bc>
 80072a2:	e9dd 2300 	ldrd	r2, r3, [sp]
 80072a6:	4620      	mov	r0, r4
 80072a8:	4629      	mov	r1, r5
 80072aa:	f7f9 fc2d 	bl	8000b08 <__aeabi_dcmpeq>
 80072ae:	b110      	cbz	r0, 80072b6 <_dtoa_r+0x69e>
 80072b0:	f018 0f01 	tst.w	r8, #1
 80072b4:	d10e      	bne.n	80072d4 <_dtoa_r+0x6bc>
 80072b6:	9902      	ldr	r1, [sp, #8]
 80072b8:	4648      	mov	r0, r9
 80072ba:	f000 fbbd 	bl	8007a38 <_Bfree>
 80072be:	2300      	movs	r3, #0
 80072c0:	7033      	strb	r3, [r6, #0]
 80072c2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80072c4:	3701      	adds	r7, #1
 80072c6:	601f      	str	r7, [r3, #0]
 80072c8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80072ca:	2b00      	cmp	r3, #0
 80072cc:	f000 824b 	beq.w	8007766 <_dtoa_r+0xb4e>
 80072d0:	601e      	str	r6, [r3, #0]
 80072d2:	e248      	b.n	8007766 <_dtoa_r+0xb4e>
 80072d4:	46b8      	mov	r8, r7
 80072d6:	4633      	mov	r3, r6
 80072d8:	461e      	mov	r6, r3
 80072da:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80072de:	2a39      	cmp	r2, #57	@ 0x39
 80072e0:	d106      	bne.n	80072f0 <_dtoa_r+0x6d8>
 80072e2:	459a      	cmp	sl, r3
 80072e4:	d1f8      	bne.n	80072d8 <_dtoa_r+0x6c0>
 80072e6:	2230      	movs	r2, #48	@ 0x30
 80072e8:	f108 0801 	add.w	r8, r8, #1
 80072ec:	f88a 2000 	strb.w	r2, [sl]
 80072f0:	781a      	ldrb	r2, [r3, #0]
 80072f2:	3201      	adds	r2, #1
 80072f4:	701a      	strb	r2, [r3, #0]
 80072f6:	e7a0      	b.n	800723a <_dtoa_r+0x622>
 80072f8:	4b6f      	ldr	r3, [pc, #444]	@ (80074b8 <_dtoa_r+0x8a0>)
 80072fa:	2200      	movs	r2, #0
 80072fc:	f7f9 f99c 	bl	8000638 <__aeabi_dmul>
 8007300:	2200      	movs	r2, #0
 8007302:	2300      	movs	r3, #0
 8007304:	4604      	mov	r4, r0
 8007306:	460d      	mov	r5, r1
 8007308:	f7f9 fbfe 	bl	8000b08 <__aeabi_dcmpeq>
 800730c:	2800      	cmp	r0, #0
 800730e:	d09f      	beq.n	8007250 <_dtoa_r+0x638>
 8007310:	e7d1      	b.n	80072b6 <_dtoa_r+0x69e>
 8007312:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8007314:	2a00      	cmp	r2, #0
 8007316:	f000 80ea 	beq.w	80074ee <_dtoa_r+0x8d6>
 800731a:	9a07      	ldr	r2, [sp, #28]
 800731c:	2a01      	cmp	r2, #1
 800731e:	f300 80cd 	bgt.w	80074bc <_dtoa_r+0x8a4>
 8007322:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8007324:	2a00      	cmp	r2, #0
 8007326:	f000 80c1 	beq.w	80074ac <_dtoa_r+0x894>
 800732a:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 800732e:	9c08      	ldr	r4, [sp, #32]
 8007330:	9e00      	ldr	r6, [sp, #0]
 8007332:	9a00      	ldr	r2, [sp, #0]
 8007334:	441a      	add	r2, r3
 8007336:	9200      	str	r2, [sp, #0]
 8007338:	9a06      	ldr	r2, [sp, #24]
 800733a:	2101      	movs	r1, #1
 800733c:	441a      	add	r2, r3
 800733e:	4648      	mov	r0, r9
 8007340:	9206      	str	r2, [sp, #24]
 8007342:	f000 fc2d 	bl	8007ba0 <__i2b>
 8007346:	4605      	mov	r5, r0
 8007348:	b166      	cbz	r6, 8007364 <_dtoa_r+0x74c>
 800734a:	9b06      	ldr	r3, [sp, #24]
 800734c:	2b00      	cmp	r3, #0
 800734e:	dd09      	ble.n	8007364 <_dtoa_r+0x74c>
 8007350:	42b3      	cmp	r3, r6
 8007352:	9a00      	ldr	r2, [sp, #0]
 8007354:	bfa8      	it	ge
 8007356:	4633      	movge	r3, r6
 8007358:	1ad2      	subs	r2, r2, r3
 800735a:	9200      	str	r2, [sp, #0]
 800735c:	9a06      	ldr	r2, [sp, #24]
 800735e:	1af6      	subs	r6, r6, r3
 8007360:	1ad3      	subs	r3, r2, r3
 8007362:	9306      	str	r3, [sp, #24]
 8007364:	9b08      	ldr	r3, [sp, #32]
 8007366:	b30b      	cbz	r3, 80073ac <_dtoa_r+0x794>
 8007368:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800736a:	2b00      	cmp	r3, #0
 800736c:	f000 80c6 	beq.w	80074fc <_dtoa_r+0x8e4>
 8007370:	2c00      	cmp	r4, #0
 8007372:	f000 80c0 	beq.w	80074f6 <_dtoa_r+0x8de>
 8007376:	4629      	mov	r1, r5
 8007378:	4622      	mov	r2, r4
 800737a:	4648      	mov	r0, r9
 800737c:	f000 fcc8 	bl	8007d10 <__pow5mult>
 8007380:	9a02      	ldr	r2, [sp, #8]
 8007382:	4601      	mov	r1, r0
 8007384:	4605      	mov	r5, r0
 8007386:	4648      	mov	r0, r9
 8007388:	f000 fc20 	bl	8007bcc <__multiply>
 800738c:	9902      	ldr	r1, [sp, #8]
 800738e:	4680      	mov	r8, r0
 8007390:	4648      	mov	r0, r9
 8007392:	f000 fb51 	bl	8007a38 <_Bfree>
 8007396:	9b08      	ldr	r3, [sp, #32]
 8007398:	1b1b      	subs	r3, r3, r4
 800739a:	9308      	str	r3, [sp, #32]
 800739c:	f000 80b1 	beq.w	8007502 <_dtoa_r+0x8ea>
 80073a0:	9a08      	ldr	r2, [sp, #32]
 80073a2:	4641      	mov	r1, r8
 80073a4:	4648      	mov	r0, r9
 80073a6:	f000 fcb3 	bl	8007d10 <__pow5mult>
 80073aa:	9002      	str	r0, [sp, #8]
 80073ac:	2101      	movs	r1, #1
 80073ae:	4648      	mov	r0, r9
 80073b0:	f000 fbf6 	bl	8007ba0 <__i2b>
 80073b4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80073b6:	4604      	mov	r4, r0
 80073b8:	2b00      	cmp	r3, #0
 80073ba:	f000 81d8 	beq.w	800776e <_dtoa_r+0xb56>
 80073be:	461a      	mov	r2, r3
 80073c0:	4601      	mov	r1, r0
 80073c2:	4648      	mov	r0, r9
 80073c4:	f000 fca4 	bl	8007d10 <__pow5mult>
 80073c8:	9b07      	ldr	r3, [sp, #28]
 80073ca:	2b01      	cmp	r3, #1
 80073cc:	4604      	mov	r4, r0
 80073ce:	f300 809f 	bgt.w	8007510 <_dtoa_r+0x8f8>
 80073d2:	9b04      	ldr	r3, [sp, #16]
 80073d4:	2b00      	cmp	r3, #0
 80073d6:	f040 8097 	bne.w	8007508 <_dtoa_r+0x8f0>
 80073da:	9b05      	ldr	r3, [sp, #20]
 80073dc:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80073e0:	2b00      	cmp	r3, #0
 80073e2:	f040 8093 	bne.w	800750c <_dtoa_r+0x8f4>
 80073e6:	9b05      	ldr	r3, [sp, #20]
 80073e8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80073ec:	0d1b      	lsrs	r3, r3, #20
 80073ee:	051b      	lsls	r3, r3, #20
 80073f0:	b133      	cbz	r3, 8007400 <_dtoa_r+0x7e8>
 80073f2:	9b00      	ldr	r3, [sp, #0]
 80073f4:	3301      	adds	r3, #1
 80073f6:	9300      	str	r3, [sp, #0]
 80073f8:	9b06      	ldr	r3, [sp, #24]
 80073fa:	3301      	adds	r3, #1
 80073fc:	9306      	str	r3, [sp, #24]
 80073fe:	2301      	movs	r3, #1
 8007400:	9308      	str	r3, [sp, #32]
 8007402:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007404:	2b00      	cmp	r3, #0
 8007406:	f000 81b8 	beq.w	800777a <_dtoa_r+0xb62>
 800740a:	6923      	ldr	r3, [r4, #16]
 800740c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8007410:	6918      	ldr	r0, [r3, #16]
 8007412:	f000 fb79 	bl	8007b08 <__hi0bits>
 8007416:	f1c0 0020 	rsb	r0, r0, #32
 800741a:	9b06      	ldr	r3, [sp, #24]
 800741c:	4418      	add	r0, r3
 800741e:	f010 001f 	ands.w	r0, r0, #31
 8007422:	f000 8082 	beq.w	800752a <_dtoa_r+0x912>
 8007426:	f1c0 0320 	rsb	r3, r0, #32
 800742a:	2b04      	cmp	r3, #4
 800742c:	dd73      	ble.n	8007516 <_dtoa_r+0x8fe>
 800742e:	9b00      	ldr	r3, [sp, #0]
 8007430:	f1c0 001c 	rsb	r0, r0, #28
 8007434:	4403      	add	r3, r0
 8007436:	9300      	str	r3, [sp, #0]
 8007438:	9b06      	ldr	r3, [sp, #24]
 800743a:	4403      	add	r3, r0
 800743c:	4406      	add	r6, r0
 800743e:	9306      	str	r3, [sp, #24]
 8007440:	9b00      	ldr	r3, [sp, #0]
 8007442:	2b00      	cmp	r3, #0
 8007444:	dd05      	ble.n	8007452 <_dtoa_r+0x83a>
 8007446:	9902      	ldr	r1, [sp, #8]
 8007448:	461a      	mov	r2, r3
 800744a:	4648      	mov	r0, r9
 800744c:	f000 fcba 	bl	8007dc4 <__lshift>
 8007450:	9002      	str	r0, [sp, #8]
 8007452:	9b06      	ldr	r3, [sp, #24]
 8007454:	2b00      	cmp	r3, #0
 8007456:	dd05      	ble.n	8007464 <_dtoa_r+0x84c>
 8007458:	4621      	mov	r1, r4
 800745a:	461a      	mov	r2, r3
 800745c:	4648      	mov	r0, r9
 800745e:	f000 fcb1 	bl	8007dc4 <__lshift>
 8007462:	4604      	mov	r4, r0
 8007464:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8007466:	2b00      	cmp	r3, #0
 8007468:	d061      	beq.n	800752e <_dtoa_r+0x916>
 800746a:	9802      	ldr	r0, [sp, #8]
 800746c:	4621      	mov	r1, r4
 800746e:	f000 fd15 	bl	8007e9c <__mcmp>
 8007472:	2800      	cmp	r0, #0
 8007474:	da5b      	bge.n	800752e <_dtoa_r+0x916>
 8007476:	2300      	movs	r3, #0
 8007478:	9902      	ldr	r1, [sp, #8]
 800747a:	220a      	movs	r2, #10
 800747c:	4648      	mov	r0, r9
 800747e:	f000 fafd 	bl	8007a7c <__multadd>
 8007482:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007484:	9002      	str	r0, [sp, #8]
 8007486:	f107 38ff 	add.w	r8, r7, #4294967295
 800748a:	2b00      	cmp	r3, #0
 800748c:	f000 8177 	beq.w	800777e <_dtoa_r+0xb66>
 8007490:	4629      	mov	r1, r5
 8007492:	2300      	movs	r3, #0
 8007494:	220a      	movs	r2, #10
 8007496:	4648      	mov	r0, r9
 8007498:	f000 faf0 	bl	8007a7c <__multadd>
 800749c:	f1bb 0f00 	cmp.w	fp, #0
 80074a0:	4605      	mov	r5, r0
 80074a2:	dc6f      	bgt.n	8007584 <_dtoa_r+0x96c>
 80074a4:	9b07      	ldr	r3, [sp, #28]
 80074a6:	2b02      	cmp	r3, #2
 80074a8:	dc49      	bgt.n	800753e <_dtoa_r+0x926>
 80074aa:	e06b      	b.n	8007584 <_dtoa_r+0x96c>
 80074ac:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80074ae:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 80074b2:	e73c      	b.n	800732e <_dtoa_r+0x716>
 80074b4:	3fe00000 	.word	0x3fe00000
 80074b8:	40240000 	.word	0x40240000
 80074bc:	9b03      	ldr	r3, [sp, #12]
 80074be:	1e5c      	subs	r4, r3, #1
 80074c0:	9b08      	ldr	r3, [sp, #32]
 80074c2:	42a3      	cmp	r3, r4
 80074c4:	db09      	blt.n	80074da <_dtoa_r+0x8c2>
 80074c6:	1b1c      	subs	r4, r3, r4
 80074c8:	9b03      	ldr	r3, [sp, #12]
 80074ca:	2b00      	cmp	r3, #0
 80074cc:	f6bf af30 	bge.w	8007330 <_dtoa_r+0x718>
 80074d0:	9b00      	ldr	r3, [sp, #0]
 80074d2:	9a03      	ldr	r2, [sp, #12]
 80074d4:	1a9e      	subs	r6, r3, r2
 80074d6:	2300      	movs	r3, #0
 80074d8:	e72b      	b.n	8007332 <_dtoa_r+0x71a>
 80074da:	9b08      	ldr	r3, [sp, #32]
 80074dc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80074de:	9408      	str	r4, [sp, #32]
 80074e0:	1ae3      	subs	r3, r4, r3
 80074e2:	441a      	add	r2, r3
 80074e4:	9e00      	ldr	r6, [sp, #0]
 80074e6:	9b03      	ldr	r3, [sp, #12]
 80074e8:	920d      	str	r2, [sp, #52]	@ 0x34
 80074ea:	2400      	movs	r4, #0
 80074ec:	e721      	b.n	8007332 <_dtoa_r+0x71a>
 80074ee:	9c08      	ldr	r4, [sp, #32]
 80074f0:	9e00      	ldr	r6, [sp, #0]
 80074f2:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80074f4:	e728      	b.n	8007348 <_dtoa_r+0x730>
 80074f6:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80074fa:	e751      	b.n	80073a0 <_dtoa_r+0x788>
 80074fc:	9a08      	ldr	r2, [sp, #32]
 80074fe:	9902      	ldr	r1, [sp, #8]
 8007500:	e750      	b.n	80073a4 <_dtoa_r+0x78c>
 8007502:	f8cd 8008 	str.w	r8, [sp, #8]
 8007506:	e751      	b.n	80073ac <_dtoa_r+0x794>
 8007508:	2300      	movs	r3, #0
 800750a:	e779      	b.n	8007400 <_dtoa_r+0x7e8>
 800750c:	9b04      	ldr	r3, [sp, #16]
 800750e:	e777      	b.n	8007400 <_dtoa_r+0x7e8>
 8007510:	2300      	movs	r3, #0
 8007512:	9308      	str	r3, [sp, #32]
 8007514:	e779      	b.n	800740a <_dtoa_r+0x7f2>
 8007516:	d093      	beq.n	8007440 <_dtoa_r+0x828>
 8007518:	9a00      	ldr	r2, [sp, #0]
 800751a:	331c      	adds	r3, #28
 800751c:	441a      	add	r2, r3
 800751e:	9200      	str	r2, [sp, #0]
 8007520:	9a06      	ldr	r2, [sp, #24]
 8007522:	441a      	add	r2, r3
 8007524:	441e      	add	r6, r3
 8007526:	9206      	str	r2, [sp, #24]
 8007528:	e78a      	b.n	8007440 <_dtoa_r+0x828>
 800752a:	4603      	mov	r3, r0
 800752c:	e7f4      	b.n	8007518 <_dtoa_r+0x900>
 800752e:	9b03      	ldr	r3, [sp, #12]
 8007530:	2b00      	cmp	r3, #0
 8007532:	46b8      	mov	r8, r7
 8007534:	dc20      	bgt.n	8007578 <_dtoa_r+0x960>
 8007536:	469b      	mov	fp, r3
 8007538:	9b07      	ldr	r3, [sp, #28]
 800753a:	2b02      	cmp	r3, #2
 800753c:	dd1e      	ble.n	800757c <_dtoa_r+0x964>
 800753e:	f1bb 0f00 	cmp.w	fp, #0
 8007542:	f47f adb1 	bne.w	80070a8 <_dtoa_r+0x490>
 8007546:	4621      	mov	r1, r4
 8007548:	465b      	mov	r3, fp
 800754a:	2205      	movs	r2, #5
 800754c:	4648      	mov	r0, r9
 800754e:	f000 fa95 	bl	8007a7c <__multadd>
 8007552:	4601      	mov	r1, r0
 8007554:	4604      	mov	r4, r0
 8007556:	9802      	ldr	r0, [sp, #8]
 8007558:	f000 fca0 	bl	8007e9c <__mcmp>
 800755c:	2800      	cmp	r0, #0
 800755e:	f77f ada3 	ble.w	80070a8 <_dtoa_r+0x490>
 8007562:	4656      	mov	r6, sl
 8007564:	2331      	movs	r3, #49	@ 0x31
 8007566:	f806 3b01 	strb.w	r3, [r6], #1
 800756a:	f108 0801 	add.w	r8, r8, #1
 800756e:	e59f      	b.n	80070b0 <_dtoa_r+0x498>
 8007570:	9c03      	ldr	r4, [sp, #12]
 8007572:	46b8      	mov	r8, r7
 8007574:	4625      	mov	r5, r4
 8007576:	e7f4      	b.n	8007562 <_dtoa_r+0x94a>
 8007578:	f8dd b00c 	ldr.w	fp, [sp, #12]
 800757c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800757e:	2b00      	cmp	r3, #0
 8007580:	f000 8101 	beq.w	8007786 <_dtoa_r+0xb6e>
 8007584:	2e00      	cmp	r6, #0
 8007586:	dd05      	ble.n	8007594 <_dtoa_r+0x97c>
 8007588:	4629      	mov	r1, r5
 800758a:	4632      	mov	r2, r6
 800758c:	4648      	mov	r0, r9
 800758e:	f000 fc19 	bl	8007dc4 <__lshift>
 8007592:	4605      	mov	r5, r0
 8007594:	9b08      	ldr	r3, [sp, #32]
 8007596:	2b00      	cmp	r3, #0
 8007598:	d05c      	beq.n	8007654 <_dtoa_r+0xa3c>
 800759a:	6869      	ldr	r1, [r5, #4]
 800759c:	4648      	mov	r0, r9
 800759e:	f000 fa0b 	bl	80079b8 <_Balloc>
 80075a2:	4606      	mov	r6, r0
 80075a4:	b928      	cbnz	r0, 80075b2 <_dtoa_r+0x99a>
 80075a6:	4b82      	ldr	r3, [pc, #520]	@ (80077b0 <_dtoa_r+0xb98>)
 80075a8:	4602      	mov	r2, r0
 80075aa:	f240 21ef 	movw	r1, #751	@ 0x2ef
 80075ae:	f7ff bb4a 	b.w	8006c46 <_dtoa_r+0x2e>
 80075b2:	692a      	ldr	r2, [r5, #16]
 80075b4:	3202      	adds	r2, #2
 80075b6:	0092      	lsls	r2, r2, #2
 80075b8:	f105 010c 	add.w	r1, r5, #12
 80075bc:	300c      	adds	r0, #12
 80075be:	f000 fe31 	bl	8008224 <memcpy>
 80075c2:	2201      	movs	r2, #1
 80075c4:	4631      	mov	r1, r6
 80075c6:	4648      	mov	r0, r9
 80075c8:	f000 fbfc 	bl	8007dc4 <__lshift>
 80075cc:	f10a 0301 	add.w	r3, sl, #1
 80075d0:	9300      	str	r3, [sp, #0]
 80075d2:	eb0a 030b 	add.w	r3, sl, fp
 80075d6:	9308      	str	r3, [sp, #32]
 80075d8:	9b04      	ldr	r3, [sp, #16]
 80075da:	f003 0301 	and.w	r3, r3, #1
 80075de:	462f      	mov	r7, r5
 80075e0:	9306      	str	r3, [sp, #24]
 80075e2:	4605      	mov	r5, r0
 80075e4:	9b00      	ldr	r3, [sp, #0]
 80075e6:	9802      	ldr	r0, [sp, #8]
 80075e8:	4621      	mov	r1, r4
 80075ea:	f103 3bff 	add.w	fp, r3, #4294967295
 80075ee:	f7ff fa88 	bl	8006b02 <quorem>
 80075f2:	4603      	mov	r3, r0
 80075f4:	3330      	adds	r3, #48	@ 0x30
 80075f6:	9003      	str	r0, [sp, #12]
 80075f8:	4639      	mov	r1, r7
 80075fa:	9802      	ldr	r0, [sp, #8]
 80075fc:	9309      	str	r3, [sp, #36]	@ 0x24
 80075fe:	f000 fc4d 	bl	8007e9c <__mcmp>
 8007602:	462a      	mov	r2, r5
 8007604:	9004      	str	r0, [sp, #16]
 8007606:	4621      	mov	r1, r4
 8007608:	4648      	mov	r0, r9
 800760a:	f000 fc63 	bl	8007ed4 <__mdiff>
 800760e:	68c2      	ldr	r2, [r0, #12]
 8007610:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007612:	4606      	mov	r6, r0
 8007614:	bb02      	cbnz	r2, 8007658 <_dtoa_r+0xa40>
 8007616:	4601      	mov	r1, r0
 8007618:	9802      	ldr	r0, [sp, #8]
 800761a:	f000 fc3f 	bl	8007e9c <__mcmp>
 800761e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007620:	4602      	mov	r2, r0
 8007622:	4631      	mov	r1, r6
 8007624:	4648      	mov	r0, r9
 8007626:	920c      	str	r2, [sp, #48]	@ 0x30
 8007628:	9309      	str	r3, [sp, #36]	@ 0x24
 800762a:	f000 fa05 	bl	8007a38 <_Bfree>
 800762e:	9b07      	ldr	r3, [sp, #28]
 8007630:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8007632:	9e00      	ldr	r6, [sp, #0]
 8007634:	ea42 0103 	orr.w	r1, r2, r3
 8007638:	9b06      	ldr	r3, [sp, #24]
 800763a:	4319      	orrs	r1, r3
 800763c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800763e:	d10d      	bne.n	800765c <_dtoa_r+0xa44>
 8007640:	2b39      	cmp	r3, #57	@ 0x39
 8007642:	d027      	beq.n	8007694 <_dtoa_r+0xa7c>
 8007644:	9a04      	ldr	r2, [sp, #16]
 8007646:	2a00      	cmp	r2, #0
 8007648:	dd01      	ble.n	800764e <_dtoa_r+0xa36>
 800764a:	9b03      	ldr	r3, [sp, #12]
 800764c:	3331      	adds	r3, #49	@ 0x31
 800764e:	f88b 3000 	strb.w	r3, [fp]
 8007652:	e52e      	b.n	80070b2 <_dtoa_r+0x49a>
 8007654:	4628      	mov	r0, r5
 8007656:	e7b9      	b.n	80075cc <_dtoa_r+0x9b4>
 8007658:	2201      	movs	r2, #1
 800765a:	e7e2      	b.n	8007622 <_dtoa_r+0xa0a>
 800765c:	9904      	ldr	r1, [sp, #16]
 800765e:	2900      	cmp	r1, #0
 8007660:	db04      	blt.n	800766c <_dtoa_r+0xa54>
 8007662:	9807      	ldr	r0, [sp, #28]
 8007664:	4301      	orrs	r1, r0
 8007666:	9806      	ldr	r0, [sp, #24]
 8007668:	4301      	orrs	r1, r0
 800766a:	d120      	bne.n	80076ae <_dtoa_r+0xa96>
 800766c:	2a00      	cmp	r2, #0
 800766e:	ddee      	ble.n	800764e <_dtoa_r+0xa36>
 8007670:	9902      	ldr	r1, [sp, #8]
 8007672:	9300      	str	r3, [sp, #0]
 8007674:	2201      	movs	r2, #1
 8007676:	4648      	mov	r0, r9
 8007678:	f000 fba4 	bl	8007dc4 <__lshift>
 800767c:	4621      	mov	r1, r4
 800767e:	9002      	str	r0, [sp, #8]
 8007680:	f000 fc0c 	bl	8007e9c <__mcmp>
 8007684:	2800      	cmp	r0, #0
 8007686:	9b00      	ldr	r3, [sp, #0]
 8007688:	dc02      	bgt.n	8007690 <_dtoa_r+0xa78>
 800768a:	d1e0      	bne.n	800764e <_dtoa_r+0xa36>
 800768c:	07da      	lsls	r2, r3, #31
 800768e:	d5de      	bpl.n	800764e <_dtoa_r+0xa36>
 8007690:	2b39      	cmp	r3, #57	@ 0x39
 8007692:	d1da      	bne.n	800764a <_dtoa_r+0xa32>
 8007694:	2339      	movs	r3, #57	@ 0x39
 8007696:	f88b 3000 	strb.w	r3, [fp]
 800769a:	4633      	mov	r3, r6
 800769c:	461e      	mov	r6, r3
 800769e:	3b01      	subs	r3, #1
 80076a0:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 80076a4:	2a39      	cmp	r2, #57	@ 0x39
 80076a6:	d04e      	beq.n	8007746 <_dtoa_r+0xb2e>
 80076a8:	3201      	adds	r2, #1
 80076aa:	701a      	strb	r2, [r3, #0]
 80076ac:	e501      	b.n	80070b2 <_dtoa_r+0x49a>
 80076ae:	2a00      	cmp	r2, #0
 80076b0:	dd03      	ble.n	80076ba <_dtoa_r+0xaa2>
 80076b2:	2b39      	cmp	r3, #57	@ 0x39
 80076b4:	d0ee      	beq.n	8007694 <_dtoa_r+0xa7c>
 80076b6:	3301      	adds	r3, #1
 80076b8:	e7c9      	b.n	800764e <_dtoa_r+0xa36>
 80076ba:	9a00      	ldr	r2, [sp, #0]
 80076bc:	9908      	ldr	r1, [sp, #32]
 80076be:	f802 3c01 	strb.w	r3, [r2, #-1]
 80076c2:	428a      	cmp	r2, r1
 80076c4:	d028      	beq.n	8007718 <_dtoa_r+0xb00>
 80076c6:	9902      	ldr	r1, [sp, #8]
 80076c8:	2300      	movs	r3, #0
 80076ca:	220a      	movs	r2, #10
 80076cc:	4648      	mov	r0, r9
 80076ce:	f000 f9d5 	bl	8007a7c <__multadd>
 80076d2:	42af      	cmp	r7, r5
 80076d4:	9002      	str	r0, [sp, #8]
 80076d6:	f04f 0300 	mov.w	r3, #0
 80076da:	f04f 020a 	mov.w	r2, #10
 80076de:	4639      	mov	r1, r7
 80076e0:	4648      	mov	r0, r9
 80076e2:	d107      	bne.n	80076f4 <_dtoa_r+0xadc>
 80076e4:	f000 f9ca 	bl	8007a7c <__multadd>
 80076e8:	4607      	mov	r7, r0
 80076ea:	4605      	mov	r5, r0
 80076ec:	9b00      	ldr	r3, [sp, #0]
 80076ee:	3301      	adds	r3, #1
 80076f0:	9300      	str	r3, [sp, #0]
 80076f2:	e777      	b.n	80075e4 <_dtoa_r+0x9cc>
 80076f4:	f000 f9c2 	bl	8007a7c <__multadd>
 80076f8:	4629      	mov	r1, r5
 80076fa:	4607      	mov	r7, r0
 80076fc:	2300      	movs	r3, #0
 80076fe:	220a      	movs	r2, #10
 8007700:	4648      	mov	r0, r9
 8007702:	f000 f9bb 	bl	8007a7c <__multadd>
 8007706:	4605      	mov	r5, r0
 8007708:	e7f0      	b.n	80076ec <_dtoa_r+0xad4>
 800770a:	f1bb 0f00 	cmp.w	fp, #0
 800770e:	bfcc      	ite	gt
 8007710:	465e      	movgt	r6, fp
 8007712:	2601      	movle	r6, #1
 8007714:	4456      	add	r6, sl
 8007716:	2700      	movs	r7, #0
 8007718:	9902      	ldr	r1, [sp, #8]
 800771a:	9300      	str	r3, [sp, #0]
 800771c:	2201      	movs	r2, #1
 800771e:	4648      	mov	r0, r9
 8007720:	f000 fb50 	bl	8007dc4 <__lshift>
 8007724:	4621      	mov	r1, r4
 8007726:	9002      	str	r0, [sp, #8]
 8007728:	f000 fbb8 	bl	8007e9c <__mcmp>
 800772c:	2800      	cmp	r0, #0
 800772e:	dcb4      	bgt.n	800769a <_dtoa_r+0xa82>
 8007730:	d102      	bne.n	8007738 <_dtoa_r+0xb20>
 8007732:	9b00      	ldr	r3, [sp, #0]
 8007734:	07db      	lsls	r3, r3, #31
 8007736:	d4b0      	bmi.n	800769a <_dtoa_r+0xa82>
 8007738:	4633      	mov	r3, r6
 800773a:	461e      	mov	r6, r3
 800773c:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8007740:	2a30      	cmp	r2, #48	@ 0x30
 8007742:	d0fa      	beq.n	800773a <_dtoa_r+0xb22>
 8007744:	e4b5      	b.n	80070b2 <_dtoa_r+0x49a>
 8007746:	459a      	cmp	sl, r3
 8007748:	d1a8      	bne.n	800769c <_dtoa_r+0xa84>
 800774a:	2331      	movs	r3, #49	@ 0x31
 800774c:	f108 0801 	add.w	r8, r8, #1
 8007750:	f88a 3000 	strb.w	r3, [sl]
 8007754:	e4ad      	b.n	80070b2 <_dtoa_r+0x49a>
 8007756:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8007758:	f8df a058 	ldr.w	sl, [pc, #88]	@ 80077b4 <_dtoa_r+0xb9c>
 800775c:	b11b      	cbz	r3, 8007766 <_dtoa_r+0xb4e>
 800775e:	f10a 0308 	add.w	r3, sl, #8
 8007762:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8007764:	6013      	str	r3, [r2, #0]
 8007766:	4650      	mov	r0, sl
 8007768:	b017      	add	sp, #92	@ 0x5c
 800776a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800776e:	9b07      	ldr	r3, [sp, #28]
 8007770:	2b01      	cmp	r3, #1
 8007772:	f77f ae2e 	ble.w	80073d2 <_dtoa_r+0x7ba>
 8007776:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007778:	9308      	str	r3, [sp, #32]
 800777a:	2001      	movs	r0, #1
 800777c:	e64d      	b.n	800741a <_dtoa_r+0x802>
 800777e:	f1bb 0f00 	cmp.w	fp, #0
 8007782:	f77f aed9 	ble.w	8007538 <_dtoa_r+0x920>
 8007786:	4656      	mov	r6, sl
 8007788:	9802      	ldr	r0, [sp, #8]
 800778a:	4621      	mov	r1, r4
 800778c:	f7ff f9b9 	bl	8006b02 <quorem>
 8007790:	f100 0330 	add.w	r3, r0, #48	@ 0x30
 8007794:	f806 3b01 	strb.w	r3, [r6], #1
 8007798:	eba6 020a 	sub.w	r2, r6, sl
 800779c:	4593      	cmp	fp, r2
 800779e:	ddb4      	ble.n	800770a <_dtoa_r+0xaf2>
 80077a0:	9902      	ldr	r1, [sp, #8]
 80077a2:	2300      	movs	r3, #0
 80077a4:	220a      	movs	r2, #10
 80077a6:	4648      	mov	r0, r9
 80077a8:	f000 f968 	bl	8007a7c <__multadd>
 80077ac:	9002      	str	r0, [sp, #8]
 80077ae:	e7eb      	b.n	8007788 <_dtoa_r+0xb70>
 80077b0:	08008ba0 	.word	0x08008ba0
 80077b4:	08008b24 	.word	0x08008b24

080077b8 <_free_r>:
 80077b8:	b538      	push	{r3, r4, r5, lr}
 80077ba:	4605      	mov	r5, r0
 80077bc:	2900      	cmp	r1, #0
 80077be:	d041      	beq.n	8007844 <_free_r+0x8c>
 80077c0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80077c4:	1f0c      	subs	r4, r1, #4
 80077c6:	2b00      	cmp	r3, #0
 80077c8:	bfb8      	it	lt
 80077ca:	18e4      	addlt	r4, r4, r3
 80077cc:	f000 f8e8 	bl	80079a0 <__malloc_lock>
 80077d0:	4a1d      	ldr	r2, [pc, #116]	@ (8007848 <_free_r+0x90>)
 80077d2:	6813      	ldr	r3, [r2, #0]
 80077d4:	b933      	cbnz	r3, 80077e4 <_free_r+0x2c>
 80077d6:	6063      	str	r3, [r4, #4]
 80077d8:	6014      	str	r4, [r2, #0]
 80077da:	4628      	mov	r0, r5
 80077dc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80077e0:	f000 b8e4 	b.w	80079ac <__malloc_unlock>
 80077e4:	42a3      	cmp	r3, r4
 80077e6:	d908      	bls.n	80077fa <_free_r+0x42>
 80077e8:	6820      	ldr	r0, [r4, #0]
 80077ea:	1821      	adds	r1, r4, r0
 80077ec:	428b      	cmp	r3, r1
 80077ee:	bf01      	itttt	eq
 80077f0:	6819      	ldreq	r1, [r3, #0]
 80077f2:	685b      	ldreq	r3, [r3, #4]
 80077f4:	1809      	addeq	r1, r1, r0
 80077f6:	6021      	streq	r1, [r4, #0]
 80077f8:	e7ed      	b.n	80077d6 <_free_r+0x1e>
 80077fa:	461a      	mov	r2, r3
 80077fc:	685b      	ldr	r3, [r3, #4]
 80077fe:	b10b      	cbz	r3, 8007804 <_free_r+0x4c>
 8007800:	42a3      	cmp	r3, r4
 8007802:	d9fa      	bls.n	80077fa <_free_r+0x42>
 8007804:	6811      	ldr	r1, [r2, #0]
 8007806:	1850      	adds	r0, r2, r1
 8007808:	42a0      	cmp	r0, r4
 800780a:	d10b      	bne.n	8007824 <_free_r+0x6c>
 800780c:	6820      	ldr	r0, [r4, #0]
 800780e:	4401      	add	r1, r0
 8007810:	1850      	adds	r0, r2, r1
 8007812:	4283      	cmp	r3, r0
 8007814:	6011      	str	r1, [r2, #0]
 8007816:	d1e0      	bne.n	80077da <_free_r+0x22>
 8007818:	6818      	ldr	r0, [r3, #0]
 800781a:	685b      	ldr	r3, [r3, #4]
 800781c:	6053      	str	r3, [r2, #4]
 800781e:	4408      	add	r0, r1
 8007820:	6010      	str	r0, [r2, #0]
 8007822:	e7da      	b.n	80077da <_free_r+0x22>
 8007824:	d902      	bls.n	800782c <_free_r+0x74>
 8007826:	230c      	movs	r3, #12
 8007828:	602b      	str	r3, [r5, #0]
 800782a:	e7d6      	b.n	80077da <_free_r+0x22>
 800782c:	6820      	ldr	r0, [r4, #0]
 800782e:	1821      	adds	r1, r4, r0
 8007830:	428b      	cmp	r3, r1
 8007832:	bf04      	itt	eq
 8007834:	6819      	ldreq	r1, [r3, #0]
 8007836:	685b      	ldreq	r3, [r3, #4]
 8007838:	6063      	str	r3, [r4, #4]
 800783a:	bf04      	itt	eq
 800783c:	1809      	addeq	r1, r1, r0
 800783e:	6021      	streq	r1, [r4, #0]
 8007840:	6054      	str	r4, [r2, #4]
 8007842:	e7ca      	b.n	80077da <_free_r+0x22>
 8007844:	bd38      	pop	{r3, r4, r5, pc}
 8007846:	bf00      	nop
 8007848:	20000514 	.word	0x20000514

0800784c <malloc>:
 800784c:	4b02      	ldr	r3, [pc, #8]	@ (8007858 <malloc+0xc>)
 800784e:	4601      	mov	r1, r0
 8007850:	6818      	ldr	r0, [r3, #0]
 8007852:	f000 b825 	b.w	80078a0 <_malloc_r>
 8007856:	bf00      	nop
 8007858:	20000020 	.word	0x20000020

0800785c <sbrk_aligned>:
 800785c:	b570      	push	{r4, r5, r6, lr}
 800785e:	4e0f      	ldr	r6, [pc, #60]	@ (800789c <sbrk_aligned+0x40>)
 8007860:	460c      	mov	r4, r1
 8007862:	6831      	ldr	r1, [r6, #0]
 8007864:	4605      	mov	r5, r0
 8007866:	b911      	cbnz	r1, 800786e <sbrk_aligned+0x12>
 8007868:	f000 fccc 	bl	8008204 <_sbrk_r>
 800786c:	6030      	str	r0, [r6, #0]
 800786e:	4621      	mov	r1, r4
 8007870:	4628      	mov	r0, r5
 8007872:	f000 fcc7 	bl	8008204 <_sbrk_r>
 8007876:	1c43      	adds	r3, r0, #1
 8007878:	d103      	bne.n	8007882 <sbrk_aligned+0x26>
 800787a:	f04f 34ff 	mov.w	r4, #4294967295
 800787e:	4620      	mov	r0, r4
 8007880:	bd70      	pop	{r4, r5, r6, pc}
 8007882:	1cc4      	adds	r4, r0, #3
 8007884:	f024 0403 	bic.w	r4, r4, #3
 8007888:	42a0      	cmp	r0, r4
 800788a:	d0f8      	beq.n	800787e <sbrk_aligned+0x22>
 800788c:	1a21      	subs	r1, r4, r0
 800788e:	4628      	mov	r0, r5
 8007890:	f000 fcb8 	bl	8008204 <_sbrk_r>
 8007894:	3001      	adds	r0, #1
 8007896:	d1f2      	bne.n	800787e <sbrk_aligned+0x22>
 8007898:	e7ef      	b.n	800787a <sbrk_aligned+0x1e>
 800789a:	bf00      	nop
 800789c:	20000510 	.word	0x20000510

080078a0 <_malloc_r>:
 80078a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80078a4:	1ccd      	adds	r5, r1, #3
 80078a6:	f025 0503 	bic.w	r5, r5, #3
 80078aa:	3508      	adds	r5, #8
 80078ac:	2d0c      	cmp	r5, #12
 80078ae:	bf38      	it	cc
 80078b0:	250c      	movcc	r5, #12
 80078b2:	2d00      	cmp	r5, #0
 80078b4:	4606      	mov	r6, r0
 80078b6:	db01      	blt.n	80078bc <_malloc_r+0x1c>
 80078b8:	42a9      	cmp	r1, r5
 80078ba:	d904      	bls.n	80078c6 <_malloc_r+0x26>
 80078bc:	230c      	movs	r3, #12
 80078be:	6033      	str	r3, [r6, #0]
 80078c0:	2000      	movs	r0, #0
 80078c2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80078c6:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 800799c <_malloc_r+0xfc>
 80078ca:	f000 f869 	bl	80079a0 <__malloc_lock>
 80078ce:	f8d8 3000 	ldr.w	r3, [r8]
 80078d2:	461c      	mov	r4, r3
 80078d4:	bb44      	cbnz	r4, 8007928 <_malloc_r+0x88>
 80078d6:	4629      	mov	r1, r5
 80078d8:	4630      	mov	r0, r6
 80078da:	f7ff ffbf 	bl	800785c <sbrk_aligned>
 80078de:	1c43      	adds	r3, r0, #1
 80078e0:	4604      	mov	r4, r0
 80078e2:	d158      	bne.n	8007996 <_malloc_r+0xf6>
 80078e4:	f8d8 4000 	ldr.w	r4, [r8]
 80078e8:	4627      	mov	r7, r4
 80078ea:	2f00      	cmp	r7, #0
 80078ec:	d143      	bne.n	8007976 <_malloc_r+0xd6>
 80078ee:	2c00      	cmp	r4, #0
 80078f0:	d04b      	beq.n	800798a <_malloc_r+0xea>
 80078f2:	6823      	ldr	r3, [r4, #0]
 80078f4:	4639      	mov	r1, r7
 80078f6:	4630      	mov	r0, r6
 80078f8:	eb04 0903 	add.w	r9, r4, r3
 80078fc:	f000 fc82 	bl	8008204 <_sbrk_r>
 8007900:	4581      	cmp	r9, r0
 8007902:	d142      	bne.n	800798a <_malloc_r+0xea>
 8007904:	6821      	ldr	r1, [r4, #0]
 8007906:	1a6d      	subs	r5, r5, r1
 8007908:	4629      	mov	r1, r5
 800790a:	4630      	mov	r0, r6
 800790c:	f7ff ffa6 	bl	800785c <sbrk_aligned>
 8007910:	3001      	adds	r0, #1
 8007912:	d03a      	beq.n	800798a <_malloc_r+0xea>
 8007914:	6823      	ldr	r3, [r4, #0]
 8007916:	442b      	add	r3, r5
 8007918:	6023      	str	r3, [r4, #0]
 800791a:	f8d8 3000 	ldr.w	r3, [r8]
 800791e:	685a      	ldr	r2, [r3, #4]
 8007920:	bb62      	cbnz	r2, 800797c <_malloc_r+0xdc>
 8007922:	f8c8 7000 	str.w	r7, [r8]
 8007926:	e00f      	b.n	8007948 <_malloc_r+0xa8>
 8007928:	6822      	ldr	r2, [r4, #0]
 800792a:	1b52      	subs	r2, r2, r5
 800792c:	d420      	bmi.n	8007970 <_malloc_r+0xd0>
 800792e:	2a0b      	cmp	r2, #11
 8007930:	d917      	bls.n	8007962 <_malloc_r+0xc2>
 8007932:	1961      	adds	r1, r4, r5
 8007934:	42a3      	cmp	r3, r4
 8007936:	6025      	str	r5, [r4, #0]
 8007938:	bf18      	it	ne
 800793a:	6059      	strne	r1, [r3, #4]
 800793c:	6863      	ldr	r3, [r4, #4]
 800793e:	bf08      	it	eq
 8007940:	f8c8 1000 	streq.w	r1, [r8]
 8007944:	5162      	str	r2, [r4, r5]
 8007946:	604b      	str	r3, [r1, #4]
 8007948:	4630      	mov	r0, r6
 800794a:	f000 f82f 	bl	80079ac <__malloc_unlock>
 800794e:	f104 000b 	add.w	r0, r4, #11
 8007952:	1d23      	adds	r3, r4, #4
 8007954:	f020 0007 	bic.w	r0, r0, #7
 8007958:	1ac2      	subs	r2, r0, r3
 800795a:	bf1c      	itt	ne
 800795c:	1a1b      	subne	r3, r3, r0
 800795e:	50a3      	strne	r3, [r4, r2]
 8007960:	e7af      	b.n	80078c2 <_malloc_r+0x22>
 8007962:	6862      	ldr	r2, [r4, #4]
 8007964:	42a3      	cmp	r3, r4
 8007966:	bf0c      	ite	eq
 8007968:	f8c8 2000 	streq.w	r2, [r8]
 800796c:	605a      	strne	r2, [r3, #4]
 800796e:	e7eb      	b.n	8007948 <_malloc_r+0xa8>
 8007970:	4623      	mov	r3, r4
 8007972:	6864      	ldr	r4, [r4, #4]
 8007974:	e7ae      	b.n	80078d4 <_malloc_r+0x34>
 8007976:	463c      	mov	r4, r7
 8007978:	687f      	ldr	r7, [r7, #4]
 800797a:	e7b6      	b.n	80078ea <_malloc_r+0x4a>
 800797c:	461a      	mov	r2, r3
 800797e:	685b      	ldr	r3, [r3, #4]
 8007980:	42a3      	cmp	r3, r4
 8007982:	d1fb      	bne.n	800797c <_malloc_r+0xdc>
 8007984:	2300      	movs	r3, #0
 8007986:	6053      	str	r3, [r2, #4]
 8007988:	e7de      	b.n	8007948 <_malloc_r+0xa8>
 800798a:	230c      	movs	r3, #12
 800798c:	6033      	str	r3, [r6, #0]
 800798e:	4630      	mov	r0, r6
 8007990:	f000 f80c 	bl	80079ac <__malloc_unlock>
 8007994:	e794      	b.n	80078c0 <_malloc_r+0x20>
 8007996:	6005      	str	r5, [r0, #0]
 8007998:	e7d6      	b.n	8007948 <_malloc_r+0xa8>
 800799a:	bf00      	nop
 800799c:	20000514 	.word	0x20000514

080079a0 <__malloc_lock>:
 80079a0:	4801      	ldr	r0, [pc, #4]	@ (80079a8 <__malloc_lock+0x8>)
 80079a2:	f7ff b8ac 	b.w	8006afe <__retarget_lock_acquire_recursive>
 80079a6:	bf00      	nop
 80079a8:	2000050c 	.word	0x2000050c

080079ac <__malloc_unlock>:
 80079ac:	4801      	ldr	r0, [pc, #4]	@ (80079b4 <__malloc_unlock+0x8>)
 80079ae:	f7ff b8a7 	b.w	8006b00 <__retarget_lock_release_recursive>
 80079b2:	bf00      	nop
 80079b4:	2000050c 	.word	0x2000050c

080079b8 <_Balloc>:
 80079b8:	b570      	push	{r4, r5, r6, lr}
 80079ba:	69c6      	ldr	r6, [r0, #28]
 80079bc:	4604      	mov	r4, r0
 80079be:	460d      	mov	r5, r1
 80079c0:	b976      	cbnz	r6, 80079e0 <_Balloc+0x28>
 80079c2:	2010      	movs	r0, #16
 80079c4:	f7ff ff42 	bl	800784c <malloc>
 80079c8:	4602      	mov	r2, r0
 80079ca:	61e0      	str	r0, [r4, #28]
 80079cc:	b920      	cbnz	r0, 80079d8 <_Balloc+0x20>
 80079ce:	4b18      	ldr	r3, [pc, #96]	@ (8007a30 <_Balloc+0x78>)
 80079d0:	4818      	ldr	r0, [pc, #96]	@ (8007a34 <_Balloc+0x7c>)
 80079d2:	216b      	movs	r1, #107	@ 0x6b
 80079d4:	f000 fc34 	bl	8008240 <__assert_func>
 80079d8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80079dc:	6006      	str	r6, [r0, #0]
 80079de:	60c6      	str	r6, [r0, #12]
 80079e0:	69e6      	ldr	r6, [r4, #28]
 80079e2:	68f3      	ldr	r3, [r6, #12]
 80079e4:	b183      	cbz	r3, 8007a08 <_Balloc+0x50>
 80079e6:	69e3      	ldr	r3, [r4, #28]
 80079e8:	68db      	ldr	r3, [r3, #12]
 80079ea:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80079ee:	b9b8      	cbnz	r0, 8007a20 <_Balloc+0x68>
 80079f0:	2101      	movs	r1, #1
 80079f2:	fa01 f605 	lsl.w	r6, r1, r5
 80079f6:	1d72      	adds	r2, r6, #5
 80079f8:	0092      	lsls	r2, r2, #2
 80079fa:	4620      	mov	r0, r4
 80079fc:	f000 fc3e 	bl	800827c <_calloc_r>
 8007a00:	b160      	cbz	r0, 8007a1c <_Balloc+0x64>
 8007a02:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8007a06:	e00e      	b.n	8007a26 <_Balloc+0x6e>
 8007a08:	2221      	movs	r2, #33	@ 0x21
 8007a0a:	2104      	movs	r1, #4
 8007a0c:	4620      	mov	r0, r4
 8007a0e:	f000 fc35 	bl	800827c <_calloc_r>
 8007a12:	69e3      	ldr	r3, [r4, #28]
 8007a14:	60f0      	str	r0, [r6, #12]
 8007a16:	68db      	ldr	r3, [r3, #12]
 8007a18:	2b00      	cmp	r3, #0
 8007a1a:	d1e4      	bne.n	80079e6 <_Balloc+0x2e>
 8007a1c:	2000      	movs	r0, #0
 8007a1e:	bd70      	pop	{r4, r5, r6, pc}
 8007a20:	6802      	ldr	r2, [r0, #0]
 8007a22:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8007a26:	2300      	movs	r3, #0
 8007a28:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8007a2c:	e7f7      	b.n	8007a1e <_Balloc+0x66>
 8007a2e:	bf00      	nop
 8007a30:	08008b31 	.word	0x08008b31
 8007a34:	08008bb1 	.word	0x08008bb1

08007a38 <_Bfree>:
 8007a38:	b570      	push	{r4, r5, r6, lr}
 8007a3a:	69c6      	ldr	r6, [r0, #28]
 8007a3c:	4605      	mov	r5, r0
 8007a3e:	460c      	mov	r4, r1
 8007a40:	b976      	cbnz	r6, 8007a60 <_Bfree+0x28>
 8007a42:	2010      	movs	r0, #16
 8007a44:	f7ff ff02 	bl	800784c <malloc>
 8007a48:	4602      	mov	r2, r0
 8007a4a:	61e8      	str	r0, [r5, #28]
 8007a4c:	b920      	cbnz	r0, 8007a58 <_Bfree+0x20>
 8007a4e:	4b09      	ldr	r3, [pc, #36]	@ (8007a74 <_Bfree+0x3c>)
 8007a50:	4809      	ldr	r0, [pc, #36]	@ (8007a78 <_Bfree+0x40>)
 8007a52:	218f      	movs	r1, #143	@ 0x8f
 8007a54:	f000 fbf4 	bl	8008240 <__assert_func>
 8007a58:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8007a5c:	6006      	str	r6, [r0, #0]
 8007a5e:	60c6      	str	r6, [r0, #12]
 8007a60:	b13c      	cbz	r4, 8007a72 <_Bfree+0x3a>
 8007a62:	69eb      	ldr	r3, [r5, #28]
 8007a64:	6862      	ldr	r2, [r4, #4]
 8007a66:	68db      	ldr	r3, [r3, #12]
 8007a68:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8007a6c:	6021      	str	r1, [r4, #0]
 8007a6e:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8007a72:	bd70      	pop	{r4, r5, r6, pc}
 8007a74:	08008b31 	.word	0x08008b31
 8007a78:	08008bb1 	.word	0x08008bb1

08007a7c <__multadd>:
 8007a7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007a80:	690d      	ldr	r5, [r1, #16]
 8007a82:	4607      	mov	r7, r0
 8007a84:	460c      	mov	r4, r1
 8007a86:	461e      	mov	r6, r3
 8007a88:	f101 0c14 	add.w	ip, r1, #20
 8007a8c:	2000      	movs	r0, #0
 8007a8e:	f8dc 3000 	ldr.w	r3, [ip]
 8007a92:	b299      	uxth	r1, r3
 8007a94:	fb02 6101 	mla	r1, r2, r1, r6
 8007a98:	0c1e      	lsrs	r6, r3, #16
 8007a9a:	0c0b      	lsrs	r3, r1, #16
 8007a9c:	fb02 3306 	mla	r3, r2, r6, r3
 8007aa0:	b289      	uxth	r1, r1
 8007aa2:	3001      	adds	r0, #1
 8007aa4:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8007aa8:	4285      	cmp	r5, r0
 8007aaa:	f84c 1b04 	str.w	r1, [ip], #4
 8007aae:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8007ab2:	dcec      	bgt.n	8007a8e <__multadd+0x12>
 8007ab4:	b30e      	cbz	r6, 8007afa <__multadd+0x7e>
 8007ab6:	68a3      	ldr	r3, [r4, #8]
 8007ab8:	42ab      	cmp	r3, r5
 8007aba:	dc19      	bgt.n	8007af0 <__multadd+0x74>
 8007abc:	6861      	ldr	r1, [r4, #4]
 8007abe:	4638      	mov	r0, r7
 8007ac0:	3101      	adds	r1, #1
 8007ac2:	f7ff ff79 	bl	80079b8 <_Balloc>
 8007ac6:	4680      	mov	r8, r0
 8007ac8:	b928      	cbnz	r0, 8007ad6 <__multadd+0x5a>
 8007aca:	4602      	mov	r2, r0
 8007acc:	4b0c      	ldr	r3, [pc, #48]	@ (8007b00 <__multadd+0x84>)
 8007ace:	480d      	ldr	r0, [pc, #52]	@ (8007b04 <__multadd+0x88>)
 8007ad0:	21ba      	movs	r1, #186	@ 0xba
 8007ad2:	f000 fbb5 	bl	8008240 <__assert_func>
 8007ad6:	6922      	ldr	r2, [r4, #16]
 8007ad8:	3202      	adds	r2, #2
 8007ada:	f104 010c 	add.w	r1, r4, #12
 8007ade:	0092      	lsls	r2, r2, #2
 8007ae0:	300c      	adds	r0, #12
 8007ae2:	f000 fb9f 	bl	8008224 <memcpy>
 8007ae6:	4621      	mov	r1, r4
 8007ae8:	4638      	mov	r0, r7
 8007aea:	f7ff ffa5 	bl	8007a38 <_Bfree>
 8007aee:	4644      	mov	r4, r8
 8007af0:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8007af4:	3501      	adds	r5, #1
 8007af6:	615e      	str	r6, [r3, #20]
 8007af8:	6125      	str	r5, [r4, #16]
 8007afa:	4620      	mov	r0, r4
 8007afc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007b00:	08008ba0 	.word	0x08008ba0
 8007b04:	08008bb1 	.word	0x08008bb1

08007b08 <__hi0bits>:
 8007b08:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8007b0c:	4603      	mov	r3, r0
 8007b0e:	bf36      	itet	cc
 8007b10:	0403      	lslcc	r3, r0, #16
 8007b12:	2000      	movcs	r0, #0
 8007b14:	2010      	movcc	r0, #16
 8007b16:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8007b1a:	bf3c      	itt	cc
 8007b1c:	021b      	lslcc	r3, r3, #8
 8007b1e:	3008      	addcc	r0, #8
 8007b20:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8007b24:	bf3c      	itt	cc
 8007b26:	011b      	lslcc	r3, r3, #4
 8007b28:	3004      	addcc	r0, #4
 8007b2a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007b2e:	bf3c      	itt	cc
 8007b30:	009b      	lslcc	r3, r3, #2
 8007b32:	3002      	addcc	r0, #2
 8007b34:	2b00      	cmp	r3, #0
 8007b36:	db05      	blt.n	8007b44 <__hi0bits+0x3c>
 8007b38:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8007b3c:	f100 0001 	add.w	r0, r0, #1
 8007b40:	bf08      	it	eq
 8007b42:	2020      	moveq	r0, #32
 8007b44:	4770      	bx	lr

08007b46 <__lo0bits>:
 8007b46:	6803      	ldr	r3, [r0, #0]
 8007b48:	4602      	mov	r2, r0
 8007b4a:	f013 0007 	ands.w	r0, r3, #7
 8007b4e:	d00b      	beq.n	8007b68 <__lo0bits+0x22>
 8007b50:	07d9      	lsls	r1, r3, #31
 8007b52:	d421      	bmi.n	8007b98 <__lo0bits+0x52>
 8007b54:	0798      	lsls	r0, r3, #30
 8007b56:	bf49      	itett	mi
 8007b58:	085b      	lsrmi	r3, r3, #1
 8007b5a:	089b      	lsrpl	r3, r3, #2
 8007b5c:	2001      	movmi	r0, #1
 8007b5e:	6013      	strmi	r3, [r2, #0]
 8007b60:	bf5c      	itt	pl
 8007b62:	6013      	strpl	r3, [r2, #0]
 8007b64:	2002      	movpl	r0, #2
 8007b66:	4770      	bx	lr
 8007b68:	b299      	uxth	r1, r3
 8007b6a:	b909      	cbnz	r1, 8007b70 <__lo0bits+0x2a>
 8007b6c:	0c1b      	lsrs	r3, r3, #16
 8007b6e:	2010      	movs	r0, #16
 8007b70:	b2d9      	uxtb	r1, r3
 8007b72:	b909      	cbnz	r1, 8007b78 <__lo0bits+0x32>
 8007b74:	3008      	adds	r0, #8
 8007b76:	0a1b      	lsrs	r3, r3, #8
 8007b78:	0719      	lsls	r1, r3, #28
 8007b7a:	bf04      	itt	eq
 8007b7c:	091b      	lsreq	r3, r3, #4
 8007b7e:	3004      	addeq	r0, #4
 8007b80:	0799      	lsls	r1, r3, #30
 8007b82:	bf04      	itt	eq
 8007b84:	089b      	lsreq	r3, r3, #2
 8007b86:	3002      	addeq	r0, #2
 8007b88:	07d9      	lsls	r1, r3, #31
 8007b8a:	d403      	bmi.n	8007b94 <__lo0bits+0x4e>
 8007b8c:	085b      	lsrs	r3, r3, #1
 8007b8e:	f100 0001 	add.w	r0, r0, #1
 8007b92:	d003      	beq.n	8007b9c <__lo0bits+0x56>
 8007b94:	6013      	str	r3, [r2, #0]
 8007b96:	4770      	bx	lr
 8007b98:	2000      	movs	r0, #0
 8007b9a:	4770      	bx	lr
 8007b9c:	2020      	movs	r0, #32
 8007b9e:	4770      	bx	lr

08007ba0 <__i2b>:
 8007ba0:	b510      	push	{r4, lr}
 8007ba2:	460c      	mov	r4, r1
 8007ba4:	2101      	movs	r1, #1
 8007ba6:	f7ff ff07 	bl	80079b8 <_Balloc>
 8007baa:	4602      	mov	r2, r0
 8007bac:	b928      	cbnz	r0, 8007bba <__i2b+0x1a>
 8007bae:	4b05      	ldr	r3, [pc, #20]	@ (8007bc4 <__i2b+0x24>)
 8007bb0:	4805      	ldr	r0, [pc, #20]	@ (8007bc8 <__i2b+0x28>)
 8007bb2:	f240 1145 	movw	r1, #325	@ 0x145
 8007bb6:	f000 fb43 	bl	8008240 <__assert_func>
 8007bba:	2301      	movs	r3, #1
 8007bbc:	6144      	str	r4, [r0, #20]
 8007bbe:	6103      	str	r3, [r0, #16]
 8007bc0:	bd10      	pop	{r4, pc}
 8007bc2:	bf00      	nop
 8007bc4:	08008ba0 	.word	0x08008ba0
 8007bc8:	08008bb1 	.word	0x08008bb1

08007bcc <__multiply>:
 8007bcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007bd0:	4617      	mov	r7, r2
 8007bd2:	690a      	ldr	r2, [r1, #16]
 8007bd4:	693b      	ldr	r3, [r7, #16]
 8007bd6:	429a      	cmp	r2, r3
 8007bd8:	bfa8      	it	ge
 8007bda:	463b      	movge	r3, r7
 8007bdc:	4689      	mov	r9, r1
 8007bde:	bfa4      	itt	ge
 8007be0:	460f      	movge	r7, r1
 8007be2:	4699      	movge	r9, r3
 8007be4:	693d      	ldr	r5, [r7, #16]
 8007be6:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8007bea:	68bb      	ldr	r3, [r7, #8]
 8007bec:	6879      	ldr	r1, [r7, #4]
 8007bee:	eb05 060a 	add.w	r6, r5, sl
 8007bf2:	42b3      	cmp	r3, r6
 8007bf4:	b085      	sub	sp, #20
 8007bf6:	bfb8      	it	lt
 8007bf8:	3101      	addlt	r1, #1
 8007bfa:	f7ff fedd 	bl	80079b8 <_Balloc>
 8007bfe:	b930      	cbnz	r0, 8007c0e <__multiply+0x42>
 8007c00:	4602      	mov	r2, r0
 8007c02:	4b41      	ldr	r3, [pc, #260]	@ (8007d08 <__multiply+0x13c>)
 8007c04:	4841      	ldr	r0, [pc, #260]	@ (8007d0c <__multiply+0x140>)
 8007c06:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8007c0a:	f000 fb19 	bl	8008240 <__assert_func>
 8007c0e:	f100 0414 	add.w	r4, r0, #20
 8007c12:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 8007c16:	4623      	mov	r3, r4
 8007c18:	2200      	movs	r2, #0
 8007c1a:	4573      	cmp	r3, lr
 8007c1c:	d320      	bcc.n	8007c60 <__multiply+0x94>
 8007c1e:	f107 0814 	add.w	r8, r7, #20
 8007c22:	f109 0114 	add.w	r1, r9, #20
 8007c26:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 8007c2a:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 8007c2e:	9302      	str	r3, [sp, #8]
 8007c30:	1beb      	subs	r3, r5, r7
 8007c32:	3b15      	subs	r3, #21
 8007c34:	f023 0303 	bic.w	r3, r3, #3
 8007c38:	3304      	adds	r3, #4
 8007c3a:	3715      	adds	r7, #21
 8007c3c:	42bd      	cmp	r5, r7
 8007c3e:	bf38      	it	cc
 8007c40:	2304      	movcc	r3, #4
 8007c42:	9301      	str	r3, [sp, #4]
 8007c44:	9b02      	ldr	r3, [sp, #8]
 8007c46:	9103      	str	r1, [sp, #12]
 8007c48:	428b      	cmp	r3, r1
 8007c4a:	d80c      	bhi.n	8007c66 <__multiply+0x9a>
 8007c4c:	2e00      	cmp	r6, #0
 8007c4e:	dd03      	ble.n	8007c58 <__multiply+0x8c>
 8007c50:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8007c54:	2b00      	cmp	r3, #0
 8007c56:	d055      	beq.n	8007d04 <__multiply+0x138>
 8007c58:	6106      	str	r6, [r0, #16]
 8007c5a:	b005      	add	sp, #20
 8007c5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007c60:	f843 2b04 	str.w	r2, [r3], #4
 8007c64:	e7d9      	b.n	8007c1a <__multiply+0x4e>
 8007c66:	f8b1 a000 	ldrh.w	sl, [r1]
 8007c6a:	f1ba 0f00 	cmp.w	sl, #0
 8007c6e:	d01f      	beq.n	8007cb0 <__multiply+0xe4>
 8007c70:	46c4      	mov	ip, r8
 8007c72:	46a1      	mov	r9, r4
 8007c74:	2700      	movs	r7, #0
 8007c76:	f85c 2b04 	ldr.w	r2, [ip], #4
 8007c7a:	f8d9 3000 	ldr.w	r3, [r9]
 8007c7e:	fa1f fb82 	uxth.w	fp, r2
 8007c82:	b29b      	uxth	r3, r3
 8007c84:	fb0a 330b 	mla	r3, sl, fp, r3
 8007c88:	443b      	add	r3, r7
 8007c8a:	f8d9 7000 	ldr.w	r7, [r9]
 8007c8e:	0c12      	lsrs	r2, r2, #16
 8007c90:	0c3f      	lsrs	r7, r7, #16
 8007c92:	fb0a 7202 	mla	r2, sl, r2, r7
 8007c96:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 8007c9a:	b29b      	uxth	r3, r3
 8007c9c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8007ca0:	4565      	cmp	r5, ip
 8007ca2:	f849 3b04 	str.w	r3, [r9], #4
 8007ca6:	ea4f 4712 	mov.w	r7, r2, lsr #16
 8007caa:	d8e4      	bhi.n	8007c76 <__multiply+0xaa>
 8007cac:	9b01      	ldr	r3, [sp, #4]
 8007cae:	50e7      	str	r7, [r4, r3]
 8007cb0:	9b03      	ldr	r3, [sp, #12]
 8007cb2:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8007cb6:	3104      	adds	r1, #4
 8007cb8:	f1b9 0f00 	cmp.w	r9, #0
 8007cbc:	d020      	beq.n	8007d00 <__multiply+0x134>
 8007cbe:	6823      	ldr	r3, [r4, #0]
 8007cc0:	4647      	mov	r7, r8
 8007cc2:	46a4      	mov	ip, r4
 8007cc4:	f04f 0a00 	mov.w	sl, #0
 8007cc8:	f8b7 b000 	ldrh.w	fp, [r7]
 8007ccc:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 8007cd0:	fb09 220b 	mla	r2, r9, fp, r2
 8007cd4:	4452      	add	r2, sl
 8007cd6:	b29b      	uxth	r3, r3
 8007cd8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8007cdc:	f84c 3b04 	str.w	r3, [ip], #4
 8007ce0:	f857 3b04 	ldr.w	r3, [r7], #4
 8007ce4:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8007ce8:	f8bc 3000 	ldrh.w	r3, [ip]
 8007cec:	fb09 330a 	mla	r3, r9, sl, r3
 8007cf0:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 8007cf4:	42bd      	cmp	r5, r7
 8007cf6:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8007cfa:	d8e5      	bhi.n	8007cc8 <__multiply+0xfc>
 8007cfc:	9a01      	ldr	r2, [sp, #4]
 8007cfe:	50a3      	str	r3, [r4, r2]
 8007d00:	3404      	adds	r4, #4
 8007d02:	e79f      	b.n	8007c44 <__multiply+0x78>
 8007d04:	3e01      	subs	r6, #1
 8007d06:	e7a1      	b.n	8007c4c <__multiply+0x80>
 8007d08:	08008ba0 	.word	0x08008ba0
 8007d0c:	08008bb1 	.word	0x08008bb1

08007d10 <__pow5mult>:
 8007d10:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007d14:	4615      	mov	r5, r2
 8007d16:	f012 0203 	ands.w	r2, r2, #3
 8007d1a:	4607      	mov	r7, r0
 8007d1c:	460e      	mov	r6, r1
 8007d1e:	d007      	beq.n	8007d30 <__pow5mult+0x20>
 8007d20:	4c25      	ldr	r4, [pc, #148]	@ (8007db8 <__pow5mult+0xa8>)
 8007d22:	3a01      	subs	r2, #1
 8007d24:	2300      	movs	r3, #0
 8007d26:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8007d2a:	f7ff fea7 	bl	8007a7c <__multadd>
 8007d2e:	4606      	mov	r6, r0
 8007d30:	10ad      	asrs	r5, r5, #2
 8007d32:	d03d      	beq.n	8007db0 <__pow5mult+0xa0>
 8007d34:	69fc      	ldr	r4, [r7, #28]
 8007d36:	b97c      	cbnz	r4, 8007d58 <__pow5mult+0x48>
 8007d38:	2010      	movs	r0, #16
 8007d3a:	f7ff fd87 	bl	800784c <malloc>
 8007d3e:	4602      	mov	r2, r0
 8007d40:	61f8      	str	r0, [r7, #28]
 8007d42:	b928      	cbnz	r0, 8007d50 <__pow5mult+0x40>
 8007d44:	4b1d      	ldr	r3, [pc, #116]	@ (8007dbc <__pow5mult+0xac>)
 8007d46:	481e      	ldr	r0, [pc, #120]	@ (8007dc0 <__pow5mult+0xb0>)
 8007d48:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8007d4c:	f000 fa78 	bl	8008240 <__assert_func>
 8007d50:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8007d54:	6004      	str	r4, [r0, #0]
 8007d56:	60c4      	str	r4, [r0, #12]
 8007d58:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8007d5c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8007d60:	b94c      	cbnz	r4, 8007d76 <__pow5mult+0x66>
 8007d62:	f240 2171 	movw	r1, #625	@ 0x271
 8007d66:	4638      	mov	r0, r7
 8007d68:	f7ff ff1a 	bl	8007ba0 <__i2b>
 8007d6c:	2300      	movs	r3, #0
 8007d6e:	f8c8 0008 	str.w	r0, [r8, #8]
 8007d72:	4604      	mov	r4, r0
 8007d74:	6003      	str	r3, [r0, #0]
 8007d76:	f04f 0900 	mov.w	r9, #0
 8007d7a:	07eb      	lsls	r3, r5, #31
 8007d7c:	d50a      	bpl.n	8007d94 <__pow5mult+0x84>
 8007d7e:	4631      	mov	r1, r6
 8007d80:	4622      	mov	r2, r4
 8007d82:	4638      	mov	r0, r7
 8007d84:	f7ff ff22 	bl	8007bcc <__multiply>
 8007d88:	4631      	mov	r1, r6
 8007d8a:	4680      	mov	r8, r0
 8007d8c:	4638      	mov	r0, r7
 8007d8e:	f7ff fe53 	bl	8007a38 <_Bfree>
 8007d92:	4646      	mov	r6, r8
 8007d94:	106d      	asrs	r5, r5, #1
 8007d96:	d00b      	beq.n	8007db0 <__pow5mult+0xa0>
 8007d98:	6820      	ldr	r0, [r4, #0]
 8007d9a:	b938      	cbnz	r0, 8007dac <__pow5mult+0x9c>
 8007d9c:	4622      	mov	r2, r4
 8007d9e:	4621      	mov	r1, r4
 8007da0:	4638      	mov	r0, r7
 8007da2:	f7ff ff13 	bl	8007bcc <__multiply>
 8007da6:	6020      	str	r0, [r4, #0]
 8007da8:	f8c0 9000 	str.w	r9, [r0]
 8007dac:	4604      	mov	r4, r0
 8007dae:	e7e4      	b.n	8007d7a <__pow5mult+0x6a>
 8007db0:	4630      	mov	r0, r6
 8007db2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007db6:	bf00      	nop
 8007db8:	08008c64 	.word	0x08008c64
 8007dbc:	08008b31 	.word	0x08008b31
 8007dc0:	08008bb1 	.word	0x08008bb1

08007dc4 <__lshift>:
 8007dc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007dc8:	460c      	mov	r4, r1
 8007dca:	6849      	ldr	r1, [r1, #4]
 8007dcc:	6923      	ldr	r3, [r4, #16]
 8007dce:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8007dd2:	68a3      	ldr	r3, [r4, #8]
 8007dd4:	4607      	mov	r7, r0
 8007dd6:	4691      	mov	r9, r2
 8007dd8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8007ddc:	f108 0601 	add.w	r6, r8, #1
 8007de0:	42b3      	cmp	r3, r6
 8007de2:	db0b      	blt.n	8007dfc <__lshift+0x38>
 8007de4:	4638      	mov	r0, r7
 8007de6:	f7ff fde7 	bl	80079b8 <_Balloc>
 8007dea:	4605      	mov	r5, r0
 8007dec:	b948      	cbnz	r0, 8007e02 <__lshift+0x3e>
 8007dee:	4602      	mov	r2, r0
 8007df0:	4b28      	ldr	r3, [pc, #160]	@ (8007e94 <__lshift+0xd0>)
 8007df2:	4829      	ldr	r0, [pc, #164]	@ (8007e98 <__lshift+0xd4>)
 8007df4:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8007df8:	f000 fa22 	bl	8008240 <__assert_func>
 8007dfc:	3101      	adds	r1, #1
 8007dfe:	005b      	lsls	r3, r3, #1
 8007e00:	e7ee      	b.n	8007de0 <__lshift+0x1c>
 8007e02:	2300      	movs	r3, #0
 8007e04:	f100 0114 	add.w	r1, r0, #20
 8007e08:	f100 0210 	add.w	r2, r0, #16
 8007e0c:	4618      	mov	r0, r3
 8007e0e:	4553      	cmp	r3, sl
 8007e10:	db33      	blt.n	8007e7a <__lshift+0xb6>
 8007e12:	6920      	ldr	r0, [r4, #16]
 8007e14:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8007e18:	f104 0314 	add.w	r3, r4, #20
 8007e1c:	f019 091f 	ands.w	r9, r9, #31
 8007e20:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8007e24:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8007e28:	d02b      	beq.n	8007e82 <__lshift+0xbe>
 8007e2a:	f1c9 0e20 	rsb	lr, r9, #32
 8007e2e:	468a      	mov	sl, r1
 8007e30:	2200      	movs	r2, #0
 8007e32:	6818      	ldr	r0, [r3, #0]
 8007e34:	fa00 f009 	lsl.w	r0, r0, r9
 8007e38:	4310      	orrs	r0, r2
 8007e3a:	f84a 0b04 	str.w	r0, [sl], #4
 8007e3e:	f853 2b04 	ldr.w	r2, [r3], #4
 8007e42:	459c      	cmp	ip, r3
 8007e44:	fa22 f20e 	lsr.w	r2, r2, lr
 8007e48:	d8f3      	bhi.n	8007e32 <__lshift+0x6e>
 8007e4a:	ebac 0304 	sub.w	r3, ip, r4
 8007e4e:	3b15      	subs	r3, #21
 8007e50:	f023 0303 	bic.w	r3, r3, #3
 8007e54:	3304      	adds	r3, #4
 8007e56:	f104 0015 	add.w	r0, r4, #21
 8007e5a:	4560      	cmp	r0, ip
 8007e5c:	bf88      	it	hi
 8007e5e:	2304      	movhi	r3, #4
 8007e60:	50ca      	str	r2, [r1, r3]
 8007e62:	b10a      	cbz	r2, 8007e68 <__lshift+0xa4>
 8007e64:	f108 0602 	add.w	r6, r8, #2
 8007e68:	3e01      	subs	r6, #1
 8007e6a:	4638      	mov	r0, r7
 8007e6c:	612e      	str	r6, [r5, #16]
 8007e6e:	4621      	mov	r1, r4
 8007e70:	f7ff fde2 	bl	8007a38 <_Bfree>
 8007e74:	4628      	mov	r0, r5
 8007e76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007e7a:	f842 0f04 	str.w	r0, [r2, #4]!
 8007e7e:	3301      	adds	r3, #1
 8007e80:	e7c5      	b.n	8007e0e <__lshift+0x4a>
 8007e82:	3904      	subs	r1, #4
 8007e84:	f853 2b04 	ldr.w	r2, [r3], #4
 8007e88:	f841 2f04 	str.w	r2, [r1, #4]!
 8007e8c:	459c      	cmp	ip, r3
 8007e8e:	d8f9      	bhi.n	8007e84 <__lshift+0xc0>
 8007e90:	e7ea      	b.n	8007e68 <__lshift+0xa4>
 8007e92:	bf00      	nop
 8007e94:	08008ba0 	.word	0x08008ba0
 8007e98:	08008bb1 	.word	0x08008bb1

08007e9c <__mcmp>:
 8007e9c:	690a      	ldr	r2, [r1, #16]
 8007e9e:	4603      	mov	r3, r0
 8007ea0:	6900      	ldr	r0, [r0, #16]
 8007ea2:	1a80      	subs	r0, r0, r2
 8007ea4:	b530      	push	{r4, r5, lr}
 8007ea6:	d10e      	bne.n	8007ec6 <__mcmp+0x2a>
 8007ea8:	3314      	adds	r3, #20
 8007eaa:	3114      	adds	r1, #20
 8007eac:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8007eb0:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8007eb4:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8007eb8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8007ebc:	4295      	cmp	r5, r2
 8007ebe:	d003      	beq.n	8007ec8 <__mcmp+0x2c>
 8007ec0:	d205      	bcs.n	8007ece <__mcmp+0x32>
 8007ec2:	f04f 30ff 	mov.w	r0, #4294967295
 8007ec6:	bd30      	pop	{r4, r5, pc}
 8007ec8:	42a3      	cmp	r3, r4
 8007eca:	d3f3      	bcc.n	8007eb4 <__mcmp+0x18>
 8007ecc:	e7fb      	b.n	8007ec6 <__mcmp+0x2a>
 8007ece:	2001      	movs	r0, #1
 8007ed0:	e7f9      	b.n	8007ec6 <__mcmp+0x2a>
	...

08007ed4 <__mdiff>:
 8007ed4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007ed8:	4689      	mov	r9, r1
 8007eda:	4606      	mov	r6, r0
 8007edc:	4611      	mov	r1, r2
 8007ede:	4648      	mov	r0, r9
 8007ee0:	4614      	mov	r4, r2
 8007ee2:	f7ff ffdb 	bl	8007e9c <__mcmp>
 8007ee6:	1e05      	subs	r5, r0, #0
 8007ee8:	d112      	bne.n	8007f10 <__mdiff+0x3c>
 8007eea:	4629      	mov	r1, r5
 8007eec:	4630      	mov	r0, r6
 8007eee:	f7ff fd63 	bl	80079b8 <_Balloc>
 8007ef2:	4602      	mov	r2, r0
 8007ef4:	b928      	cbnz	r0, 8007f02 <__mdiff+0x2e>
 8007ef6:	4b3f      	ldr	r3, [pc, #252]	@ (8007ff4 <__mdiff+0x120>)
 8007ef8:	f240 2137 	movw	r1, #567	@ 0x237
 8007efc:	483e      	ldr	r0, [pc, #248]	@ (8007ff8 <__mdiff+0x124>)
 8007efe:	f000 f99f 	bl	8008240 <__assert_func>
 8007f02:	2301      	movs	r3, #1
 8007f04:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8007f08:	4610      	mov	r0, r2
 8007f0a:	b003      	add	sp, #12
 8007f0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007f10:	bfbc      	itt	lt
 8007f12:	464b      	movlt	r3, r9
 8007f14:	46a1      	movlt	r9, r4
 8007f16:	4630      	mov	r0, r6
 8007f18:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8007f1c:	bfba      	itte	lt
 8007f1e:	461c      	movlt	r4, r3
 8007f20:	2501      	movlt	r5, #1
 8007f22:	2500      	movge	r5, #0
 8007f24:	f7ff fd48 	bl	80079b8 <_Balloc>
 8007f28:	4602      	mov	r2, r0
 8007f2a:	b918      	cbnz	r0, 8007f34 <__mdiff+0x60>
 8007f2c:	4b31      	ldr	r3, [pc, #196]	@ (8007ff4 <__mdiff+0x120>)
 8007f2e:	f240 2145 	movw	r1, #581	@ 0x245
 8007f32:	e7e3      	b.n	8007efc <__mdiff+0x28>
 8007f34:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8007f38:	6926      	ldr	r6, [r4, #16]
 8007f3a:	60c5      	str	r5, [r0, #12]
 8007f3c:	f109 0310 	add.w	r3, r9, #16
 8007f40:	f109 0514 	add.w	r5, r9, #20
 8007f44:	f104 0e14 	add.w	lr, r4, #20
 8007f48:	f100 0b14 	add.w	fp, r0, #20
 8007f4c:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8007f50:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8007f54:	9301      	str	r3, [sp, #4]
 8007f56:	46d9      	mov	r9, fp
 8007f58:	f04f 0c00 	mov.w	ip, #0
 8007f5c:	9b01      	ldr	r3, [sp, #4]
 8007f5e:	f85e 0b04 	ldr.w	r0, [lr], #4
 8007f62:	f853 af04 	ldr.w	sl, [r3, #4]!
 8007f66:	9301      	str	r3, [sp, #4]
 8007f68:	fa1f f38a 	uxth.w	r3, sl
 8007f6c:	4619      	mov	r1, r3
 8007f6e:	b283      	uxth	r3, r0
 8007f70:	1acb      	subs	r3, r1, r3
 8007f72:	0c00      	lsrs	r0, r0, #16
 8007f74:	4463      	add	r3, ip
 8007f76:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8007f7a:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8007f7e:	b29b      	uxth	r3, r3
 8007f80:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8007f84:	4576      	cmp	r6, lr
 8007f86:	f849 3b04 	str.w	r3, [r9], #4
 8007f8a:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8007f8e:	d8e5      	bhi.n	8007f5c <__mdiff+0x88>
 8007f90:	1b33      	subs	r3, r6, r4
 8007f92:	3b15      	subs	r3, #21
 8007f94:	f023 0303 	bic.w	r3, r3, #3
 8007f98:	3415      	adds	r4, #21
 8007f9a:	3304      	adds	r3, #4
 8007f9c:	42a6      	cmp	r6, r4
 8007f9e:	bf38      	it	cc
 8007fa0:	2304      	movcc	r3, #4
 8007fa2:	441d      	add	r5, r3
 8007fa4:	445b      	add	r3, fp
 8007fa6:	461e      	mov	r6, r3
 8007fa8:	462c      	mov	r4, r5
 8007faa:	4544      	cmp	r4, r8
 8007fac:	d30e      	bcc.n	8007fcc <__mdiff+0xf8>
 8007fae:	f108 0103 	add.w	r1, r8, #3
 8007fb2:	1b49      	subs	r1, r1, r5
 8007fb4:	f021 0103 	bic.w	r1, r1, #3
 8007fb8:	3d03      	subs	r5, #3
 8007fba:	45a8      	cmp	r8, r5
 8007fbc:	bf38      	it	cc
 8007fbe:	2100      	movcc	r1, #0
 8007fc0:	440b      	add	r3, r1
 8007fc2:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8007fc6:	b191      	cbz	r1, 8007fee <__mdiff+0x11a>
 8007fc8:	6117      	str	r7, [r2, #16]
 8007fca:	e79d      	b.n	8007f08 <__mdiff+0x34>
 8007fcc:	f854 1b04 	ldr.w	r1, [r4], #4
 8007fd0:	46e6      	mov	lr, ip
 8007fd2:	0c08      	lsrs	r0, r1, #16
 8007fd4:	fa1c fc81 	uxtah	ip, ip, r1
 8007fd8:	4471      	add	r1, lr
 8007fda:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8007fde:	b289      	uxth	r1, r1
 8007fe0:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8007fe4:	f846 1b04 	str.w	r1, [r6], #4
 8007fe8:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8007fec:	e7dd      	b.n	8007faa <__mdiff+0xd6>
 8007fee:	3f01      	subs	r7, #1
 8007ff0:	e7e7      	b.n	8007fc2 <__mdiff+0xee>
 8007ff2:	bf00      	nop
 8007ff4:	08008ba0 	.word	0x08008ba0
 8007ff8:	08008bb1 	.word	0x08008bb1

08007ffc <__d2b>:
 8007ffc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008000:	460f      	mov	r7, r1
 8008002:	2101      	movs	r1, #1
 8008004:	ec59 8b10 	vmov	r8, r9, d0
 8008008:	4616      	mov	r6, r2
 800800a:	f7ff fcd5 	bl	80079b8 <_Balloc>
 800800e:	4604      	mov	r4, r0
 8008010:	b930      	cbnz	r0, 8008020 <__d2b+0x24>
 8008012:	4602      	mov	r2, r0
 8008014:	4b23      	ldr	r3, [pc, #140]	@ (80080a4 <__d2b+0xa8>)
 8008016:	4824      	ldr	r0, [pc, #144]	@ (80080a8 <__d2b+0xac>)
 8008018:	f240 310f 	movw	r1, #783	@ 0x30f
 800801c:	f000 f910 	bl	8008240 <__assert_func>
 8008020:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8008024:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8008028:	b10d      	cbz	r5, 800802e <__d2b+0x32>
 800802a:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800802e:	9301      	str	r3, [sp, #4]
 8008030:	f1b8 0300 	subs.w	r3, r8, #0
 8008034:	d023      	beq.n	800807e <__d2b+0x82>
 8008036:	4668      	mov	r0, sp
 8008038:	9300      	str	r3, [sp, #0]
 800803a:	f7ff fd84 	bl	8007b46 <__lo0bits>
 800803e:	e9dd 1200 	ldrd	r1, r2, [sp]
 8008042:	b1d0      	cbz	r0, 800807a <__d2b+0x7e>
 8008044:	f1c0 0320 	rsb	r3, r0, #32
 8008048:	fa02 f303 	lsl.w	r3, r2, r3
 800804c:	430b      	orrs	r3, r1
 800804e:	40c2      	lsrs	r2, r0
 8008050:	6163      	str	r3, [r4, #20]
 8008052:	9201      	str	r2, [sp, #4]
 8008054:	9b01      	ldr	r3, [sp, #4]
 8008056:	61a3      	str	r3, [r4, #24]
 8008058:	2b00      	cmp	r3, #0
 800805a:	bf0c      	ite	eq
 800805c:	2201      	moveq	r2, #1
 800805e:	2202      	movne	r2, #2
 8008060:	6122      	str	r2, [r4, #16]
 8008062:	b1a5      	cbz	r5, 800808e <__d2b+0x92>
 8008064:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8008068:	4405      	add	r5, r0
 800806a:	603d      	str	r5, [r7, #0]
 800806c:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8008070:	6030      	str	r0, [r6, #0]
 8008072:	4620      	mov	r0, r4
 8008074:	b003      	add	sp, #12
 8008076:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800807a:	6161      	str	r1, [r4, #20]
 800807c:	e7ea      	b.n	8008054 <__d2b+0x58>
 800807e:	a801      	add	r0, sp, #4
 8008080:	f7ff fd61 	bl	8007b46 <__lo0bits>
 8008084:	9b01      	ldr	r3, [sp, #4]
 8008086:	6163      	str	r3, [r4, #20]
 8008088:	3020      	adds	r0, #32
 800808a:	2201      	movs	r2, #1
 800808c:	e7e8      	b.n	8008060 <__d2b+0x64>
 800808e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8008092:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8008096:	6038      	str	r0, [r7, #0]
 8008098:	6918      	ldr	r0, [r3, #16]
 800809a:	f7ff fd35 	bl	8007b08 <__hi0bits>
 800809e:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 80080a2:	e7e5      	b.n	8008070 <__d2b+0x74>
 80080a4:	08008ba0 	.word	0x08008ba0
 80080a8:	08008bb1 	.word	0x08008bb1

080080ac <__sflush_r>:
 80080ac:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80080b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80080b4:	0716      	lsls	r6, r2, #28
 80080b6:	4605      	mov	r5, r0
 80080b8:	460c      	mov	r4, r1
 80080ba:	d454      	bmi.n	8008166 <__sflush_r+0xba>
 80080bc:	684b      	ldr	r3, [r1, #4]
 80080be:	2b00      	cmp	r3, #0
 80080c0:	dc02      	bgt.n	80080c8 <__sflush_r+0x1c>
 80080c2:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80080c4:	2b00      	cmp	r3, #0
 80080c6:	dd48      	ble.n	800815a <__sflush_r+0xae>
 80080c8:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80080ca:	2e00      	cmp	r6, #0
 80080cc:	d045      	beq.n	800815a <__sflush_r+0xae>
 80080ce:	2300      	movs	r3, #0
 80080d0:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80080d4:	682f      	ldr	r7, [r5, #0]
 80080d6:	6a21      	ldr	r1, [r4, #32]
 80080d8:	602b      	str	r3, [r5, #0]
 80080da:	d030      	beq.n	800813e <__sflush_r+0x92>
 80080dc:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80080de:	89a3      	ldrh	r3, [r4, #12]
 80080e0:	0759      	lsls	r1, r3, #29
 80080e2:	d505      	bpl.n	80080f0 <__sflush_r+0x44>
 80080e4:	6863      	ldr	r3, [r4, #4]
 80080e6:	1ad2      	subs	r2, r2, r3
 80080e8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80080ea:	b10b      	cbz	r3, 80080f0 <__sflush_r+0x44>
 80080ec:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80080ee:	1ad2      	subs	r2, r2, r3
 80080f0:	2300      	movs	r3, #0
 80080f2:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80080f4:	6a21      	ldr	r1, [r4, #32]
 80080f6:	4628      	mov	r0, r5
 80080f8:	47b0      	blx	r6
 80080fa:	1c43      	adds	r3, r0, #1
 80080fc:	89a3      	ldrh	r3, [r4, #12]
 80080fe:	d106      	bne.n	800810e <__sflush_r+0x62>
 8008100:	6829      	ldr	r1, [r5, #0]
 8008102:	291d      	cmp	r1, #29
 8008104:	d82b      	bhi.n	800815e <__sflush_r+0xb2>
 8008106:	4a2a      	ldr	r2, [pc, #168]	@ (80081b0 <__sflush_r+0x104>)
 8008108:	40ca      	lsrs	r2, r1
 800810a:	07d6      	lsls	r6, r2, #31
 800810c:	d527      	bpl.n	800815e <__sflush_r+0xb2>
 800810e:	2200      	movs	r2, #0
 8008110:	6062      	str	r2, [r4, #4]
 8008112:	04d9      	lsls	r1, r3, #19
 8008114:	6922      	ldr	r2, [r4, #16]
 8008116:	6022      	str	r2, [r4, #0]
 8008118:	d504      	bpl.n	8008124 <__sflush_r+0x78>
 800811a:	1c42      	adds	r2, r0, #1
 800811c:	d101      	bne.n	8008122 <__sflush_r+0x76>
 800811e:	682b      	ldr	r3, [r5, #0]
 8008120:	b903      	cbnz	r3, 8008124 <__sflush_r+0x78>
 8008122:	6560      	str	r0, [r4, #84]	@ 0x54
 8008124:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8008126:	602f      	str	r7, [r5, #0]
 8008128:	b1b9      	cbz	r1, 800815a <__sflush_r+0xae>
 800812a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800812e:	4299      	cmp	r1, r3
 8008130:	d002      	beq.n	8008138 <__sflush_r+0x8c>
 8008132:	4628      	mov	r0, r5
 8008134:	f7ff fb40 	bl	80077b8 <_free_r>
 8008138:	2300      	movs	r3, #0
 800813a:	6363      	str	r3, [r4, #52]	@ 0x34
 800813c:	e00d      	b.n	800815a <__sflush_r+0xae>
 800813e:	2301      	movs	r3, #1
 8008140:	4628      	mov	r0, r5
 8008142:	47b0      	blx	r6
 8008144:	4602      	mov	r2, r0
 8008146:	1c50      	adds	r0, r2, #1
 8008148:	d1c9      	bne.n	80080de <__sflush_r+0x32>
 800814a:	682b      	ldr	r3, [r5, #0]
 800814c:	2b00      	cmp	r3, #0
 800814e:	d0c6      	beq.n	80080de <__sflush_r+0x32>
 8008150:	2b1d      	cmp	r3, #29
 8008152:	d001      	beq.n	8008158 <__sflush_r+0xac>
 8008154:	2b16      	cmp	r3, #22
 8008156:	d11e      	bne.n	8008196 <__sflush_r+0xea>
 8008158:	602f      	str	r7, [r5, #0]
 800815a:	2000      	movs	r0, #0
 800815c:	e022      	b.n	80081a4 <__sflush_r+0xf8>
 800815e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8008162:	b21b      	sxth	r3, r3
 8008164:	e01b      	b.n	800819e <__sflush_r+0xf2>
 8008166:	690f      	ldr	r7, [r1, #16]
 8008168:	2f00      	cmp	r7, #0
 800816a:	d0f6      	beq.n	800815a <__sflush_r+0xae>
 800816c:	0793      	lsls	r3, r2, #30
 800816e:	680e      	ldr	r6, [r1, #0]
 8008170:	bf08      	it	eq
 8008172:	694b      	ldreq	r3, [r1, #20]
 8008174:	600f      	str	r7, [r1, #0]
 8008176:	bf18      	it	ne
 8008178:	2300      	movne	r3, #0
 800817a:	eba6 0807 	sub.w	r8, r6, r7
 800817e:	608b      	str	r3, [r1, #8]
 8008180:	f1b8 0f00 	cmp.w	r8, #0
 8008184:	dde9      	ble.n	800815a <__sflush_r+0xae>
 8008186:	6a21      	ldr	r1, [r4, #32]
 8008188:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800818a:	4643      	mov	r3, r8
 800818c:	463a      	mov	r2, r7
 800818e:	4628      	mov	r0, r5
 8008190:	47b0      	blx	r6
 8008192:	2800      	cmp	r0, #0
 8008194:	dc08      	bgt.n	80081a8 <__sflush_r+0xfc>
 8008196:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800819a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800819e:	81a3      	strh	r3, [r4, #12]
 80081a0:	f04f 30ff 	mov.w	r0, #4294967295
 80081a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80081a8:	4407      	add	r7, r0
 80081aa:	eba8 0800 	sub.w	r8, r8, r0
 80081ae:	e7e7      	b.n	8008180 <__sflush_r+0xd4>
 80081b0:	20400001 	.word	0x20400001

080081b4 <_fflush_r>:
 80081b4:	b538      	push	{r3, r4, r5, lr}
 80081b6:	690b      	ldr	r3, [r1, #16]
 80081b8:	4605      	mov	r5, r0
 80081ba:	460c      	mov	r4, r1
 80081bc:	b913      	cbnz	r3, 80081c4 <_fflush_r+0x10>
 80081be:	2500      	movs	r5, #0
 80081c0:	4628      	mov	r0, r5
 80081c2:	bd38      	pop	{r3, r4, r5, pc}
 80081c4:	b118      	cbz	r0, 80081ce <_fflush_r+0x1a>
 80081c6:	6a03      	ldr	r3, [r0, #32]
 80081c8:	b90b      	cbnz	r3, 80081ce <_fflush_r+0x1a>
 80081ca:	f7fe fba1 	bl	8006910 <__sinit>
 80081ce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80081d2:	2b00      	cmp	r3, #0
 80081d4:	d0f3      	beq.n	80081be <_fflush_r+0xa>
 80081d6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80081d8:	07d0      	lsls	r0, r2, #31
 80081da:	d404      	bmi.n	80081e6 <_fflush_r+0x32>
 80081dc:	0599      	lsls	r1, r3, #22
 80081de:	d402      	bmi.n	80081e6 <_fflush_r+0x32>
 80081e0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80081e2:	f7fe fc8c 	bl	8006afe <__retarget_lock_acquire_recursive>
 80081e6:	4628      	mov	r0, r5
 80081e8:	4621      	mov	r1, r4
 80081ea:	f7ff ff5f 	bl	80080ac <__sflush_r>
 80081ee:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80081f0:	07da      	lsls	r2, r3, #31
 80081f2:	4605      	mov	r5, r0
 80081f4:	d4e4      	bmi.n	80081c0 <_fflush_r+0xc>
 80081f6:	89a3      	ldrh	r3, [r4, #12]
 80081f8:	059b      	lsls	r3, r3, #22
 80081fa:	d4e1      	bmi.n	80081c0 <_fflush_r+0xc>
 80081fc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80081fe:	f7fe fc7f 	bl	8006b00 <__retarget_lock_release_recursive>
 8008202:	e7dd      	b.n	80081c0 <_fflush_r+0xc>

08008204 <_sbrk_r>:
 8008204:	b538      	push	{r3, r4, r5, lr}
 8008206:	4d06      	ldr	r5, [pc, #24]	@ (8008220 <_sbrk_r+0x1c>)
 8008208:	2300      	movs	r3, #0
 800820a:	4604      	mov	r4, r0
 800820c:	4608      	mov	r0, r1
 800820e:	602b      	str	r3, [r5, #0]
 8008210:	f7fa f8da 	bl	80023c8 <_sbrk>
 8008214:	1c43      	adds	r3, r0, #1
 8008216:	d102      	bne.n	800821e <_sbrk_r+0x1a>
 8008218:	682b      	ldr	r3, [r5, #0]
 800821a:	b103      	cbz	r3, 800821e <_sbrk_r+0x1a>
 800821c:	6023      	str	r3, [r4, #0]
 800821e:	bd38      	pop	{r3, r4, r5, pc}
 8008220:	20000508 	.word	0x20000508

08008224 <memcpy>:
 8008224:	440a      	add	r2, r1
 8008226:	4291      	cmp	r1, r2
 8008228:	f100 33ff 	add.w	r3, r0, #4294967295
 800822c:	d100      	bne.n	8008230 <memcpy+0xc>
 800822e:	4770      	bx	lr
 8008230:	b510      	push	{r4, lr}
 8008232:	f811 4b01 	ldrb.w	r4, [r1], #1
 8008236:	f803 4f01 	strb.w	r4, [r3, #1]!
 800823a:	4291      	cmp	r1, r2
 800823c:	d1f9      	bne.n	8008232 <memcpy+0xe>
 800823e:	bd10      	pop	{r4, pc}

08008240 <__assert_func>:
 8008240:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8008242:	4614      	mov	r4, r2
 8008244:	461a      	mov	r2, r3
 8008246:	4b09      	ldr	r3, [pc, #36]	@ (800826c <__assert_func+0x2c>)
 8008248:	681b      	ldr	r3, [r3, #0]
 800824a:	4605      	mov	r5, r0
 800824c:	68d8      	ldr	r0, [r3, #12]
 800824e:	b14c      	cbz	r4, 8008264 <__assert_func+0x24>
 8008250:	4b07      	ldr	r3, [pc, #28]	@ (8008270 <__assert_func+0x30>)
 8008252:	9100      	str	r1, [sp, #0]
 8008254:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8008258:	4906      	ldr	r1, [pc, #24]	@ (8008274 <__assert_func+0x34>)
 800825a:	462b      	mov	r3, r5
 800825c:	f000 f842 	bl	80082e4 <fiprintf>
 8008260:	f000 f852 	bl	8008308 <abort>
 8008264:	4b04      	ldr	r3, [pc, #16]	@ (8008278 <__assert_func+0x38>)
 8008266:	461c      	mov	r4, r3
 8008268:	e7f3      	b.n	8008252 <__assert_func+0x12>
 800826a:	bf00      	nop
 800826c:	20000020 	.word	0x20000020
 8008270:	08008c14 	.word	0x08008c14
 8008274:	08008c21 	.word	0x08008c21
 8008278:	08008c4f 	.word	0x08008c4f

0800827c <_calloc_r>:
 800827c:	b570      	push	{r4, r5, r6, lr}
 800827e:	fba1 5402 	umull	r5, r4, r1, r2
 8008282:	b934      	cbnz	r4, 8008292 <_calloc_r+0x16>
 8008284:	4629      	mov	r1, r5
 8008286:	f7ff fb0b 	bl	80078a0 <_malloc_r>
 800828a:	4606      	mov	r6, r0
 800828c:	b928      	cbnz	r0, 800829a <_calloc_r+0x1e>
 800828e:	4630      	mov	r0, r6
 8008290:	bd70      	pop	{r4, r5, r6, pc}
 8008292:	220c      	movs	r2, #12
 8008294:	6002      	str	r2, [r0, #0]
 8008296:	2600      	movs	r6, #0
 8008298:	e7f9      	b.n	800828e <_calloc_r+0x12>
 800829a:	462a      	mov	r2, r5
 800829c:	4621      	mov	r1, r4
 800829e:	f7fe fbb0 	bl	8006a02 <memset>
 80082a2:	e7f4      	b.n	800828e <_calloc_r+0x12>

080082a4 <__ascii_mbtowc>:
 80082a4:	b082      	sub	sp, #8
 80082a6:	b901      	cbnz	r1, 80082aa <__ascii_mbtowc+0x6>
 80082a8:	a901      	add	r1, sp, #4
 80082aa:	b142      	cbz	r2, 80082be <__ascii_mbtowc+0x1a>
 80082ac:	b14b      	cbz	r3, 80082c2 <__ascii_mbtowc+0x1e>
 80082ae:	7813      	ldrb	r3, [r2, #0]
 80082b0:	600b      	str	r3, [r1, #0]
 80082b2:	7812      	ldrb	r2, [r2, #0]
 80082b4:	1e10      	subs	r0, r2, #0
 80082b6:	bf18      	it	ne
 80082b8:	2001      	movne	r0, #1
 80082ba:	b002      	add	sp, #8
 80082bc:	4770      	bx	lr
 80082be:	4610      	mov	r0, r2
 80082c0:	e7fb      	b.n	80082ba <__ascii_mbtowc+0x16>
 80082c2:	f06f 0001 	mvn.w	r0, #1
 80082c6:	e7f8      	b.n	80082ba <__ascii_mbtowc+0x16>

080082c8 <__ascii_wctomb>:
 80082c8:	4603      	mov	r3, r0
 80082ca:	4608      	mov	r0, r1
 80082cc:	b141      	cbz	r1, 80082e0 <__ascii_wctomb+0x18>
 80082ce:	2aff      	cmp	r2, #255	@ 0xff
 80082d0:	d904      	bls.n	80082dc <__ascii_wctomb+0x14>
 80082d2:	228a      	movs	r2, #138	@ 0x8a
 80082d4:	601a      	str	r2, [r3, #0]
 80082d6:	f04f 30ff 	mov.w	r0, #4294967295
 80082da:	4770      	bx	lr
 80082dc:	700a      	strb	r2, [r1, #0]
 80082de:	2001      	movs	r0, #1
 80082e0:	4770      	bx	lr
	...

080082e4 <fiprintf>:
 80082e4:	b40e      	push	{r1, r2, r3}
 80082e6:	b503      	push	{r0, r1, lr}
 80082e8:	4601      	mov	r1, r0
 80082ea:	ab03      	add	r3, sp, #12
 80082ec:	4805      	ldr	r0, [pc, #20]	@ (8008304 <fiprintf+0x20>)
 80082ee:	f853 2b04 	ldr.w	r2, [r3], #4
 80082f2:	6800      	ldr	r0, [r0, #0]
 80082f4:	9301      	str	r3, [sp, #4]
 80082f6:	f000 f837 	bl	8008368 <_vfiprintf_r>
 80082fa:	b002      	add	sp, #8
 80082fc:	f85d eb04 	ldr.w	lr, [sp], #4
 8008300:	b003      	add	sp, #12
 8008302:	4770      	bx	lr
 8008304:	20000020 	.word	0x20000020

08008308 <abort>:
 8008308:	b508      	push	{r3, lr}
 800830a:	2006      	movs	r0, #6
 800830c:	f000 fa00 	bl	8008710 <raise>
 8008310:	2001      	movs	r0, #1
 8008312:	f7f9 ffe1 	bl	80022d8 <_exit>

08008316 <__sfputc_r>:
 8008316:	6893      	ldr	r3, [r2, #8]
 8008318:	3b01      	subs	r3, #1
 800831a:	2b00      	cmp	r3, #0
 800831c:	b410      	push	{r4}
 800831e:	6093      	str	r3, [r2, #8]
 8008320:	da08      	bge.n	8008334 <__sfputc_r+0x1e>
 8008322:	6994      	ldr	r4, [r2, #24]
 8008324:	42a3      	cmp	r3, r4
 8008326:	db01      	blt.n	800832c <__sfputc_r+0x16>
 8008328:	290a      	cmp	r1, #10
 800832a:	d103      	bne.n	8008334 <__sfputc_r+0x1e>
 800832c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008330:	f000 b932 	b.w	8008598 <__swbuf_r>
 8008334:	6813      	ldr	r3, [r2, #0]
 8008336:	1c58      	adds	r0, r3, #1
 8008338:	6010      	str	r0, [r2, #0]
 800833a:	7019      	strb	r1, [r3, #0]
 800833c:	4608      	mov	r0, r1
 800833e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008342:	4770      	bx	lr

08008344 <__sfputs_r>:
 8008344:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008346:	4606      	mov	r6, r0
 8008348:	460f      	mov	r7, r1
 800834a:	4614      	mov	r4, r2
 800834c:	18d5      	adds	r5, r2, r3
 800834e:	42ac      	cmp	r4, r5
 8008350:	d101      	bne.n	8008356 <__sfputs_r+0x12>
 8008352:	2000      	movs	r0, #0
 8008354:	e007      	b.n	8008366 <__sfputs_r+0x22>
 8008356:	f814 1b01 	ldrb.w	r1, [r4], #1
 800835a:	463a      	mov	r2, r7
 800835c:	4630      	mov	r0, r6
 800835e:	f7ff ffda 	bl	8008316 <__sfputc_r>
 8008362:	1c43      	adds	r3, r0, #1
 8008364:	d1f3      	bne.n	800834e <__sfputs_r+0xa>
 8008366:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08008368 <_vfiprintf_r>:
 8008368:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800836c:	460d      	mov	r5, r1
 800836e:	b09d      	sub	sp, #116	@ 0x74
 8008370:	4614      	mov	r4, r2
 8008372:	4698      	mov	r8, r3
 8008374:	4606      	mov	r6, r0
 8008376:	b118      	cbz	r0, 8008380 <_vfiprintf_r+0x18>
 8008378:	6a03      	ldr	r3, [r0, #32]
 800837a:	b90b      	cbnz	r3, 8008380 <_vfiprintf_r+0x18>
 800837c:	f7fe fac8 	bl	8006910 <__sinit>
 8008380:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8008382:	07d9      	lsls	r1, r3, #31
 8008384:	d405      	bmi.n	8008392 <_vfiprintf_r+0x2a>
 8008386:	89ab      	ldrh	r3, [r5, #12]
 8008388:	059a      	lsls	r2, r3, #22
 800838a:	d402      	bmi.n	8008392 <_vfiprintf_r+0x2a>
 800838c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800838e:	f7fe fbb6 	bl	8006afe <__retarget_lock_acquire_recursive>
 8008392:	89ab      	ldrh	r3, [r5, #12]
 8008394:	071b      	lsls	r3, r3, #28
 8008396:	d501      	bpl.n	800839c <_vfiprintf_r+0x34>
 8008398:	692b      	ldr	r3, [r5, #16]
 800839a:	b99b      	cbnz	r3, 80083c4 <_vfiprintf_r+0x5c>
 800839c:	4629      	mov	r1, r5
 800839e:	4630      	mov	r0, r6
 80083a0:	f000 f938 	bl	8008614 <__swsetup_r>
 80083a4:	b170      	cbz	r0, 80083c4 <_vfiprintf_r+0x5c>
 80083a6:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80083a8:	07dc      	lsls	r4, r3, #31
 80083aa:	d504      	bpl.n	80083b6 <_vfiprintf_r+0x4e>
 80083ac:	f04f 30ff 	mov.w	r0, #4294967295
 80083b0:	b01d      	add	sp, #116	@ 0x74
 80083b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80083b6:	89ab      	ldrh	r3, [r5, #12]
 80083b8:	0598      	lsls	r0, r3, #22
 80083ba:	d4f7      	bmi.n	80083ac <_vfiprintf_r+0x44>
 80083bc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80083be:	f7fe fb9f 	bl	8006b00 <__retarget_lock_release_recursive>
 80083c2:	e7f3      	b.n	80083ac <_vfiprintf_r+0x44>
 80083c4:	2300      	movs	r3, #0
 80083c6:	9309      	str	r3, [sp, #36]	@ 0x24
 80083c8:	2320      	movs	r3, #32
 80083ca:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80083ce:	f8cd 800c 	str.w	r8, [sp, #12]
 80083d2:	2330      	movs	r3, #48	@ 0x30
 80083d4:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8008584 <_vfiprintf_r+0x21c>
 80083d8:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80083dc:	f04f 0901 	mov.w	r9, #1
 80083e0:	4623      	mov	r3, r4
 80083e2:	469a      	mov	sl, r3
 80083e4:	f813 2b01 	ldrb.w	r2, [r3], #1
 80083e8:	b10a      	cbz	r2, 80083ee <_vfiprintf_r+0x86>
 80083ea:	2a25      	cmp	r2, #37	@ 0x25
 80083ec:	d1f9      	bne.n	80083e2 <_vfiprintf_r+0x7a>
 80083ee:	ebba 0b04 	subs.w	fp, sl, r4
 80083f2:	d00b      	beq.n	800840c <_vfiprintf_r+0xa4>
 80083f4:	465b      	mov	r3, fp
 80083f6:	4622      	mov	r2, r4
 80083f8:	4629      	mov	r1, r5
 80083fa:	4630      	mov	r0, r6
 80083fc:	f7ff ffa2 	bl	8008344 <__sfputs_r>
 8008400:	3001      	adds	r0, #1
 8008402:	f000 80a7 	beq.w	8008554 <_vfiprintf_r+0x1ec>
 8008406:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8008408:	445a      	add	r2, fp
 800840a:	9209      	str	r2, [sp, #36]	@ 0x24
 800840c:	f89a 3000 	ldrb.w	r3, [sl]
 8008410:	2b00      	cmp	r3, #0
 8008412:	f000 809f 	beq.w	8008554 <_vfiprintf_r+0x1ec>
 8008416:	2300      	movs	r3, #0
 8008418:	f04f 32ff 	mov.w	r2, #4294967295
 800841c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8008420:	f10a 0a01 	add.w	sl, sl, #1
 8008424:	9304      	str	r3, [sp, #16]
 8008426:	9307      	str	r3, [sp, #28]
 8008428:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800842c:	931a      	str	r3, [sp, #104]	@ 0x68
 800842e:	4654      	mov	r4, sl
 8008430:	2205      	movs	r2, #5
 8008432:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008436:	4853      	ldr	r0, [pc, #332]	@ (8008584 <_vfiprintf_r+0x21c>)
 8008438:	f7f7 feea 	bl	8000210 <memchr>
 800843c:	9a04      	ldr	r2, [sp, #16]
 800843e:	b9d8      	cbnz	r0, 8008478 <_vfiprintf_r+0x110>
 8008440:	06d1      	lsls	r1, r2, #27
 8008442:	bf44      	itt	mi
 8008444:	2320      	movmi	r3, #32
 8008446:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800844a:	0713      	lsls	r3, r2, #28
 800844c:	bf44      	itt	mi
 800844e:	232b      	movmi	r3, #43	@ 0x2b
 8008450:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8008454:	f89a 3000 	ldrb.w	r3, [sl]
 8008458:	2b2a      	cmp	r3, #42	@ 0x2a
 800845a:	d015      	beq.n	8008488 <_vfiprintf_r+0x120>
 800845c:	9a07      	ldr	r2, [sp, #28]
 800845e:	4654      	mov	r4, sl
 8008460:	2000      	movs	r0, #0
 8008462:	f04f 0c0a 	mov.w	ip, #10
 8008466:	4621      	mov	r1, r4
 8008468:	f811 3b01 	ldrb.w	r3, [r1], #1
 800846c:	3b30      	subs	r3, #48	@ 0x30
 800846e:	2b09      	cmp	r3, #9
 8008470:	d94b      	bls.n	800850a <_vfiprintf_r+0x1a2>
 8008472:	b1b0      	cbz	r0, 80084a2 <_vfiprintf_r+0x13a>
 8008474:	9207      	str	r2, [sp, #28]
 8008476:	e014      	b.n	80084a2 <_vfiprintf_r+0x13a>
 8008478:	eba0 0308 	sub.w	r3, r0, r8
 800847c:	fa09 f303 	lsl.w	r3, r9, r3
 8008480:	4313      	orrs	r3, r2
 8008482:	9304      	str	r3, [sp, #16]
 8008484:	46a2      	mov	sl, r4
 8008486:	e7d2      	b.n	800842e <_vfiprintf_r+0xc6>
 8008488:	9b03      	ldr	r3, [sp, #12]
 800848a:	1d19      	adds	r1, r3, #4
 800848c:	681b      	ldr	r3, [r3, #0]
 800848e:	9103      	str	r1, [sp, #12]
 8008490:	2b00      	cmp	r3, #0
 8008492:	bfbb      	ittet	lt
 8008494:	425b      	neglt	r3, r3
 8008496:	f042 0202 	orrlt.w	r2, r2, #2
 800849a:	9307      	strge	r3, [sp, #28]
 800849c:	9307      	strlt	r3, [sp, #28]
 800849e:	bfb8      	it	lt
 80084a0:	9204      	strlt	r2, [sp, #16]
 80084a2:	7823      	ldrb	r3, [r4, #0]
 80084a4:	2b2e      	cmp	r3, #46	@ 0x2e
 80084a6:	d10a      	bne.n	80084be <_vfiprintf_r+0x156>
 80084a8:	7863      	ldrb	r3, [r4, #1]
 80084aa:	2b2a      	cmp	r3, #42	@ 0x2a
 80084ac:	d132      	bne.n	8008514 <_vfiprintf_r+0x1ac>
 80084ae:	9b03      	ldr	r3, [sp, #12]
 80084b0:	1d1a      	adds	r2, r3, #4
 80084b2:	681b      	ldr	r3, [r3, #0]
 80084b4:	9203      	str	r2, [sp, #12]
 80084b6:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80084ba:	3402      	adds	r4, #2
 80084bc:	9305      	str	r3, [sp, #20]
 80084be:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8008594 <_vfiprintf_r+0x22c>
 80084c2:	7821      	ldrb	r1, [r4, #0]
 80084c4:	2203      	movs	r2, #3
 80084c6:	4650      	mov	r0, sl
 80084c8:	f7f7 fea2 	bl	8000210 <memchr>
 80084cc:	b138      	cbz	r0, 80084de <_vfiprintf_r+0x176>
 80084ce:	9b04      	ldr	r3, [sp, #16]
 80084d0:	eba0 000a 	sub.w	r0, r0, sl
 80084d4:	2240      	movs	r2, #64	@ 0x40
 80084d6:	4082      	lsls	r2, r0
 80084d8:	4313      	orrs	r3, r2
 80084da:	3401      	adds	r4, #1
 80084dc:	9304      	str	r3, [sp, #16]
 80084de:	f814 1b01 	ldrb.w	r1, [r4], #1
 80084e2:	4829      	ldr	r0, [pc, #164]	@ (8008588 <_vfiprintf_r+0x220>)
 80084e4:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80084e8:	2206      	movs	r2, #6
 80084ea:	f7f7 fe91 	bl	8000210 <memchr>
 80084ee:	2800      	cmp	r0, #0
 80084f0:	d03f      	beq.n	8008572 <_vfiprintf_r+0x20a>
 80084f2:	4b26      	ldr	r3, [pc, #152]	@ (800858c <_vfiprintf_r+0x224>)
 80084f4:	bb1b      	cbnz	r3, 800853e <_vfiprintf_r+0x1d6>
 80084f6:	9b03      	ldr	r3, [sp, #12]
 80084f8:	3307      	adds	r3, #7
 80084fa:	f023 0307 	bic.w	r3, r3, #7
 80084fe:	3308      	adds	r3, #8
 8008500:	9303      	str	r3, [sp, #12]
 8008502:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008504:	443b      	add	r3, r7
 8008506:	9309      	str	r3, [sp, #36]	@ 0x24
 8008508:	e76a      	b.n	80083e0 <_vfiprintf_r+0x78>
 800850a:	fb0c 3202 	mla	r2, ip, r2, r3
 800850e:	460c      	mov	r4, r1
 8008510:	2001      	movs	r0, #1
 8008512:	e7a8      	b.n	8008466 <_vfiprintf_r+0xfe>
 8008514:	2300      	movs	r3, #0
 8008516:	3401      	adds	r4, #1
 8008518:	9305      	str	r3, [sp, #20]
 800851a:	4619      	mov	r1, r3
 800851c:	f04f 0c0a 	mov.w	ip, #10
 8008520:	4620      	mov	r0, r4
 8008522:	f810 2b01 	ldrb.w	r2, [r0], #1
 8008526:	3a30      	subs	r2, #48	@ 0x30
 8008528:	2a09      	cmp	r2, #9
 800852a:	d903      	bls.n	8008534 <_vfiprintf_r+0x1cc>
 800852c:	2b00      	cmp	r3, #0
 800852e:	d0c6      	beq.n	80084be <_vfiprintf_r+0x156>
 8008530:	9105      	str	r1, [sp, #20]
 8008532:	e7c4      	b.n	80084be <_vfiprintf_r+0x156>
 8008534:	fb0c 2101 	mla	r1, ip, r1, r2
 8008538:	4604      	mov	r4, r0
 800853a:	2301      	movs	r3, #1
 800853c:	e7f0      	b.n	8008520 <_vfiprintf_r+0x1b8>
 800853e:	ab03      	add	r3, sp, #12
 8008540:	9300      	str	r3, [sp, #0]
 8008542:	462a      	mov	r2, r5
 8008544:	4b12      	ldr	r3, [pc, #72]	@ (8008590 <_vfiprintf_r+0x228>)
 8008546:	a904      	add	r1, sp, #16
 8008548:	4630      	mov	r0, r6
 800854a:	f7fd fd9f 	bl	800608c <_printf_float>
 800854e:	4607      	mov	r7, r0
 8008550:	1c78      	adds	r0, r7, #1
 8008552:	d1d6      	bne.n	8008502 <_vfiprintf_r+0x19a>
 8008554:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8008556:	07d9      	lsls	r1, r3, #31
 8008558:	d405      	bmi.n	8008566 <_vfiprintf_r+0x1fe>
 800855a:	89ab      	ldrh	r3, [r5, #12]
 800855c:	059a      	lsls	r2, r3, #22
 800855e:	d402      	bmi.n	8008566 <_vfiprintf_r+0x1fe>
 8008560:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8008562:	f7fe facd 	bl	8006b00 <__retarget_lock_release_recursive>
 8008566:	89ab      	ldrh	r3, [r5, #12]
 8008568:	065b      	lsls	r3, r3, #25
 800856a:	f53f af1f 	bmi.w	80083ac <_vfiprintf_r+0x44>
 800856e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8008570:	e71e      	b.n	80083b0 <_vfiprintf_r+0x48>
 8008572:	ab03      	add	r3, sp, #12
 8008574:	9300      	str	r3, [sp, #0]
 8008576:	462a      	mov	r2, r5
 8008578:	4b05      	ldr	r3, [pc, #20]	@ (8008590 <_vfiprintf_r+0x228>)
 800857a:	a904      	add	r1, sp, #16
 800857c:	4630      	mov	r0, r6
 800857e:	f7fe f81d 	bl	80065bc <_printf_i>
 8008582:	e7e4      	b.n	800854e <_vfiprintf_r+0x1e6>
 8008584:	08008c50 	.word	0x08008c50
 8008588:	08008c5a 	.word	0x08008c5a
 800858c:	0800608d 	.word	0x0800608d
 8008590:	08008345 	.word	0x08008345
 8008594:	08008c56 	.word	0x08008c56

08008598 <__swbuf_r>:
 8008598:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800859a:	460e      	mov	r6, r1
 800859c:	4614      	mov	r4, r2
 800859e:	4605      	mov	r5, r0
 80085a0:	b118      	cbz	r0, 80085aa <__swbuf_r+0x12>
 80085a2:	6a03      	ldr	r3, [r0, #32]
 80085a4:	b90b      	cbnz	r3, 80085aa <__swbuf_r+0x12>
 80085a6:	f7fe f9b3 	bl	8006910 <__sinit>
 80085aa:	69a3      	ldr	r3, [r4, #24]
 80085ac:	60a3      	str	r3, [r4, #8]
 80085ae:	89a3      	ldrh	r3, [r4, #12]
 80085b0:	071a      	lsls	r2, r3, #28
 80085b2:	d501      	bpl.n	80085b8 <__swbuf_r+0x20>
 80085b4:	6923      	ldr	r3, [r4, #16]
 80085b6:	b943      	cbnz	r3, 80085ca <__swbuf_r+0x32>
 80085b8:	4621      	mov	r1, r4
 80085ba:	4628      	mov	r0, r5
 80085bc:	f000 f82a 	bl	8008614 <__swsetup_r>
 80085c0:	b118      	cbz	r0, 80085ca <__swbuf_r+0x32>
 80085c2:	f04f 37ff 	mov.w	r7, #4294967295
 80085c6:	4638      	mov	r0, r7
 80085c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80085ca:	6823      	ldr	r3, [r4, #0]
 80085cc:	6922      	ldr	r2, [r4, #16]
 80085ce:	1a98      	subs	r0, r3, r2
 80085d0:	6963      	ldr	r3, [r4, #20]
 80085d2:	b2f6      	uxtb	r6, r6
 80085d4:	4283      	cmp	r3, r0
 80085d6:	4637      	mov	r7, r6
 80085d8:	dc05      	bgt.n	80085e6 <__swbuf_r+0x4e>
 80085da:	4621      	mov	r1, r4
 80085dc:	4628      	mov	r0, r5
 80085de:	f7ff fde9 	bl	80081b4 <_fflush_r>
 80085e2:	2800      	cmp	r0, #0
 80085e4:	d1ed      	bne.n	80085c2 <__swbuf_r+0x2a>
 80085e6:	68a3      	ldr	r3, [r4, #8]
 80085e8:	3b01      	subs	r3, #1
 80085ea:	60a3      	str	r3, [r4, #8]
 80085ec:	6823      	ldr	r3, [r4, #0]
 80085ee:	1c5a      	adds	r2, r3, #1
 80085f0:	6022      	str	r2, [r4, #0]
 80085f2:	701e      	strb	r6, [r3, #0]
 80085f4:	6962      	ldr	r2, [r4, #20]
 80085f6:	1c43      	adds	r3, r0, #1
 80085f8:	429a      	cmp	r2, r3
 80085fa:	d004      	beq.n	8008606 <__swbuf_r+0x6e>
 80085fc:	89a3      	ldrh	r3, [r4, #12]
 80085fe:	07db      	lsls	r3, r3, #31
 8008600:	d5e1      	bpl.n	80085c6 <__swbuf_r+0x2e>
 8008602:	2e0a      	cmp	r6, #10
 8008604:	d1df      	bne.n	80085c6 <__swbuf_r+0x2e>
 8008606:	4621      	mov	r1, r4
 8008608:	4628      	mov	r0, r5
 800860a:	f7ff fdd3 	bl	80081b4 <_fflush_r>
 800860e:	2800      	cmp	r0, #0
 8008610:	d0d9      	beq.n	80085c6 <__swbuf_r+0x2e>
 8008612:	e7d6      	b.n	80085c2 <__swbuf_r+0x2a>

08008614 <__swsetup_r>:
 8008614:	b538      	push	{r3, r4, r5, lr}
 8008616:	4b29      	ldr	r3, [pc, #164]	@ (80086bc <__swsetup_r+0xa8>)
 8008618:	4605      	mov	r5, r0
 800861a:	6818      	ldr	r0, [r3, #0]
 800861c:	460c      	mov	r4, r1
 800861e:	b118      	cbz	r0, 8008628 <__swsetup_r+0x14>
 8008620:	6a03      	ldr	r3, [r0, #32]
 8008622:	b90b      	cbnz	r3, 8008628 <__swsetup_r+0x14>
 8008624:	f7fe f974 	bl	8006910 <__sinit>
 8008628:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800862c:	0719      	lsls	r1, r3, #28
 800862e:	d422      	bmi.n	8008676 <__swsetup_r+0x62>
 8008630:	06da      	lsls	r2, r3, #27
 8008632:	d407      	bmi.n	8008644 <__swsetup_r+0x30>
 8008634:	2209      	movs	r2, #9
 8008636:	602a      	str	r2, [r5, #0]
 8008638:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800863c:	81a3      	strh	r3, [r4, #12]
 800863e:	f04f 30ff 	mov.w	r0, #4294967295
 8008642:	e033      	b.n	80086ac <__swsetup_r+0x98>
 8008644:	0758      	lsls	r0, r3, #29
 8008646:	d512      	bpl.n	800866e <__swsetup_r+0x5a>
 8008648:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800864a:	b141      	cbz	r1, 800865e <__swsetup_r+0x4a>
 800864c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8008650:	4299      	cmp	r1, r3
 8008652:	d002      	beq.n	800865a <__swsetup_r+0x46>
 8008654:	4628      	mov	r0, r5
 8008656:	f7ff f8af 	bl	80077b8 <_free_r>
 800865a:	2300      	movs	r3, #0
 800865c:	6363      	str	r3, [r4, #52]	@ 0x34
 800865e:	89a3      	ldrh	r3, [r4, #12]
 8008660:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8008664:	81a3      	strh	r3, [r4, #12]
 8008666:	2300      	movs	r3, #0
 8008668:	6063      	str	r3, [r4, #4]
 800866a:	6923      	ldr	r3, [r4, #16]
 800866c:	6023      	str	r3, [r4, #0]
 800866e:	89a3      	ldrh	r3, [r4, #12]
 8008670:	f043 0308 	orr.w	r3, r3, #8
 8008674:	81a3      	strh	r3, [r4, #12]
 8008676:	6923      	ldr	r3, [r4, #16]
 8008678:	b94b      	cbnz	r3, 800868e <__swsetup_r+0x7a>
 800867a:	89a3      	ldrh	r3, [r4, #12]
 800867c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8008680:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8008684:	d003      	beq.n	800868e <__swsetup_r+0x7a>
 8008686:	4621      	mov	r1, r4
 8008688:	4628      	mov	r0, r5
 800868a:	f000 f883 	bl	8008794 <__smakebuf_r>
 800868e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008692:	f013 0201 	ands.w	r2, r3, #1
 8008696:	d00a      	beq.n	80086ae <__swsetup_r+0x9a>
 8008698:	2200      	movs	r2, #0
 800869a:	60a2      	str	r2, [r4, #8]
 800869c:	6962      	ldr	r2, [r4, #20]
 800869e:	4252      	negs	r2, r2
 80086a0:	61a2      	str	r2, [r4, #24]
 80086a2:	6922      	ldr	r2, [r4, #16]
 80086a4:	b942      	cbnz	r2, 80086b8 <__swsetup_r+0xa4>
 80086a6:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80086aa:	d1c5      	bne.n	8008638 <__swsetup_r+0x24>
 80086ac:	bd38      	pop	{r3, r4, r5, pc}
 80086ae:	0799      	lsls	r1, r3, #30
 80086b0:	bf58      	it	pl
 80086b2:	6962      	ldrpl	r2, [r4, #20]
 80086b4:	60a2      	str	r2, [r4, #8]
 80086b6:	e7f4      	b.n	80086a2 <__swsetup_r+0x8e>
 80086b8:	2000      	movs	r0, #0
 80086ba:	e7f7      	b.n	80086ac <__swsetup_r+0x98>
 80086bc:	20000020 	.word	0x20000020

080086c0 <_raise_r>:
 80086c0:	291f      	cmp	r1, #31
 80086c2:	b538      	push	{r3, r4, r5, lr}
 80086c4:	4605      	mov	r5, r0
 80086c6:	460c      	mov	r4, r1
 80086c8:	d904      	bls.n	80086d4 <_raise_r+0x14>
 80086ca:	2316      	movs	r3, #22
 80086cc:	6003      	str	r3, [r0, #0]
 80086ce:	f04f 30ff 	mov.w	r0, #4294967295
 80086d2:	bd38      	pop	{r3, r4, r5, pc}
 80086d4:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80086d6:	b112      	cbz	r2, 80086de <_raise_r+0x1e>
 80086d8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80086dc:	b94b      	cbnz	r3, 80086f2 <_raise_r+0x32>
 80086de:	4628      	mov	r0, r5
 80086e0:	f000 f830 	bl	8008744 <_getpid_r>
 80086e4:	4622      	mov	r2, r4
 80086e6:	4601      	mov	r1, r0
 80086e8:	4628      	mov	r0, r5
 80086ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80086ee:	f000 b817 	b.w	8008720 <_kill_r>
 80086f2:	2b01      	cmp	r3, #1
 80086f4:	d00a      	beq.n	800870c <_raise_r+0x4c>
 80086f6:	1c59      	adds	r1, r3, #1
 80086f8:	d103      	bne.n	8008702 <_raise_r+0x42>
 80086fa:	2316      	movs	r3, #22
 80086fc:	6003      	str	r3, [r0, #0]
 80086fe:	2001      	movs	r0, #1
 8008700:	e7e7      	b.n	80086d2 <_raise_r+0x12>
 8008702:	2100      	movs	r1, #0
 8008704:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8008708:	4620      	mov	r0, r4
 800870a:	4798      	blx	r3
 800870c:	2000      	movs	r0, #0
 800870e:	e7e0      	b.n	80086d2 <_raise_r+0x12>

08008710 <raise>:
 8008710:	4b02      	ldr	r3, [pc, #8]	@ (800871c <raise+0xc>)
 8008712:	4601      	mov	r1, r0
 8008714:	6818      	ldr	r0, [r3, #0]
 8008716:	f7ff bfd3 	b.w	80086c0 <_raise_r>
 800871a:	bf00      	nop
 800871c:	20000020 	.word	0x20000020

08008720 <_kill_r>:
 8008720:	b538      	push	{r3, r4, r5, lr}
 8008722:	4d07      	ldr	r5, [pc, #28]	@ (8008740 <_kill_r+0x20>)
 8008724:	2300      	movs	r3, #0
 8008726:	4604      	mov	r4, r0
 8008728:	4608      	mov	r0, r1
 800872a:	4611      	mov	r1, r2
 800872c:	602b      	str	r3, [r5, #0]
 800872e:	f7f9 fdc3 	bl	80022b8 <_kill>
 8008732:	1c43      	adds	r3, r0, #1
 8008734:	d102      	bne.n	800873c <_kill_r+0x1c>
 8008736:	682b      	ldr	r3, [r5, #0]
 8008738:	b103      	cbz	r3, 800873c <_kill_r+0x1c>
 800873a:	6023      	str	r3, [r4, #0]
 800873c:	bd38      	pop	{r3, r4, r5, pc}
 800873e:	bf00      	nop
 8008740:	20000508 	.word	0x20000508

08008744 <_getpid_r>:
 8008744:	f7f9 bdb0 	b.w	80022a8 <_getpid>

08008748 <__swhatbuf_r>:
 8008748:	b570      	push	{r4, r5, r6, lr}
 800874a:	460c      	mov	r4, r1
 800874c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008750:	2900      	cmp	r1, #0
 8008752:	b096      	sub	sp, #88	@ 0x58
 8008754:	4615      	mov	r5, r2
 8008756:	461e      	mov	r6, r3
 8008758:	da0d      	bge.n	8008776 <__swhatbuf_r+0x2e>
 800875a:	89a3      	ldrh	r3, [r4, #12]
 800875c:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8008760:	f04f 0100 	mov.w	r1, #0
 8008764:	bf14      	ite	ne
 8008766:	2340      	movne	r3, #64	@ 0x40
 8008768:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800876c:	2000      	movs	r0, #0
 800876e:	6031      	str	r1, [r6, #0]
 8008770:	602b      	str	r3, [r5, #0]
 8008772:	b016      	add	sp, #88	@ 0x58
 8008774:	bd70      	pop	{r4, r5, r6, pc}
 8008776:	466a      	mov	r2, sp
 8008778:	f000 f848 	bl	800880c <_fstat_r>
 800877c:	2800      	cmp	r0, #0
 800877e:	dbec      	blt.n	800875a <__swhatbuf_r+0x12>
 8008780:	9901      	ldr	r1, [sp, #4]
 8008782:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8008786:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800878a:	4259      	negs	r1, r3
 800878c:	4159      	adcs	r1, r3
 800878e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8008792:	e7eb      	b.n	800876c <__swhatbuf_r+0x24>

08008794 <__smakebuf_r>:
 8008794:	898b      	ldrh	r3, [r1, #12]
 8008796:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008798:	079d      	lsls	r5, r3, #30
 800879a:	4606      	mov	r6, r0
 800879c:	460c      	mov	r4, r1
 800879e:	d507      	bpl.n	80087b0 <__smakebuf_r+0x1c>
 80087a0:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80087a4:	6023      	str	r3, [r4, #0]
 80087a6:	6123      	str	r3, [r4, #16]
 80087a8:	2301      	movs	r3, #1
 80087aa:	6163      	str	r3, [r4, #20]
 80087ac:	b003      	add	sp, #12
 80087ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80087b0:	ab01      	add	r3, sp, #4
 80087b2:	466a      	mov	r2, sp
 80087b4:	f7ff ffc8 	bl	8008748 <__swhatbuf_r>
 80087b8:	9f00      	ldr	r7, [sp, #0]
 80087ba:	4605      	mov	r5, r0
 80087bc:	4639      	mov	r1, r7
 80087be:	4630      	mov	r0, r6
 80087c0:	f7ff f86e 	bl	80078a0 <_malloc_r>
 80087c4:	b948      	cbnz	r0, 80087da <__smakebuf_r+0x46>
 80087c6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80087ca:	059a      	lsls	r2, r3, #22
 80087cc:	d4ee      	bmi.n	80087ac <__smakebuf_r+0x18>
 80087ce:	f023 0303 	bic.w	r3, r3, #3
 80087d2:	f043 0302 	orr.w	r3, r3, #2
 80087d6:	81a3      	strh	r3, [r4, #12]
 80087d8:	e7e2      	b.n	80087a0 <__smakebuf_r+0xc>
 80087da:	89a3      	ldrh	r3, [r4, #12]
 80087dc:	6020      	str	r0, [r4, #0]
 80087de:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80087e2:	81a3      	strh	r3, [r4, #12]
 80087e4:	9b01      	ldr	r3, [sp, #4]
 80087e6:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80087ea:	b15b      	cbz	r3, 8008804 <__smakebuf_r+0x70>
 80087ec:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80087f0:	4630      	mov	r0, r6
 80087f2:	f000 f81d 	bl	8008830 <_isatty_r>
 80087f6:	b128      	cbz	r0, 8008804 <__smakebuf_r+0x70>
 80087f8:	89a3      	ldrh	r3, [r4, #12]
 80087fa:	f023 0303 	bic.w	r3, r3, #3
 80087fe:	f043 0301 	orr.w	r3, r3, #1
 8008802:	81a3      	strh	r3, [r4, #12]
 8008804:	89a3      	ldrh	r3, [r4, #12]
 8008806:	431d      	orrs	r5, r3
 8008808:	81a5      	strh	r5, [r4, #12]
 800880a:	e7cf      	b.n	80087ac <__smakebuf_r+0x18>

0800880c <_fstat_r>:
 800880c:	b538      	push	{r3, r4, r5, lr}
 800880e:	4d07      	ldr	r5, [pc, #28]	@ (800882c <_fstat_r+0x20>)
 8008810:	2300      	movs	r3, #0
 8008812:	4604      	mov	r4, r0
 8008814:	4608      	mov	r0, r1
 8008816:	4611      	mov	r1, r2
 8008818:	602b      	str	r3, [r5, #0]
 800881a:	f7f9 fdad 	bl	8002378 <_fstat>
 800881e:	1c43      	adds	r3, r0, #1
 8008820:	d102      	bne.n	8008828 <_fstat_r+0x1c>
 8008822:	682b      	ldr	r3, [r5, #0]
 8008824:	b103      	cbz	r3, 8008828 <_fstat_r+0x1c>
 8008826:	6023      	str	r3, [r4, #0]
 8008828:	bd38      	pop	{r3, r4, r5, pc}
 800882a:	bf00      	nop
 800882c:	20000508 	.word	0x20000508

08008830 <_isatty_r>:
 8008830:	b538      	push	{r3, r4, r5, lr}
 8008832:	4d06      	ldr	r5, [pc, #24]	@ (800884c <_isatty_r+0x1c>)
 8008834:	2300      	movs	r3, #0
 8008836:	4604      	mov	r4, r0
 8008838:	4608      	mov	r0, r1
 800883a:	602b      	str	r3, [r5, #0]
 800883c:	f7f9 fdac 	bl	8002398 <_isatty>
 8008840:	1c43      	adds	r3, r0, #1
 8008842:	d102      	bne.n	800884a <_isatty_r+0x1a>
 8008844:	682b      	ldr	r3, [r5, #0]
 8008846:	b103      	cbz	r3, 800884a <_isatty_r+0x1a>
 8008848:	6023      	str	r3, [r4, #0]
 800884a:	bd38      	pop	{r3, r4, r5, pc}
 800884c:	20000508 	.word	0x20000508

08008850 <fmod>:
 8008850:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008852:	ed2d 8b02 	vpush	{d8}
 8008856:	ec57 6b10 	vmov	r6, r7, d0
 800885a:	ec55 4b11 	vmov	r4, r5, d1
 800885e:	f000 f825 	bl	80088ac <__ieee754_fmod>
 8008862:	4622      	mov	r2, r4
 8008864:	462b      	mov	r3, r5
 8008866:	4630      	mov	r0, r6
 8008868:	4639      	mov	r1, r7
 800886a:	eeb0 8a40 	vmov.f32	s16, s0
 800886e:	eef0 8a60 	vmov.f32	s17, s1
 8008872:	f7f8 f97b 	bl	8000b6c <__aeabi_dcmpun>
 8008876:	b990      	cbnz	r0, 800889e <fmod+0x4e>
 8008878:	2200      	movs	r2, #0
 800887a:	2300      	movs	r3, #0
 800887c:	4620      	mov	r0, r4
 800887e:	4629      	mov	r1, r5
 8008880:	f7f8 f942 	bl	8000b08 <__aeabi_dcmpeq>
 8008884:	b158      	cbz	r0, 800889e <fmod+0x4e>
 8008886:	f7fe f90f 	bl	8006aa8 <__errno>
 800888a:	2321      	movs	r3, #33	@ 0x21
 800888c:	6003      	str	r3, [r0, #0]
 800888e:	2200      	movs	r2, #0
 8008890:	2300      	movs	r3, #0
 8008892:	4610      	mov	r0, r2
 8008894:	4619      	mov	r1, r3
 8008896:	f7f7 fff9 	bl	800088c <__aeabi_ddiv>
 800889a:	ec41 0b18 	vmov	d8, r0, r1
 800889e:	eeb0 0a48 	vmov.f32	s0, s16
 80088a2:	eef0 0a68 	vmov.f32	s1, s17
 80088a6:	ecbd 8b02 	vpop	{d8}
 80088aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080088ac <__ieee754_fmod>:
 80088ac:	ec53 2b11 	vmov	r2, r3, d1
 80088b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80088b4:	f023 4800 	bic.w	r8, r3, #2147483648	@ 0x80000000
 80088b8:	ea52 0408 	orrs.w	r4, r2, r8
 80088bc:	ec51 0b10 	vmov	r0, r1, d0
 80088c0:	461e      	mov	r6, r3
 80088c2:	4696      	mov	lr, r2
 80088c4:	4694      	mov	ip, r2
 80088c6:	d00c      	beq.n	80088e2 <__ieee754_fmod+0x36>
 80088c8:	4d76      	ldr	r5, [pc, #472]	@ (8008aa4 <__ieee754_fmod+0x1f8>)
 80088ca:	f021 4900 	bic.w	r9, r1, #2147483648	@ 0x80000000
 80088ce:	45a9      	cmp	r9, r5
 80088d0:	460c      	mov	r4, r1
 80088d2:	d806      	bhi.n	80088e2 <__ieee754_fmod+0x36>
 80088d4:	4255      	negs	r5, r2
 80088d6:	4f74      	ldr	r7, [pc, #464]	@ (8008aa8 <__ieee754_fmod+0x1fc>)
 80088d8:	4315      	orrs	r5, r2
 80088da:	ea48 75d5 	orr.w	r5, r8, r5, lsr #31
 80088de:	42bd      	cmp	r5, r7
 80088e0:	d909      	bls.n	80088f6 <__ieee754_fmod+0x4a>
 80088e2:	f7f7 fea9 	bl	8000638 <__aeabi_dmul>
 80088e6:	4602      	mov	r2, r0
 80088e8:	460b      	mov	r3, r1
 80088ea:	f7f7 ffcf 	bl	800088c <__aeabi_ddiv>
 80088ee:	ec41 0b10 	vmov	d0, r0, r1
 80088f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80088f6:	45c1      	cmp	r9, r8
 80088f8:	4682      	mov	sl, r0
 80088fa:	4607      	mov	r7, r0
 80088fc:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8008900:	dc09      	bgt.n	8008916 <__ieee754_fmod+0x6a>
 8008902:	dbf4      	blt.n	80088ee <__ieee754_fmod+0x42>
 8008904:	4282      	cmp	r2, r0
 8008906:	d8f2      	bhi.n	80088ee <__ieee754_fmod+0x42>
 8008908:	d105      	bne.n	8008916 <__ieee754_fmod+0x6a>
 800890a:	4b68      	ldr	r3, [pc, #416]	@ (8008aac <__ieee754_fmod+0x200>)
 800890c:	eb03 7315 	add.w	r3, r3, r5, lsr #28
 8008910:	e9d3 0100 	ldrd	r0, r1, [r3]
 8008914:	e7eb      	b.n	80088ee <__ieee754_fmod+0x42>
 8008916:	4964      	ldr	r1, [pc, #400]	@ (8008aa8 <__ieee754_fmod+0x1fc>)
 8008918:	420c      	tst	r4, r1
 800891a:	d148      	bne.n	80089ae <__ieee754_fmod+0x102>
 800891c:	f1b9 0f00 	cmp.w	r9, #0
 8008920:	d13d      	bne.n	800899e <__ieee754_fmod+0xf2>
 8008922:	4a63      	ldr	r2, [pc, #396]	@ (8008ab0 <__ieee754_fmod+0x204>)
 8008924:	4653      	mov	r3, sl
 8008926:	2b00      	cmp	r3, #0
 8008928:	dc36      	bgt.n	8008998 <__ieee754_fmod+0xec>
 800892a:	420e      	tst	r6, r1
 800892c:	d14f      	bne.n	80089ce <__ieee754_fmod+0x122>
 800892e:	f1b8 0f00 	cmp.w	r8, #0
 8008932:	d144      	bne.n	80089be <__ieee754_fmod+0x112>
 8008934:	4b5e      	ldr	r3, [pc, #376]	@ (8008ab0 <__ieee754_fmod+0x204>)
 8008936:	4671      	mov	r1, lr
 8008938:	2900      	cmp	r1, #0
 800893a:	dc3d      	bgt.n	80089b8 <__ieee754_fmod+0x10c>
 800893c:	485d      	ldr	r0, [pc, #372]	@ (8008ab4 <__ieee754_fmod+0x208>)
 800893e:	4282      	cmp	r2, r0
 8008940:	db4a      	blt.n	80089d8 <__ieee754_fmod+0x12c>
 8008942:	f3c4 0113 	ubfx	r1, r4, #0, #20
 8008946:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800894a:	485a      	ldr	r0, [pc, #360]	@ (8008ab4 <__ieee754_fmod+0x208>)
 800894c:	4283      	cmp	r3, r0
 800894e:	db57      	blt.n	8008a00 <__ieee754_fmod+0x154>
 8008950:	f3c6 0613 	ubfx	r6, r6, #0, #20
 8008954:	f446 1680 	orr.w	r6, r6, #1048576	@ 0x100000
 8008958:	1ad0      	subs	r0, r2, r3
 800895a:	1b8a      	subs	r2, r1, r6
 800895c:	eba7 040c 	sub.w	r4, r7, ip
 8008960:	2800      	cmp	r0, #0
 8008962:	d162      	bne.n	8008a2a <__ieee754_fmod+0x17e>
 8008964:	4567      	cmp	r7, ip
 8008966:	bf38      	it	cc
 8008968:	f102 32ff 	addcc.w	r2, r2, #4294967295
 800896c:	2a00      	cmp	r2, #0
 800896e:	bfbc      	itt	lt
 8008970:	463c      	movlt	r4, r7
 8008972:	460a      	movlt	r2, r1
 8008974:	ea52 0104 	orrs.w	r1, r2, r4
 8008978:	d0c7      	beq.n	800890a <__ieee754_fmod+0x5e>
 800897a:	f5b2 1f80 	cmp.w	r2, #1048576	@ 0x100000
 800897e:	db69      	blt.n	8008a54 <__ieee754_fmod+0x1a8>
 8008980:	494c      	ldr	r1, [pc, #304]	@ (8008ab4 <__ieee754_fmod+0x208>)
 8008982:	428b      	cmp	r3, r1
 8008984:	db6c      	blt.n	8008a60 <__ieee754_fmod+0x1b4>
 8008986:	f5a2 1280 	sub.w	r2, r2, #1048576	@ 0x100000
 800898a:	432a      	orrs	r2, r5
 800898c:	f203 33ff 	addw	r3, r3, #1023	@ 0x3ff
 8008990:	ea42 5103 	orr.w	r1, r2, r3, lsl #20
 8008994:	4620      	mov	r0, r4
 8008996:	e7aa      	b.n	80088ee <__ieee754_fmod+0x42>
 8008998:	3a01      	subs	r2, #1
 800899a:	005b      	lsls	r3, r3, #1
 800899c:	e7c3      	b.n	8008926 <__ieee754_fmod+0x7a>
 800899e:	4a45      	ldr	r2, [pc, #276]	@ (8008ab4 <__ieee754_fmod+0x208>)
 80089a0:	ea4f 23c9 	mov.w	r3, r9, lsl #11
 80089a4:	2b00      	cmp	r3, #0
 80089a6:	ddc0      	ble.n	800892a <__ieee754_fmod+0x7e>
 80089a8:	3a01      	subs	r2, #1
 80089aa:	005b      	lsls	r3, r3, #1
 80089ac:	e7fa      	b.n	80089a4 <__ieee754_fmod+0xf8>
 80089ae:	ea4f 5229 	mov.w	r2, r9, asr #20
 80089b2:	f2a2 32ff 	subw	r2, r2, #1023	@ 0x3ff
 80089b6:	e7b8      	b.n	800892a <__ieee754_fmod+0x7e>
 80089b8:	3b01      	subs	r3, #1
 80089ba:	0049      	lsls	r1, r1, #1
 80089bc:	e7bc      	b.n	8008938 <__ieee754_fmod+0x8c>
 80089be:	4b3d      	ldr	r3, [pc, #244]	@ (8008ab4 <__ieee754_fmod+0x208>)
 80089c0:	ea4f 21c8 	mov.w	r1, r8, lsl #11
 80089c4:	2900      	cmp	r1, #0
 80089c6:	ddb9      	ble.n	800893c <__ieee754_fmod+0x90>
 80089c8:	3b01      	subs	r3, #1
 80089ca:	0049      	lsls	r1, r1, #1
 80089cc:	e7fa      	b.n	80089c4 <__ieee754_fmod+0x118>
 80089ce:	ea4f 5328 	mov.w	r3, r8, asr #20
 80089d2:	f2a3 33ff 	subw	r3, r3, #1023	@ 0x3ff
 80089d6:	e7b1      	b.n	800893c <__ieee754_fmod+0x90>
 80089d8:	1a80      	subs	r0, r0, r2
 80089da:	281f      	cmp	r0, #31
 80089dc:	dc0a      	bgt.n	80089f4 <__ieee754_fmod+0x148>
 80089de:	f202 411e 	addw	r1, r2, #1054	@ 0x41e
 80089e2:	fa09 f900 	lsl.w	r9, r9, r0
 80089e6:	fa2a f101 	lsr.w	r1, sl, r1
 80089ea:	ea41 0109 	orr.w	r1, r1, r9
 80089ee:	fa0a f700 	lsl.w	r7, sl, r0
 80089f2:	e7aa      	b.n	800894a <__ieee754_fmod+0x9e>
 80089f4:	4930      	ldr	r1, [pc, #192]	@ (8008ab8 <__ieee754_fmod+0x20c>)
 80089f6:	1a89      	subs	r1, r1, r2
 80089f8:	fa0a f101 	lsl.w	r1, sl, r1
 80089fc:	2700      	movs	r7, #0
 80089fe:	e7a4      	b.n	800894a <__ieee754_fmod+0x9e>
 8008a00:	1ac0      	subs	r0, r0, r3
 8008a02:	281f      	cmp	r0, #31
 8008a04:	dc0a      	bgt.n	8008a1c <__ieee754_fmod+0x170>
 8008a06:	f203 461e 	addw	r6, r3, #1054	@ 0x41e
 8008a0a:	fa08 f800 	lsl.w	r8, r8, r0
 8008a0e:	fa2e f606 	lsr.w	r6, lr, r6
 8008a12:	ea46 0608 	orr.w	r6, r6, r8
 8008a16:	fa0e fc00 	lsl.w	ip, lr, r0
 8008a1a:	e79d      	b.n	8008958 <__ieee754_fmod+0xac>
 8008a1c:	4e26      	ldr	r6, [pc, #152]	@ (8008ab8 <__ieee754_fmod+0x20c>)
 8008a1e:	1af6      	subs	r6, r6, r3
 8008a20:	fa0e f606 	lsl.w	r6, lr, r6
 8008a24:	f04f 0c00 	mov.w	ip, #0
 8008a28:	e796      	b.n	8008958 <__ieee754_fmod+0xac>
 8008a2a:	4567      	cmp	r7, ip
 8008a2c:	bf38      	it	cc
 8008a2e:	f102 32ff 	addcc.w	r2, r2, #4294967295
 8008a32:	2a00      	cmp	r2, #0
 8008a34:	da05      	bge.n	8008a42 <__ieee754_fmod+0x196>
 8008a36:	0ffa      	lsrs	r2, r7, #31
 8008a38:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8008a3c:	007f      	lsls	r7, r7, #1
 8008a3e:	3801      	subs	r0, #1
 8008a40:	e78b      	b.n	800895a <__ieee754_fmod+0xae>
 8008a42:	ea52 0104 	orrs.w	r1, r2, r4
 8008a46:	f43f af60 	beq.w	800890a <__ieee754_fmod+0x5e>
 8008a4a:	0fe1      	lsrs	r1, r4, #31
 8008a4c:	eb01 0142 	add.w	r1, r1, r2, lsl #1
 8008a50:	0067      	lsls	r7, r4, #1
 8008a52:	e7f4      	b.n	8008a3e <__ieee754_fmod+0x192>
 8008a54:	0fe1      	lsrs	r1, r4, #31
 8008a56:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8008a5a:	0064      	lsls	r4, r4, #1
 8008a5c:	3b01      	subs	r3, #1
 8008a5e:	e78c      	b.n	800897a <__ieee754_fmod+0xce>
 8008a60:	1ac9      	subs	r1, r1, r3
 8008a62:	2914      	cmp	r1, #20
 8008a64:	dc0a      	bgt.n	8008a7c <__ieee754_fmod+0x1d0>
 8008a66:	f203 431e 	addw	r3, r3, #1054	@ 0x41e
 8008a6a:	fa02 f303 	lsl.w	r3, r2, r3
 8008a6e:	40cc      	lsrs	r4, r1
 8008a70:	4323      	orrs	r3, r4
 8008a72:	410a      	asrs	r2, r1
 8008a74:	ea42 0105 	orr.w	r1, r2, r5
 8008a78:	4618      	mov	r0, r3
 8008a7a:	e738      	b.n	80088ee <__ieee754_fmod+0x42>
 8008a7c:	291f      	cmp	r1, #31
 8008a7e:	dc07      	bgt.n	8008a90 <__ieee754_fmod+0x1e4>
 8008a80:	f203 431e 	addw	r3, r3, #1054	@ 0x41e
 8008a84:	40cc      	lsrs	r4, r1
 8008a86:	fa02 f303 	lsl.w	r3, r2, r3
 8008a8a:	4323      	orrs	r3, r4
 8008a8c:	462a      	mov	r2, r5
 8008a8e:	e7f1      	b.n	8008a74 <__ieee754_fmod+0x1c8>
 8008a90:	f1c3 437f 	rsb	r3, r3, #4278190080	@ 0xff000000
 8008a94:	f503 037f 	add.w	r3, r3, #16711680	@ 0xff0000
 8008a98:	f503 437b 	add.w	r3, r3, #64256	@ 0xfb00
 8008a9c:	33e2      	adds	r3, #226	@ 0xe2
 8008a9e:	fa42 f303 	asr.w	r3, r2, r3
 8008aa2:	e7f3      	b.n	8008a8c <__ieee754_fmod+0x1e0>
 8008aa4:	7fefffff 	.word	0x7fefffff
 8008aa8:	7ff00000 	.word	0x7ff00000
 8008aac:	08008e68 	.word	0x08008e68
 8008ab0:	fffffbed 	.word	0xfffffbed
 8008ab4:	fffffc02 	.word	0xfffffc02
 8008ab8:	fffffbe2 	.word	0xfffffbe2

08008abc <_init>:
 8008abc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008abe:	bf00      	nop
 8008ac0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008ac2:	bc08      	pop	{r3}
 8008ac4:	469e      	mov	lr, r3
 8008ac6:	4770      	bx	lr

08008ac8 <_fini>:
 8008ac8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008aca:	bf00      	nop
 8008acc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008ace:	bc08      	pop	{r3}
 8008ad0:	469e      	mov	lr, r3
 8008ad2:	4770      	bx	lr
